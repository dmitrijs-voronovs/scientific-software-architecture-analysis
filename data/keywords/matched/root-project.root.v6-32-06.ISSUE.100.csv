id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/14512:324,reliability,Fail,Failed,324,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3544,reliability,Fail,Failure,3544,"ClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.Deri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3748,reliability,Fail,Failure,3748,"rnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3953,reliability,Fail,Failure,3953,"(0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4080,reliability,FAIL,FAILED,4080,"gCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4918,reliability,FAIL,FAILED,4918,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4952,reliability,FAIL,FAILED,4952,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4992,reliability,FAIL,FAILED,4992,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:28,safety,test,test,28,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:130,safety,test,test,130,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:169,safety,test,test-TClingTest,169,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:207,safety,test,test,207,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:241,safety,Test,Test,241,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:273,safety,test,test-TClingTest,273,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:452,safety,Test,Test,452,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:659,safety,test,tests,659,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:672,safety,test,test,672,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:705,safety,test,test,705,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:745,safety,test,tests,745,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:1612,safety,test,tests,1612,:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.FunctionWrapperPointer (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperReference. [ OK ] TClingCallFunc.FunctionWrapperReference (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVoid. [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.Templa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:1668,safety,test,tests,1668, test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.FunctionWrapperPointer (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperReference. [ OK ] TClingCallFunc.FunctionWrapperReference (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVoid. [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.Functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3160,safety,test,tests,3160,"erVoid. [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3216,safety,test,tests,3216,". [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [-------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3504,safety,test,test,3504,"unctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3708,safety,test,test,3708,"lingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3913,safety,test,test,3913,"] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4226,safety,test,tests,4226,"lingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4288,safety,test,tests,4288," OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4741,safety,test,tests,4741,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4804,safety,test,test,4804,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4848,safety,test,tests,4848,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4861,safety,test,test,4861,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4909,safety,test,tests,4909,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4929,safety,test,test,4929,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4999,safety,TEST,TEST,4999,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5025,safety,TEST,TEST,5025,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5037,safety,Error,Error,5037,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5087,safety,modul,modules,5087,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5132,safety,error,error,5132,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5202,safety,test,tests,5202,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:28,testability,test,test,28,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:130,testability,test,test,130,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:169,testability,test,test-TClingTest,169,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:207,testability,test,test,207,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:241,testability,Test,Test,241,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:273,testability,test,test-TClingTest,273,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:452,testability,Test,Test,452,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:659,testability,test,tests,659,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:672,testability,test,test,672,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:705,testability,test,test,705,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:745,testability,test,tests,745,TClingDataMemberInfo.Offset test fails on s390x; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. A new test was added to gtest-core-metacling-test-TClingTest in root 6.30.04. This test fails on s390x. ``` 144/1248 Test #101: gtest-core-metacling-test-TClingTest ................................***Failed 7.66 sec. Running main() from /builddir/build/BUILD/googletest-release-1.11.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:1612,testability,test,tests,1612,:RNTuple.TClassEBO. [==========] Running 33 tests from 4 test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.FunctionWrapperPointer (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperReference. [ OK ] TClingCallFunc.FunctionWrapperReference (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVoid. [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.Templa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:1668,testability,test,tests,1668, test suites. [----------] Global test environment set-up. [----------] 9 tests from TClingTests. [ RUN ] TClingTests.GenerateDictionaryErrorHandling. [ OK ] TClingTests.GenerateDictionaryErrorHandling (0 ms). [ RUN ] TClingTests.GenerateDictionaryRegression. [ OK ] TClingTests.GenerateDictionaryRegression (2404 ms). [ RUN ] TClingTests.GenerateDictionary. [ OK ] TClingTests.GenerateDictionary (3057 ms). [ RUN ] TClingTests.GetEnumWithSameVariableName. [ OK ] TClingTests.GetEnumWithSameVariableName (0 ms). [ RUN ] TClingTests.MakeInterpreterValue. [ OK ] TClingTests.MakeInterpreterValue (2 ms). [ RUN ] TClingTests.GetClassSharedLibs. [ OK ] TClingTests.GetClassSharedLibs (0 ms). [ RUN ] TClingTests.GetSharedLibDeps. [ OK ] TClingTests.GetSharedLibDeps (722 ms). [ RUN ] TClingTests.ClingLookupHelper. [ OK ] TClingTests.ClingLookupHelper (985 ms). [ RUN ] TClingTests.ROOT10499. [ OK ] TClingTests.ROOT10499 (5 ms). [----------] 9 tests from TClingTests (7180 ms total). [----------] 15 tests from TClingCallFunc. [ RUN ] TClingCallFunc.Void. [ OK ] TClingCallFunc.Void (1 ms). [ RUN ] TClingCallFunc.Conversions. [ OK ] TClingCallFunc.Conversions (2 ms). [ RUN ] TClingCallFunc.FunctionWrapper. [ OK ] TClingCallFunc.FunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperPointer. [ OK ] TClingCallFunc.FunctionWrapperPointer (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperReference. [ OK ] TClingCallFunc.FunctionWrapperReference (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVoid. [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.Functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3160,testability,test,tests,3160,"erVoid. [ OK ] TClingCallFunc.FunctionWrapperVoid (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3216,testability,test,tests,3216,". [ RUN ] TClingCallFunc.FunctionWrapperRValueRefArg. [ OK ] TClingCallFunc.FunctionWrapperRValueRefArg (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperVariadic. [ OK ] TClingCallFunc.FunctionWrapperVariadic (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperDefaultArg. [ OK ] TClingCallFunc.FunctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [-------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3504,testability,test,test,3504,"unctionWrapperDefaultArg (1 ms). [ RUN ] TClingCallFunc.TemplateFunctionWrapper. [ OK ] TClingCallFunc.TemplateFunctionWrapper (1 ms). [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType. [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3708,testability,test,test,3708,"lingCallFunc.FunctionWrapperIncompleteReturnType (1 ms). [ RUN ] TClingCallFunc.MemberMethodWrapper. [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperNodiscard. [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:3913,testability,test,test,3913,"] TClingCallFunc.FunctionWrapperNodiscard (0 ms). [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr. [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms). [ RUN ] TClingCallFunc.ROOT_6523. [ OK ] TClingCallFunc.ROOT_6523 (7 ms). [----------] 15 tests from TClingCallFunc (56 ms total). [----------] 4 tests from TClingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4226,testability,test,tests,4226,"lingDataMemberInfo. [ RUN ] TClingDataMemberInfo.UsingDecls. [ OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4288,testability,test,tests,4288," OK ] TClingDataMemberInfo.UsingDecls (1 ms). [ RUN ] TClingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4741,testability,test,tests,4741,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4804,testability,test,test,4804,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4848,testability,test,tests,4848,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4861,testability,test,test,4861,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4909,testability,test,tests,4909,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4929,testability,test,test,4929,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4999,testability,TEST,TEST,4999,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5025,testability,TEST,TEST,5025,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5202,testability,test,tests,5202,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5457,testability,context,context,5457,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4342,usability,Prototyp,Prototype,4342,"lingDataMemberInfo.Lookup. [ OK ] TClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:4377,usability,Prototyp,Prototype,4377,"ClingDataMemberInfo.Lookup (0 ms). [ RUN ] TClingDataMemberInfo.Offset. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5037,usability,Error,Error,5037,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/issues/14512:5132,usability,error,error,5132,"t-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure. Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure. Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(). Actual: false. Expected: true. /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure. Expected equality of these values:. 3000. *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(). Which is: 0. [ FAILED ] TClingDataMemberInfo.Offset (7 ms). [ RUN ] TClingDataMemberInfo.issue8553. [ OK ] TClingDataMemberInfo.issue8553 (4 ms). [----------] 4 tests from TClingDataMemberInfo (14 ms total). [----------] 5 tests from TClingMethodInfo. [ RUN ] TClingMethodInfo.Prototype. [ OK ] TClingMethodInfo.Prototype (0 ms). [ RUN ] TClingMethodInfo.ROOT10789. [ OK ] TClingMethodInfo.ROOT10789 (2 ms). [ RUN ] TClingMethodInfo.DerivedCtorROOT11010. [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms). [ RUN ] TClingMethodInfo.TemplateFun. [ OK ] TClingMethodInfo.TemplateFun (1 ms). [ RUN ] TClingMethodInfo.Ctors. [ OK ] TClingMethodInfo.Ctors (4 ms). [----------] 5 tests from TClingMethodInfo (90 ms total). [----------] Global test environment tear-down. [==========] 33 tests from 4 test suites ran. (7341 ms total). [ PASSED ] 32 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] TClingDataMemberInfo.Offset. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ```. ### Reproducer. Build root 6.30.02 for s390x. Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x. Fedora Linux 39 for s390x. Fedora Linux 38 for s390x. RHEL 9 + EPEL 9 for s390x. RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14512
https://github.com/root-project/root/pull/14514:7,availability,error,errors,7,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:17,availability,failur,failures,17,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:66,availability,error,errors,66,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:76,availability,failur,failures,76,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:17,deployability,fail,failures,17,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:76,deployability,fail,failures,76,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:7,performance,error,errors,7,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:17,performance,failur,failures,17,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:66,performance,error,errors,66,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:76,performance,failur,failures,76,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:17,reliability,fail,failures,17,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:76,reliability,fail,failures,76,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:7,safety,error,errors,7,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:66,safety,error,errors,66,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:7,usability,error,errors,7,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14514:66,usability,error,errors,66,"Better errors on failures; EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14514
https://github.com/root-project/root/pull/14519:168,availability,cluster,clusters,168,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:21,deployability,version,version,21,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:168,deployability,cluster,clusters,168,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:21,integrability,version,version,21,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:21,modifiability,version,version,21,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:414,modifiability,extens,extension,414,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:57,performance,parallel,parallel,57,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:230,performance,synch,synchronization,230,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:267,performance,synch,synchronization,267,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:359,performance,parallel,parallel,359,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/pull/14519:139,testability,context,context,139,"[ntuple] Add initial version of RNTupleParallelWriter; A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14519
https://github.com/root-project/root/issues/14520:386,availability,failur,failure,386,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:521,availability,Error,Error,521,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2119,availability,Error,Error,2119,"FIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (althoug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2560,availability,Error,Error,2560,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2575,availability,Error,Error,2575,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2847,availability,error,error,2847,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2919,availability,error,error,2919,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3352,availability,failur,failures,3352,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3454,availability,Operat,Operating,3454,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:8,deployability,build,building,8,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:183,deployability,fail,failing,183,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:196,deployability,build,building,196,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:299,deployability,build,build,299,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:349,deployability,fail,fail,349,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:386,deployability,fail,failure,386,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:394,deployability,depend,depends,394,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:414,deployability,version,version,414,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:580,deployability,build,build,580,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:586,deployability,build,builds,586,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:598,deployability,build,build,598,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:633,deployability,build,build-Release,633,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:676,deployability,fail,failed,676,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:874,deployability,build,build,874,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:880,deployability,build,builds,880,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:892,deployability,build,build,892,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:927,deployability,build,build,927,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:935,deployability,log,log,935,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:949,deployability,log,log,949,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:969,deployability,build,build,969,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:1057,deployability,Build,Building,1057,"ions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:1096,deployability,build,build,1096,"] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: ***",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2143,deployability,upgrad,upgrade,2143,"64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2247,deployability,fail,failed,2247,"le descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any id",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2264,deployability,instal,installation,2264," make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2285,deployability,instal,install-err,2285," for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2297,deployability,log,log,2297,"inished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2634,deployability,build,build,2634,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2640,deployability,build,builds,2640,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2652,deployability,build,build,2652,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2712,deployability,instal,install-Release-impl,2712,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2761,deployability,fail,failed,2761,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2800,deployability,build,build,2800,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2823,deployability,instal,install,2823,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2879,deployability,log,log,2879,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3108,deployability,build,build,3108,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3352,deployability,fail,failures,3352,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3398,deployability,version,version,3398,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3422,deployability,Instal,Installation,3422,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:394,integrability,depend,depends,394,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:414,integrability,version,version,414,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:657,integrability,messag,message,657,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2323,integrability,repositor,repository,2323,"uded from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2742,integrability,messag,message,2742,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3398,integrability,version,version,3398,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:657,interoperability,messag,message,657,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2323,interoperability,repositor,repository,2323,"uded from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2742,interoperability,messag,message,2742,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:394,modifiability,depend,depends,394,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:414,modifiability,version,version,414,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2143,modifiability,upgrad,upgrade,2143,"64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3398,modifiability,version,version,3398,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:290,performance,parallel,parallel,290,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:386,performance,failur,failure,386,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:521,performance,Error,Error,521,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2119,performance,Error,Error,2119,"FIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (althoug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2560,performance,Error,Error,2560,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2575,performance,Error,Error,2575,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2847,performance,error,error,2847,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2919,performance,error,error,2919,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3352,performance,failur,failures,3352,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:183,reliability,fail,failing,183,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:349,reliability,fail,fail,349,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:386,reliability,fail,failure,386,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:676,reliability,fail,failed,676,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2247,reliability,fail,failed,2247,"le descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any id",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2761,reliability,fail,failed,2761,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3352,reliability,fail,failures,3352,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:394,safety,depend,depends,394,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:521,safety,Error,Error,521,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:935,safety,log,log,935,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:949,safety,log,log,949,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2119,safety,Error,Error,2119,"FIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (althoug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2297,safety,log,log,2297,"inished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2560,safety,Error,Error,2560,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2575,safety,Error,Error,2575,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2847,safety,error,error,2847,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2879,safety,log,log,2879,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2919,safety,error,error,2919,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:935,security,log,log,935,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:949,security,log,log,949,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2297,security,log,log,2297,"inished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2879,security,log,log,2879,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:394,testability,depend,depends,394,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:935,testability,log,log,935,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:949,testability,log,log,949,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2297,testability,log,log,2297,"inished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2879,testability,log,log,2879,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:3501,testability,context,context,3501,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:521,usability,Error,Error,521,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:668,usability,Command,Command,668,"Problem building ROOT with gcc 11, Ubuntu 22.04 on GitHub Actions; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:1265,usability,Stop,Stop,1265,"r projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857. ```. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:1591,usability,clear,clearing,1591,"OT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):. Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='. See also. /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. ```. the log file says. ```. build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode."". ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runne",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2119,usability,Error,Error,2119,"FIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0. make[7]: *** read jobs pipe: Bad file descriptor. Stop. make[7]: *** Waiting for unfinished jobs.... In file included from ../../src/tbb/concurrent_hash_map.cpp:17:. ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (althoug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2474,usability,Stop,Stop,2474,"se::hash_map_base()’:. ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2560,usability,Error,Error,2560,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2575,usability,Error,Error,2575,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2753,usability,Command,Command,2753,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2847,usability,error,error,2847,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/issues/14520:2919,usability,error,error,2919,"rent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]. 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));. | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here. 93 | struct bucket : tbb::internal::no_copy {. | ^~~~~~. make[6]: *** [Makefile:28: tbb] Error 2. ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says. ```. [I] No git repository info found. Trying to interpret VERSION_INFO. [I] The XrdVersion.hh file already exists. gmake[7]: *** read jobs pipe: Bad file descriptor. Stop. gmake[7]: *** Waiting for unfinished jobs.... gmake[6]: *** [Makefile:136: all] Error 2. CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):. Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'. ```. The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas? ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14520
https://github.com/root-project/root/pull/14521:197,availability,consist,consistently,197,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:355,availability,consist,consistently,355,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:223,energy efficiency,current,currently,223,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:35,integrability,pub,public,35,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:56,integrability,interfac,interface,56,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:56,interoperability,interfac,interface,56,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:56,modifiability,interfac,interface,56,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:9,safety,avoid,avoid,9,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:115,usability,user,user-provided,115,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:197,usability,consist,consistently,197,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14521:355,usability,consist,consistently,355,"[ntuple] avoid page source/sink in public reader/writer interface; **Edit**: also removes the `nullptr` checks for user-provided unique pointers. It seems like non-neglible amount of code (if done consistently, which it is currently not) for little benefit. Such cases will crash immediately with a null pointer de-reference. We can still add such checks consistently at a later point.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14521
https://github.com/root-project/root/pull/14523:1,energy efficiency,core,core,1,"[core/zip+lzma] Properly account for header size; The compression algorithms only see the buffers without the header, so the sizes have to be adjusted accordingly. Fixes https://github.com/root-project/root/issues/14508. FYI @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14523:90,integrability,buffer,buffers,90,"[core/zip+lzma] Properly account for header size; The compression algorithms only see the buffers without the header, so the sizes have to be adjusted accordingly. Fixes https://github.com/root-project/root/issues/14508. FYI @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14523
https://github.com/root-project/root/pull/14525:1,energy efficiency,core,core,1,[core] Add `TString::size_type` member; The `size_type` member is required by the helper macros in the new CPyCppyy that can be used to declare string converters. See also https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14525
https://github.com/root-project/root/pull/14525:82,usability,help,helper,82,[core] Add `TString::size_type` member; The `size_type` member is required by the helper macros in the new CPyCppyy that can be used to declare string converters. See also https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14525
https://github.com/root-project/root/issues/14528:251,availability,error,error,251,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:360,availability,error,error,360,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:534,availability,error,error,534,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:660,availability,Operat,Operating,660,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:601,deployability,version,version,601,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:619,deployability,Instal,Installation,619,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:601,integrability,version,version,601,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:178,modifiability,variab,variable,178,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:601,modifiability,version,version,601,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:251,performance,error,error,251,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:360,performance,error,error,360,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:534,performance,error,error,534,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:280,reliability,doe,does,280,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:640,reliability,Doe,Doesn,640,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:251,safety,error,error,251,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:360,safety,error,error,360,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:534,safety,error,error,534,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:698,testability,context,context,698,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:200,usability,user,user,200,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:251,usability,error,error,251,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:360,usability,error,error,360,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:502,usability,document,documentation,502,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/issues/14528:534,usability,error,error,534,"Bug in TFoam::GetIntNorm; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14528
https://github.com/root-project/root/pull/14529:229,deployability,updat,updated,229,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14529:44,modifiability,paramet,parameters,44,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14529:139,modifiability,paramet,parameters,139,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14529:199,safety,test,tested,199,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14529:229,safety,updat,updated,229,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14529:229,security,updat,updated,229,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14529:199,testability,test,tested,199,"[math] Clarify meaning of TFoam::GetIntNorm parameters; # This Pull request:. ## Changes or fixes:. Clarifies meaning of TFoam::GetIntNorm parameters, as requested by @mchrzasz. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14528.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14529
https://github.com/root-project/root/pull/14530:44,integrability,interfac,interface,44,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:126,integrability,interfac,interface,126,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:195,integrability,interfac,interface,195,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:44,interoperability,interfac,interface,44,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:126,interoperability,interfac,interface,126,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:195,interoperability,interfac,interface,195,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:44,modifiability,interfac,interface,44,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:126,modifiability,interfac,interface,126,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:195,modifiability,interfac,interface,195,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14530:75,usability,support,support,75,[ntuple] remove page source from pulic view interface; Changes the RNTuple support in RBrowser from page source to the reader interface along the way. It turns out that the views are not only an interface for zero-copy reading but they also provide a quite useful way to read individual fields from a reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14530
https://github.com/root-project/root/pull/14531:140,interoperability,bind,binding,140,[ntuple] add token-based addressing to REntry; Allows to search for field names only once and not every time the top-level fields get a new binding. @Dr15Jones This should improve the writing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:140,modifiability,bind,binding,140,[ntuple] add token-based addressing to REntry; Allows to search for field names only once and not every time the top-level fields get a new binding. @Dr15Jones This should improve the writing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:104,performance,time,time,104,[ntuple] add token-based addressing to REntry; Allows to search for field names only once and not every time the top-level fields get a new binding. @Dr15Jones This should improve the writing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/pull/14531:13,security,token,token-based,13,[ntuple] add token-based addressing to REntry; Allows to search for field names only once and not every time the top-level fields get a new binding. @Dr15Jones This should improve the writing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14531
https://github.com/root-project/root/issues/14532:279,availability,Operat,Operating,279,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:231,deployability,version,version,231,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:249,deployability,Instal,Installation,249,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:231,integrability,version,version,231,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:231,modifiability,version,version,231,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:179,security,team,team,179,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:317,testability,context,context,317,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/issues/14532:173,usability,Tool,Tools,173,Include the open source Tex Gyre Heros clone of Helvetica in ROOT fonts; ### Explain what you would like to see improved and how. As per discussion with CMS Common Analysis Tools team. The title of this issue says it all. ### ROOT version. all. ### Installation method. All. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14532
https://github.com/root-project/root/pull/14534:84,integrability,pub,public,84,[ntuple] move RNTupleMerger to Internal namespace; Temporary until we find a proper public `Merge()` signature that works without page sinks and sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14534
https://github.com/root-project/root/pull/14534:101,security,sign,signature,101,[ntuple] move RNTupleMerger to Internal namespace; Temporary until we find a proper public `Merge()` signature that works without page sinks and sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14534
https://github.com/root-project/root/pull/14535:86,availability,servic,services,86,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:60,deployability,fail,fails,60,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:86,deployability,servic,services,86,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:138,deployability,build,build,138,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:86,integrability,servic,services,86,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:86,modifiability,servic,services,86,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:60,reliability,fail,fails,60,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:33,safety,test,test,33,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:151,safety,test,testReport,151,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:185,safety,test,test,185,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:33,testability,test,test,33,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:151,testability,test,testReport,151,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14535:185,testability,test,test,185,[tmva] Relax float comparison in test; This sometimes still fails e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194564/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14535
https://github.com/root-project/root/pull/14536:236,safety,test,tested,236,[cmake] ROOTConfig: if not builtin Vdt find it; # This Pull request:. Fixes ROOTConfig when Vdt was built externally. ## Changes or fixes:. https://github.com/root-project/root/issues/14113#issuecomment-1925245792. ## Checklist:. - [x] tested changes locally. This PR fixes #14113.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14536
https://github.com/root-project/root/pull/14536:236,testability,test,tested,236,[cmake] ROOTConfig: if not builtin Vdt find it; # This Pull request:. Fixes ROOTConfig when Vdt was built externally. ## Changes or fixes:. https://github.com/root-project/root/issues/14113#issuecomment-1925245792. ## Checklist:. - [x] tested changes locally. This PR fixes #14113.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14536
https://github.com/root-project/root/issues/14537:423,availability,error,errors,423,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:857,availability,Operat,Operating,857,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:809,deployability,version,version,809,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:827,deployability,Instal,Installation,827,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:809,integrability,version,version,809,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:809,modifiability,version,version,809,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:423,performance,error,errors,423,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:423,safety,error,errors,423,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:895,testability,context,context,895,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14537:423,usability,error,errors,423,"[ROOT-9277] Unresolved symbol __emutls_v._ZSt11__once_call; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:. ```. IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'! ```. ### Reproducer. ```cpp. std::async([]() { return 1; }).get();. ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14537
https://github.com/root-project/root/issues/14538:163,deployability,automat,automatic,163,"[ROOT-5125] Autozoom functionality for TH1/TH2/TH3 or TAxis classes; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5125. I missing feature of automatic zoom in the histogram to the range where histogram is filled. It could be very useful for 1-D histograms with single sharp peak - in this case user need many selections on axis before necessary range will be shown. This could be menu function of TH1/TH2/TH3 class or TAxis class. If interesting, I could provide implementation for this. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:163,testability,automat,automatic,163,"[ROOT-5125] Autozoom functionality for TH1/TH2/TH3 or TAxis classes; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5125. I missing feature of automatic zoom in the histogram to the range where histogram is filled. It could be very useful for 1-D histograms with single sharp peak - in this case user need many selections on axis before necessary range will be shown. This could be menu function of TH1/TH2/TH3 class or TAxis class. If interesting, I could provide implementation for this. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:569,testability,context,context,569,"[ROOT-5125] Autozoom functionality for TH1/TH2/TH3 or TAxis classes; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5125. I missing feature of automatic zoom in the histogram to the range where histogram is filled. It could be very useful for 1-D histograms with single sharp peak - in this case user need many selections on axis before necessary range will be shown. This could be menu function of TH1/TH2/TH3 class or TAxis class. If interesting, I could provide implementation for this. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:316,usability,user,user,316,"[ROOT-5125] Autozoom functionality for TH1/TH2/TH3 or TAxis classes; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5125. I missing feature of automatic zoom in the histogram to the range where histogram is filled. It could be very useful for 1-D histograms with single sharp peak - in this case user need many selections on axis before necessary range will be shown. This could be menu function of TH1/TH2/TH3 class or TAxis class. If interesting, I could provide implementation for this. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14538:402,usability,menu,menu,402,"[ROOT-5125] Autozoom functionality for TH1/TH2/TH3 or TAxis classes; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5125. I missing feature of automatic zoom in the histogram to the range where histogram is filled. It could be very useful for 1-D histograms with single sharp peak - in this case user need many selections on axis before necessary range will be shown. This could be menu function of TH1/TH2/TH3 class or TAxis class. If interesting, I could provide implementation for this. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14538
https://github.com/root-project/root/issues/14539:12,availability,Replic,Replicate,12,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:356,energy efficiency,draw,drawoption,356,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:375,energy efficiency,draw,drawing,375,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:490,energy efficiency,draw,drawn,490,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:636,testability,context,context,636,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:332,usability,user,user,332,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:434,usability,user,user,434,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14539:559,usability,behavi,behavior,559,"[ROOT-9138] Replicate TH1::SetOption to TGraph; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-9138. There has been a request on the forum (https://root-forum.cern.ch/t/setoption-method-in-tgraph-tgrapherrors/27141) to add functionality to TGraph matching that provided with TH1:SetOption. This would permit the user to set the default drawoption without drawing the graph prior to returning the object to the end user. TGraph::SetDrawOption requires that the object is drawn first, perhaps this can be changed so that it sets the default behavior instead. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14539
https://github.com/root-project/root/issues/14540:1085,availability,state,state,1085,"d like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2792,availability,Operat,Operating,2792,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:763,deployability,stage,stages,763,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1679,deployability,version,version,1679,"ergy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1721,deployability,scale,scale,1721,"loat et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1754,deployability,version,version,1754,"er 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2686,deployability,version,version,2686,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2744,deployability,version,version,2744,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2762,deployability,Instal,Installation,2762,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:637,energy efficiency,energ,energy,637,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:681,energy efficiency,energ,energy,681,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:703,energy efficiency,energ,energy,703,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1221,energy efficiency,energ,energy,1221," the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of poi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1301,energy efficiency,energ,energy,1301,"/* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. priv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1340,energy efficiency,optim,optimize,1340,"on(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1490,energy efficiency,reduc,reduce,1490,"();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1539,energy efficiency,energ,energy,1539," eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1571,energy efficiency,energ,energy,1571,"Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, prov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1721,energy efficiency,scale,scale,1721,"loat et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1731,energy efficiency,energ,energy,1731,". };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei].",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:179,integrability,schema,schema,179,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:329,integrability,pub,public,329,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:567,integrability,pub,public,567,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:618,integrability,pub,public,618,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1085,integrability,state,state,1085,"d like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1679,integrability,version,version,1679,"ergy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1754,integrability,version,version,1754,"er 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2686,integrability,version,version,2686,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2744,integrability,version,version,2744,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:393,interoperability,coordinat,coordinates,393,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:459,interoperability,coordinat,coordinates,459,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:846,interoperability,coordinat,coordinates,846,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:977,interoperability,coordinat,coordinates,977,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:268,modifiability,scenario,scenario,268,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1164,modifiability,evolv,evolves,1164,"Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1646,modifiability,paramet,parameters,1646,"x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evoluti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1679,modifiability,version,version,1679,"ergy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1721,modifiability,scal,scale,1721,"loat et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1754,modifiability,version,version,1754,"er 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2175,modifiability,variab,variable,2175,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2686,modifiability,version,version,2686,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2744,modifiability,version,version,2744,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:38,performance,I/O,I/O,38,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1127,performance,parallel,parallel,1127,"//its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1340,performance,optimiz,optimize,1340,"on(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1418,performance,disk,disk,1418,"oat y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1721,performance,scale,scale,1721,"loat et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2353,performance,Disk,Disk,2353,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:598,safety,detect,detector,598,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1637,safety,detect,detector,1637,"gy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:598,security,detect,detector,598,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:607,security,sign,signal,607,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1637,security,detect,detector,1637,"gy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:801,testability,Simpl,Simplest,801,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1177,testability,Simpl,Simplest,1177,"hema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:2830,testability,context,context,2830,"nates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* > m_hits;. };. ```. iii) Disk space is very short! We cannot waste the single 32-bits word used by the STL vector... ```cpp. class Track { /* particle trajectory */. private:. unsigned int m_Nhits;. Hit* m_hits; //[m_Nhits]. };. ```. Please, provide some working example that shows how to write and read all these 3 evolutions of Track (you may use whatever version of Hits). . [Courtesy of Diego Casadei]. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:20,usability,Document,Documentation,20,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:42,usability,custom,customization,42,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:196,usability,support,support,196,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:229,usability,User,Users,229,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:236,usability,Guid,Guide,236,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:801,usability,Simpl,Simplest,801,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:889,usability,user,users,889,"[ROOT-5157] Enhance Documentation for I/O customization rules; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5157. Chapter on schema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1177,usability,Simpl,Simplest,1177,"hema evolution support needs to be added to the Users' Guide. For example bases in the scenario:. ```cpp. class Position { /* point in 3D space */. public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14540:1326,usability,user,users,1326,"public:. Position(float x, float y, float z);. // get Cartesian coordinates. float x();. float y();. float z();. // get spherical coordinates. float r();. float phi();. float theta();. // get pseudorapidity. float eta();. };. class Hit : public Position { /* localized detector signal */. public:. Hit(float energy, float x, float y, float z);. // get energy and transverse energy. float e();. float et();. };. ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)? * The next step is to consider collections of objects:. i) define. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit > m_hits;. };. ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp. class Track { /* particle trajectory */. private:. std::vector< Hit* >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14540
https://github.com/root-project/root/issues/14541:393,availability,Operat,Operating,393,"[ROOT-6193] Editor for palette axis cannot set title properties; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-6193. The style editor for the palette axis cannot change the title size, offset, etc of the palette axis, even though the title is displayed. Could this be added, please? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14541:345,deployability,version,version,345,"[ROOT-6193] Editor for palette axis cannot set title properties; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-6193. The style editor for the palette axis cannot change the title size, offset, etc of the palette axis, even though the title is displayed. Could this be added, please? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14541:363,deployability,Instal,Installation,363,"[ROOT-6193] Editor for palette axis cannot set title properties; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-6193. The style editor for the palette axis cannot change the title size, offset, etc of the palette axis, even though the title is displayed. Could this be added, please? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14541:345,integrability,version,version,345,"[ROOT-6193] Editor for palette axis cannot set title properties; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-6193. The style editor for the palette axis cannot change the title size, offset, etc of the palette axis, even though the title is displayed. Could this be added, please? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14541:345,modifiability,version,version,345,"[ROOT-6193] Editor for palette axis cannot set title properties; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-6193. The style editor for the palette axis cannot change the title size, offset, etc of the palette axis, even though the title is displayed. Could this be added, please? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14541:431,testability,context,context,431,"[ROOT-6193] Editor for palette axis cannot set title properties; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-6193. The style editor for the palette axis cannot change the title size, offset, etc of the palette axis, even though the title is displayed. Could this be added, please? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14541
https://github.com/root-project/root/issues/14542:871,availability,Operat,Operating,871,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:756,deployability,Updat,Update,756,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:823,deployability,version,version,823,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:841,deployability,Instal,Installation,841,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:556,energy efficiency,Draw,Draw,556,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:823,integrability,version,version,823,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:21,interoperability,specif,specified,21,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:227,interoperability,specif,specified,227,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:823,modifiability,version,version,823,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:756,safety,Updat,Update,756,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:784,safety,input,input,784,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:756,security,Updat,Update,756,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:909,testability,context,context,909,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14542:784,usability,input,input,784,"[ROOT-8132] TF1 with specified fill attributes produces binned plot; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8132. I expect, when fill attributes are specified, TF1 just fill area under the function. But result is binned plot, like shown in attachment. Macro reproduced the plot. ![canvas](https://github.com/root-project/root/assets/15638895/85ad3901-aa51-4747-abef-648c0514edd7). ### Reproducer. ```cpp. void tf1_fill() {. TFile::Open(""danilo6.root"");. gFile->Get(""canvas;1"")->Draw();. TH1* hist = (TH1*) gPad->GetListOfPrimitives()->FindObject(""Hist_x"");. TF1* ff = (TF1*) hist->GetListOfFunctions()->FindObject(""fit_x"");. ff->SetFillStyle(1001);. ff->SetFillColor(7);. gPad->Update();. }. ```. Find the input file in the Jira issue. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14542
https://github.com/root-project/root/issues/14543:307,deployability,automat,automatically,307,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:358,deployability,automat,automatic,358,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:550,deployability,Log,Log,550,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:815,deployability,patch,patch,815,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:887,deployability,patch,patch,887,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:906,deployability,patch,patch,906,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:975,deployability,patch,patch,975,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:114,energy efficiency,current,currently,114,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:265,energy efficiency,draw,drawn,265,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:342,energy efficiency,draw,drawn,342,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:496,integrability,configur,configurable,496,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:496,modifiability,configur,configurable,496,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:408,performance,time,time,408,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:550,safety,Log,Log,550,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:815,safety,patch,patch,815,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:887,safety,patch,patch,887,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:906,safety,patch,patch,906,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:975,safety,patch,patch,975,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:496,security,configur,configurable,496,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:550,security,Log,Log,550,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:815,security,patch,patch,815,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:887,security,patch,patch,887,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:906,security,patch,patch,906,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:975,security,patch,patch,975,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:307,testability,automat,automatically,307,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:358,testability,automat,automatic,358,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:550,testability,Log,Log,550,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14543:1042,testability,context,context,1042,"[ROOT-11018] Set 'symmetric' axis; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds. It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number. This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier. PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch). [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14543
https://github.com/root-project/root/issues/14544:778,availability,Operat,Operating,778,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:593,deployability,version,version,593,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:730,deployability,version,version,730,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:748,deployability,Instal,Installation,748,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:593,integrability,version,version,593,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:696,integrability,interfac,interface,696,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:730,integrability,version,version,730,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:696,interoperability,interfac,interface,696,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:593,modifiability,version,version,593,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:696,modifiability,interfac,interface,696,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:730,modifiability,version,version,730,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:663,performance,time,time,663,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:384,testability,understand,understanding,384,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:816,testability,context,context,816,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14544:372,usability,help,help,372,"[ROOT-8515] Make TEntryList class reference relevant; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed. Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface. Thanks! Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14544
https://github.com/root-project/root/issues/14545:331,availability,error,errors,331,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:352,availability,error,error,352,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:405,availability,error,error,405,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:458,availability,error,error,458,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:511,availability,error,error,511,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:557,availability,Error,Error,557,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:599,availability,Error,Error,599,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:641,availability,Error,Error,641,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:683,availability,Error,Error,683,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:983,availability,Operat,Operating,983,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:797,deployability,fail,fails,797,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:935,deployability,version,version,935,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:953,deployability,Instal,Installation,953,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:268,energy efficiency,draw,draw,268,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:302,energy efficiency,draw,drawn,302,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:935,integrability,version,version,935,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:789,interoperability,format,format,789,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:935,modifiability,version,version,935,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:331,performance,error,errors,331,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:352,performance,error,error,352,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:405,performance,error,error,405,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:458,performance,error,error,458,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:511,performance,error,error,511,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:557,performance,Error,Error,557,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:599,performance,Error,Error,599,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:641,performance,Error,Error,641,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:683,performance,Error,Error,683,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:797,reliability,fail,fails,797,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:331,safety,error,errors,331,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:352,safety,error,error,352,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:405,safety,error,error,405,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:458,safety,error,error,458,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:511,safety,error,error,511,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:557,safety,Error,Error,557,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:599,safety,Error,Error,599,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:641,safety,Error,Error,641,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:683,safety,Error,Error,683,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:1021,testability,context,context,1021,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:331,usability,error,errors,331,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:352,usability,error,error,352,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:405,usability,error,error,405,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:458,usability,error,error,458,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:511,usability,error,error,511,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:557,usability,Error,Error,557,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:599,usability,Error,Error,599,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:641,usability,Error,Error,641,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14545:683,usability,Error,Error,683,"[ROOT-10973] TASImage read from file not displayed (correctly); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,. most of the images are not drawn. On the terminal I see errors:. ```. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. libpng error: invalid screen gamma in png_set_gamma. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. Error in <TASImage::Paint>: no image set. ```. Seems to be, all images which are internally stored in PNG format, fails. Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14545
https://github.com/root-project/root/issues/14546:565,availability,sli,slightly,565,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:1047,availability,Operat,Operating,1047,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:999,deployability,version,version,999,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:1017,deployability,Instal,Installation,1017,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:999,integrability,version,version,999,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:56,interoperability,specif,specified,56,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:999,modifiability,version,version,999,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:565,reliability,sli,slightly,565,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:1085,testability,context,context,1085,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:745,usability,interact,interactive,745,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14546:939,usability,document,documentation,939,"[ROOT-10952] Vertical grid lines in ratioplot4.C not at specified positions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10952. In the bottom panel as created by the ratio plot tutorial `tutorials/hist/ratioplot4.C` vertical grid lines are set by. ```cpp. auto rp1 = new TRatioPlot(h1);. std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};. rp1->SetGridlines(lines);. ```. The lines at -3, -2, -1, 1 and three are displayed correctly but the lines at 0 and 2 (and the border line at 4) are slightly offset to lower values in the reference plot at [https://root.cern/doc/master/pict1_ratioplot4.C.png] If running the macro and by hand and resizing the lower panel in the interactive display, some of the vertical grid lines are also displayed at wrong (i.e. lower value) positions, although it are not necessarily the same ones as in the reference rendering in the documentation. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14546
https://github.com/root-project/root/issues/14547:360,availability,Operat,Operating,360,[ROOT-9200] With Cocoa backend sometimes need two ProcessEvents to show Canvas; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9200. See https://root-forum.cern.ch/t/canvas-will-not-show/27582/11. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14547
https://github.com/root-project/root/issues/14547:312,deployability,version,version,312,[ROOT-9200] With Cocoa backend sometimes need two ProcessEvents to show Canvas; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9200. See https://root-forum.cern.ch/t/canvas-will-not-show/27582/11. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14547
https://github.com/root-project/root/issues/14547:330,deployability,Instal,Installation,330,[ROOT-9200] With Cocoa backend sometimes need two ProcessEvents to show Canvas; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9200. See https://root-forum.cern.ch/t/canvas-will-not-show/27582/11. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14547
https://github.com/root-project/root/issues/14547:312,integrability,version,version,312,[ROOT-9200] With Cocoa backend sometimes need two ProcessEvents to show Canvas; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9200. See https://root-forum.cern.ch/t/canvas-will-not-show/27582/11. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14547
https://github.com/root-project/root/issues/14547:312,modifiability,version,version,312,[ROOT-9200] With Cocoa backend sometimes need two ProcessEvents to show Canvas; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9200. See https://root-forum.cern.ch/t/canvas-will-not-show/27582/11. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14547
https://github.com/root-project/root/issues/14547:398,testability,context,context,398,[ROOT-9200] With Cocoa backend sometimes need two ProcessEvents to show Canvas; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9200. See https://root-forum.cern.ch/t/canvas-will-not-show/27582/11. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14547
https://github.com/root-project/root/issues/14548:699,availability,error,errors,699,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:873,availability,error,error,873,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1441,availability,Operat,Operating,1441,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:802,deployability,build,build,802,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1094,deployability,build,build,1094,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1393,deployability,version,version,1393,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1411,deployability,Instal,Installation,1411,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:618,energy efficiency,Draw,Draw,618,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:635,energy efficiency,Draw,Draw,635,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1283,integrability,pub,public,1283,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1393,integrability,version,version,1393,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1393,modifiability,version,version,1393,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:699,performance,error,errors,699,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:873,performance,error,error,873,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:699,safety,error,errors,699,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:873,safety,error,error,873,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:194,testability,simpl,simple,194,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:1479,testability,context,context,1479,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:194,usability,simpl,simple,194,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:699,usability,error,errors,699,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14548:873,usability,error,error,873,"[ROOT-10847] Missing copy constructor in TH2Poly; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TH2Poly.h>. #include <TCanvas.h>. #include <string>. int main(). {. ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""). .Define(""b2"", ""(double) rdfentry_ * rdfentry_""). .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};. c.cd();. filled->Draw(""colz"");. c.Draw();. c.SaveAs(""rdf_fill_th2poly.png"");. }. ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’. 298 | fObjects[i] = new HIST(*fObjects[0]);. | ^~~~~~~~~~~~~~~~~~~~~~. In file included from rdf_fill_th2poly.cpp:2:. /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:. 66 | class TH2Poly : public TH2 {. ```. Is it possible to add it ? Cheers,. Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14548
https://github.com/root-project/root/issues/14549:52,availability,error,error,52,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:290,availability,error,error,290,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:780,availability,error,error,780,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:951,availability,error,error,951,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1092,availability,error,error,1092,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1263,availability,error,error,1263,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1623,availability,Operat,Operating,1623,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1575,deployability,version,version,1575,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1593,deployability,Instal,Installation,1593,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:248,energy efficiency,draw,drawn,248,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1509,energy efficiency,Draw,Draw,1509,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1575,integrability,version,version,1575,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1575,modifiability,version,version,1575,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:52,performance,error,error,52,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:290,performance,error,error,290,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:780,performance,error,error,780,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:951,performance,error,error,951,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1092,performance,error,error,1092,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1263,performance,error,error,1263,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:52,safety,error,error,52,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:290,safety,error,error,290,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:477,safety,test,test,477,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:780,safety,error,error,780,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:951,safety,error,error,951,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1092,safety,error,error,1092,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1263,safety,error,error,1263,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:470,testability,simpl,simple,470,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:477,testability,test,test,477,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1661,testability,context,context,1661,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:52,usability,error,error,52,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:290,usability,error,error,290,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:308,usability,clear,clearly,308,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:470,usability,simpl,simple,470,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:780,usability,error,error,780,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:791,usability,clear,clearly,791,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:951,usability,error,error,951,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1092,usability,error,error,1092,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1103,usability,clear,clearly,1103,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14549:1263,usability,error,error,1263,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker. Unfortunately this is not the case. The marker 4 (""kCircle"") behaves properly, though. A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp. {. const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32. TGraphErrors *g1 = new TGraphErrors(1);. g1->SetMarkerStyle(4); // error bars clearly visible. g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);. TGraphErrors *g2 = new TGraphErrors(1);. g2->SetMarkerStyle(m); // marker covers error bars. g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);. TGraphErrors *g3 = new TGraphErrors(1);. g3->SetMarkerStyle(4); // error bars clearly visible. g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);. TGraphErrors *g4 = new TGraphErrors(1);. g4->SetMarkerStyle(m); // marker covers error bars. g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);. TMultiGraph *mg = new TMultiGraph();. mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);. mg->GetXaxis()->SetLimits(0., 1.);. mg->SetMinimum(0.); mg->SetMaximum(1.);. mg->Draw(""AP"");. }. ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14549
https://github.com/root-project/root/issues/14550:367,availability,Operat,Operating,367,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:319,deployability,version,version,319,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:337,deployability,Instal,Installation,337,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:20,integrability,sub,subset,20,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:211,integrability,interfac,interface,211,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:232,integrability,sub,subset,232,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:319,integrability,version,version,319,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:211,interoperability,interfac,interface,211,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:211,modifiability,interfac,interface,211,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:319,modifiability,version,version,319,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:298,testability,simpl,simplified,298,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:405,testability,context,context,405,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:283,usability,document,documented,283,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14550:298,usability,simpl,simplified,298,[ROOT-5195] Clone a subset of the TTree branches; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14550
https://github.com/root-project/root/issues/14551:276,availability,Operat,Operating,276,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:11,deployability,Updat,Update,11,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:142,deployability,Updat,Update,142,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:228,deployability,version,version,228,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:246,deployability,Instal,Installation,246,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:228,integrability,version,version,228,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:228,modifiability,version,version,228,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:11,safety,Updat,Update,11,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:142,safety,Updat,Update,142,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:11,security,Updat,Update,11,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:142,security,Updat,Update,142,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:314,testability,context,context,314,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:26,usability,User,User,26,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:31,usability,Guid,Guide,31,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:153,usability,User,User,153,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:158,usability,guid,guide,158,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:206,usability,User,User,206,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14551:211,usability,Guid,Guide,211,"[ROOT-130] Update Minuit2 User Guide; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-130. Update the User guide of Minuit2, make it a chapter of the ROOT User Guide ? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14551
https://github.com/root-project/root/issues/14552:309,availability,error,error,309,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:941,availability,Operat,Operating,941,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:298,deployability,log,logging,298,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:893,deployability,version,version,893,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:911,deployability,Instal,Installation,911,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:247,energy efficiency,alloc,allocate,247,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:390,energy efficiency,alloc,allocating,390,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:571,energy efficiency,current,currently,571,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:780,integrability,buffer,buffer,780,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:893,integrability,version,version,893,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:893,modifiability,version,version,893,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:309,performance,error,error,309,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:833,performance,memor,memory,833,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:215,safety,except,exception,215,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:298,safety,log,logging,298,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:309,safety,error,error,309,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:704,safety,accid,accidentally,704,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:298,security,log,logging,298,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:298,testability,log,logging,298,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:979,testability,context,context,979,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:309,usability,error,error,309,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:376,usability,document,documented,376,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14552:833,usability,memor,memory,833,"[ROOT-5114] Possible out-of-bound writing in TString; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14552
https://github.com/root-project/root/issues/14553:507,availability,Operat,Operating,507,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:29,deployability,depend,dependencies,29,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:298,deployability,depend,dependencies,298,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:413,deployability,depend,dependencies,413,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:459,deployability,version,version,459,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:477,deployability,Instal,Installation,477,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:335,energy efficiency,current,current,335,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:29,integrability,depend,dependencies,29,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:298,integrability,depend,dependencies,298,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:413,integrability,depend,dependencies,413,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:459,integrability,version,version,459,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:29,modifiability,depend,dependencies,29,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:298,modifiability,depend,dependencies,298,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:321,modifiability,pac,packages,321,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:413,modifiability,depend,dependencies,413,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:459,modifiability,version,version,459,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:350,reliability,doe,does,350,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:29,safety,depend,dependencies,29,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:298,safety,depend,dependencies,298,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:413,safety,depend,dependencies,413,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:29,testability,depend,dependencies,29,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:298,testability,depend,dependencies,298,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:413,testability,depend,dependencies,413,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:545,testability,context,context,545,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14553:343,usability,statu,status,343,"[ROOT-10909] Add TMVA python dependencies to the requirements.txt; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14553
https://github.com/root-project/root/issues/14554:1175,availability,Operat,Operating,1175,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:257,deployability,contain,contains,257,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:914,deployability,observ,observe,914,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1038,deployability,version,versions,1038,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1127,deployability,version,version,1127,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1145,deployability,Instal,Installation,1145,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:232,integrability,messag,message,232,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1038,integrability,version,versions,1038,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1127,integrability,version,version,1127,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:232,interoperability,messag,message,232,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:977,interoperability,distribut,distributions,977,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1038,modifiability,version,versions,1038,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1127,modifiability,version,version,1127,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1227,safety,input,input,1227,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:914,testability,observ,observe,914,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1213,testability,context,context,1213,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14554:1227,usability,input,input,1227,"[ROOT-2927] Particular instance of data causes segfault in TDecompSparse; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp. $ root \-l matrix_fail.root. root [0]. Attaching file matrix_fail.root as _file0... root [1] M. (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850. root [2] x. (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0. root [3] TDecompSparse solver(*M,0). root [4] Bool_t ok. root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation. ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14554
https://github.com/root-project/root/issues/14555:41,deployability,contain,container,41,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:317,deployability,contain,containers,317,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:490,deployability,contain,container,490,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:544,deployability,contain,container,544,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:935,deployability,contain,contains,935,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1025,deployability,contain,containing,1025," print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1368,deployability,contain,container,1368,"erely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1790,deployability,contain,container,1790,"from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:2845,deployability,contain,containers,2845,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:557,energy efficiency,alloc,allocated,557,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1593,integrability,rout,routines,1593," this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the firs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1955,interoperability,format,format,1955,"t;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1676,modifiability,paramet,parameter,1676,"or vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:51,performance,content,contents,51,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:255,performance,content,contents,255,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1635,testability,simpl,simply,1635,"treamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:2804,testability,simpl,simple,2804,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:3141,testability,context,context,3141,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:187,usability,command,commands,187,"[ROOT-3437] request feature to print stl container contents in TTree::Show(); ### Feature description. From https://its.cern.ch/jira/browse/ROOT-3437. TTree::Show() is one of my favorite commands because it allows one to investigate in one line the basic contents of a TTree. I find it frustrating, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1290,usability,intuit,intuitively,1290,"g, however, that STL containers of basic data types are not printed, and we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:1635,usability,simpl,simply,1635,"treamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;. \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member. \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:2565,usability,prefer,preference,2565,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14555:2804,usability,simpl,simple,2804,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and. PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14555
https://github.com/root-project/root/issues/14556:1001,availability,Operat,Operating,1001,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:953,deployability,version,version,953,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:971,deployability,Instal,Installation,971,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:953,integrability,version,version,953,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:170,interoperability,specif,specific,170,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:684,interoperability,specif,specifically,684,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:953,modifiability,version,version,953,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:403,testability,simpl,simple,403,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:1039,testability,context,context,1039,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:28,usability,Minim,Minimizer,28,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:38,usability,document,documentation,38,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:208,usability,document,documentation,208,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:230,usability,minim,minimizer,230,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:381,usability,Minim,Minimizer,381,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:403,usability,simpl,simple,403,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:503,usability,Minim,Minimizer,503,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:536,usability,undo,undocumented,536,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:623,usability,help,help,623,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:871,usability,document,documentation,871,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14556:902,usability,user,users,902,"[ROOT-3452] Suggestions for Minimizer documentation; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-3452. I have some specific suggestions on improving the documentation for the minimizer classes:. * TFitterMinuit should have a deprecation warning and point to the new style classes. * It would be useful to have the ROOT::Math::Minimizer page give a simple example of its use, or at least point to the tutorial NumericalMinimization.C. * ROOT::Math::Minimizer::SetLimitedVariable is undocumented, and the arguments are unnamed. Just putting names on the arguments would help. * The page for ROOT::Math::IBaseFunctionMultiDim could specifically mention ROOT::Math::Functor, since that seems the most appropriate way to use one's own function with the fitting framework. I hope these can be added \- they would make the documentation a lot easier for users new to the whole fitting framework. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14556
https://github.com/root-project/root/issues/14557:947,availability,Operat,Operating,947,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:552,deployability,contain,contains,552,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:899,deployability,version,version,899,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:917,deployability,Instal,Installation,917,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:704,energy efficiency,alloc,allocated,704,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:273,integrability,buffer,buffer,273,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:574,integrability,buffer,buffer,574,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:899,integrability,version,version,899,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:419,modifiability,deco,decompresses,419,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:899,modifiability,version,version,899,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:21,reliability,doe,doesn,21,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:254,reliability,doe,doesn,254,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14557:985,testability,context,context,985,"[ROOT-4550] TMessage doesn't honour kIsOwner bit when compression is used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4550. For TBuffer, one can set kIsOwner to false to ensure it doesn't delete the buffer passed to it. However, when using TMessage with compression, TMessage(void *buf, Int_t bufsize) moves the original fBuffer to fBufComp and decompresses that into fBuffer (I think). When the TMessage is deleted, fBufComp will be deleted even if kIsOwner is false. Since it contains the original buffer passed to it, this is dangerous (and inconsistent), and in my case crashes. fBuffer isn't deleted, but maybe it should be (allocated by TMessage). Besides the destructor, there are a few other places in TMessage that also delete fBufComp, these would also be affected. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14557
https://github.com/root-project/root/issues/14558:1349,availability,avail,available,1349,"hing to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1717,availability,state,state,1717,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1730,availability,cluster,cluster,1730,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2491,availability,Operat,Operating,2491,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:419,deployability,continu,continue,419,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:478,deployability,observ,observed,478,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:518,deployability,version,version,518,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1314,deployability,depend,depends,1314," the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in pl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1700,deployability,depend,depending,1700,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1730,deployability,cluster,cluster,1730,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2013,deployability,depend,depend,2013,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2443,deployability,version,version,2443,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2461,deployability,Instal,Installation,2461,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:518,integrability,version,version,518,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:631,integrability,event,events,631,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:889,integrability,discover,discovered,889,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1314,integrability,depend,depends,1314," the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in pl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1449,integrability,event,events,1449,"thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1700,integrability,depend,depending,1700,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1717,integrability,state,state,1717,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1770,integrability,event,events,1770,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2013,integrability,depend,depend,2013,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2443,integrability,version,version,2443,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:889,interoperability,discover,discovered,889,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1233,interoperability,format,format,1233,"now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1307,interoperability,format,format,1307,"e by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2149,interoperability,format,format,2149,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:518,modifiability,version,version,518,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1314,modifiability,depend,depends,1314," the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in pl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1700,modifiability,depend,depending,1700,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2013,modifiability,depend,depend,2013,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2443,modifiability,version,version,2443,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:932,performance,time,time,932,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:329,reliability,doe,doesn,329,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1003,reliability,doe,doesn,1003,"4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1349,reliability,availab,available,1349,"hing to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1882,reliability,doe,does,1882,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2005,reliability,doe,doesn,2005,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1314,safety,depend,depends,1314," the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in pl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1349,safety,avail,available,1349,"hing to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1366,safety,input,input,1366," PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1602,safety,compl,completely,1602,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1700,safety,depend,depending,1700,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2013,safety,depend,depend,2013,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1349,security,availab,available,1349,"hing to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1602,security,compl,completely,1602,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:478,testability,observ,observed,478,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:809,testability,understand,understand,809,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1314,testability,depend,depends,1314," the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in pl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1700,testability,depend,depending,1700,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2013,testability,depend,depend,2013,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:2529,testability,context,context,2529,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,. Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:889,usability,discov,discovered,889,"[ROOT-4716] TTree merging problems when including empty trees; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4716. Dear Developers,. This problem that I'll describe now was first discussed in. https://savannah.cern.ch/bugs/?98501. But since by now the issue doesn't seem to have anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14558:1366,usability,input,input,1366," PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14558
https://github.com/root-project/root/issues/14559:1026,availability,Operat,Operating,1026,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:978,deployability,version,version,978,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:996,deployability,Instal,Installation,996,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:978,integrability,version,version,978,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:67,interoperability,format,format,67,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:437,interoperability,format,format,437,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:978,modifiability,version,version,978,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:220,performance,content,contents,220,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14559:1064,testability,context,context,1064,"[ROOT-4828] TMatrixTBase<double>::GetMatrix2Array bug in ""Fortran"" format; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4828. I need to extract the contents of the TMatrixD m = [[1 2 3][4 5 6]] as a flat array hF = [1 4 2 5 3 6] (fortran style). The function GetMatrix2Array with option ""F"" should do this, but the array returned is hF = [3 6 0 0 0 0]. Default ""C"" format works fine, though. Please find below an example script displaying the problem:. ```cpp. {. TMatrixD m(2,3);. for(int i = 0; i &amp;lt; 2; i++). {. for(int j = 0; j &amp;lt; 3; j++). {. m[i][j] = i*3 \+ j \+ 1;. }. }. m.Print();. Double_t hC[6];. Double_t hF[6];. m.GetMatrix2Array(hC);. m.GetMatrix2Array(hF, &amp;quot;F&amp;quot;);. cout<< ""C | F"" << Lendl;. cout << ""-------"" << endl;. for(int i = 0; i &amp;lt; 6; i++). {. cout << "" "" << hC[i] << ""|"" << hF[i] << endl;. }. }. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14559
https://github.com/root-project/root/issues/14560:224,availability,monitor,monitoring,224,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:307,availability,monitor,monitoring,307,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1397,availability,Error,Error,1397,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1724,availability,Operat,Operating,1724,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:224,deployability,monitor,monitoring,224,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:307,deployability,monitor,monitoring,307,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1676,deployability,version,version,1676,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1694,deployability,Instal,Installation,1694,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:224,energy efficiency,monitor,monitoring,224,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:307,energy efficiency,monitor,monitoring,307,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1676,integrability,version,version,1676,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1676,modifiability,version,version,1676,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1397,performance,Error,Error,1397,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:224,reliability,monitor,monitoring,224,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:307,reliability,monitor,monitoring,307,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:224,safety,monitor,monitoring,224,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:307,safety,monitor,monitoring,307,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:693,safety,test,test,693,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:743,safety,test,test,743,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:753,safety,test,test,753,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1202,safety,test,test,1202,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1238,safety,test,test,1238,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1306,safety,test,test,1306,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1397,safety,Error,Error,1397,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1135,security,session,session,1135,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:224,testability,monitor,monitoring,224,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:307,testability,monitor,monitoring,307,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:693,testability,test,test,693,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:743,testability,test,test,743,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:753,testability,test,test,753,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1202,testability,test,test,1202,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1238,testability,test,test,1238,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1306,testability,test,test,1306,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1762,testability,context,context,1762,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1098,usability,Close,Close,1098,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14560:1397,usability,Error,Error,1397,"[ROOT-4839] TTree::Refresh and TTree::GetEntry causing crash; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below. ```cpp. {. gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");. TTree *tree = new TTree(""test"",""my test tree"");. TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);. Float_t x;. tree->Branch(""x"",&x,""x/F"");. //tree->SetCircular(10000);. int Count = 0;. for(size_t ii=0;ii<1000;ii++){. x = gRandom->Gaus(0,2);. tree->Fill();. hh->Fill(x);. Count++;. if(Count%1000==0) {. tree->AutoSave(""SaveSelf"");. //hh->Write();. }. }. tree->Write();. hh->Write();. f->Close();. }. ```. Then I used a root session to open the file. ```cpp. jliu@jliu-VirtualBox:~$ root \-l test.root. root [0]. Attaching file test.root as _file0... root [1] TTree *t = (TTree*)gDirectory->Get(""test""). root [2] t->GetEntry(0). (Int_t)4. root [3] t->Refresh(). root [4] t->GetEntry(0). Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50). ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14560
https://github.com/root-project/root/issues/14561:598,availability,Operat,Operating,598,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:550,deployability,version,version,550,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:568,deployability,Instal,Installation,568,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:550,integrability,version,version,550,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:550,modifiability,version,version,550,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:221,reliability,doe,does,221,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:636,testability,context,context,636,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14561:392,usability,document,documentation,392,"[ROOT-4936] TMatrixTSym is not actually symmetric; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4936. Setting elements using either (m, n) or [m][n] does not change the corresponding element (n, m). Until now, this seemed to me to be a somewhat important feature of a symmetric matrix, maybe you could add it? Also, the documentation for Minus and Plus says that it creates a new matrix; and Minus is just copy-pasted from Plus. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14561
https://github.com/root-project/root/issues/14562:1406,availability,Operat,Operating,1406,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1279,deployability,updat,updated,1279,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1358,deployability,version,version,1358,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1376,deployability,Instal,Installation,1376,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1358,integrability,version,version,1358,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:762,interoperability,convers,conversion,762,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:40,modifiability,paramet,parameter,40,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:298,modifiability,paramet,parameter,298,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1077,modifiability,paramet,parameter,1077,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1210,modifiability,variab,variable,1210,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1358,modifiability,version,version,1358,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1279,safety,updat,updated,1279,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:946,security,Sign,Signed,946,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1279,security,updat,updated,1279,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14562:1444,testability,context,context,1444,"[ROOT-5009] TClass::SetDeclFile: second parameter wrong type; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:. ```cpp. void SetDeclFile(const char* name, int line). ```. stores its second parameter in a Short_t:. ```cpp. fDeclFileLine = line;. Short_t	fDeclFileLine	line of class declaration. ```. Both GCC and I agree that:. ```. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:. /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value. ``. A Short_t is smaller than an int:. ```. Short_t Signed Short integer 2 bytes (short). ```. and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14562
https://github.com/root-project/root/issues/14563:165,modifiability,variab,variable,165,"[ROOT-5105] More / alternative cut expressions in TTreeViewer; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5105. Hi,. TTreeViewer has one cut variable (the pair of scissors). I have received a users request by robin.glattauer@oeaw.ac.at about being able to define more cuts, such that they can be compared more easily. Could this be implemented? Cheers, Axel. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:442,testability,context,context,442,"[ROOT-5105] More / alternative cut expressions in TTreeViewer; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5105. Hi,. TTreeViewer has one cut variable (the pair of scissors). I have received a users request by robin.glattauer@oeaw.ac.at about being able to define more cuts, such that they can be compared more easily. Could this be implemented? Cheers, Axel. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14563:216,usability,user,users,216,"[ROOT-5105] More / alternative cut expressions in TTreeViewer; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5105. Hi,. TTreeViewer has one cut variable (the pair of scissors). I have received a users request by robin.glattauer@oeaw.ac.at about being able to define more cuts, such that they can be compared more easily. Could this be implemented? Cheers, Axel. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14563
https://github.com/root-project/root/issues/14564:261,deployability,patch,patch,261,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:363,deployability,patch,patch,363,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:161,safety,safe,safe,161,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:261,safety,patch,patch,261,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:363,safety,patch,patch,363,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:261,security,patch,patch,261,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:363,security,patch,patch,363,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14564:435,testability,context,context,435,[ROOT-5138] Provide an implementation of Random123; ### Feature description. From https://its.cern.ch/jira/browse/ROOT-5138. Add an implementation of the thread safe random123 generator. . Need to see if we need to add as a new TRandom class as well. . use the patch provided in . http://fc.isima.fr/~schweitz/schweitz/TRandom4.diff. see https://savannah.cern.ch/patch/?5528. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14564
https://github.com/root-project/root/issues/14565:383,availability,Operat,Operating,383,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:335,deployability,version,version,335,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:353,deployability,Instal,Installation,353,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:335,integrability,version,version,335,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:45,modifiability,paramet,parameter,45,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:223,modifiability,paramet,parameter,223,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:335,modifiability,version,version,335,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14565:421,testability,context,context,421,[ROOT-5578] Add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5578. Please add (Double_t minval = -FLT_MAX) parameter to THStack GetMinimum. It is already included in TH1 and should therefore be easily addable. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14565
https://github.com/root-project/root/issues/14566:202,availability,down,download,202,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:962,availability,Operat,Operating,962,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:914,deployability,version,version,914,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:932,deployability,Instal,Installation,932,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:914,integrability,version,version,914,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:669,interoperability,specif,specific,669,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:914,modifiability,version,version,914,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:556,reliability,doe,does,556,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:17,safety,Compl,Complete,17,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:17,security,Compl,Complete,17,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:1000,testability,context,context,1000,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:290,usability,clear,clear,290,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:733,usability,User,User,733,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14566:738,usability,Guid,Guide,738,"[ROOT-5305] More Complete MakeClass/MakeSelector Example.; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:. > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14566
https://github.com/root-project/root/issues/14567:737,availability,Operat,Operating,737,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:210,deployability,build,build,210,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:419,deployability,instal,installed,419,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:689,deployability,version,version,689,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:707,deployability,Instal,Installation,707,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:689,integrability,version,version,689,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:689,modifiability,version,version,689,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:775,testability,context,context,775,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14567:599,usability,confirm,confirm,599,[ROOT-10535] builtin xrootd not properly used; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10535. The builtin xrootd library seems to be build in ${CMAKE_BINARY_DIR}/lib64 and this directory is not added to LD_LIBRARY_PATH by bin/thisroot.sh .. . Consequence:. The builtin xrootd seems to be ignored when running ctest (at when there is a system installed xrootd). . The xrootd utility ( ${CMAKE_BINARY_DIR}/bin/xrdcp for example) also uses the wrong libraries. In my case executing xrdcp results in a missing symbols and ldd confirm the wrong library is being used. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14567
https://github.com/root-project/root/issues/14568:448,availability,Operat,Operating,448,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:400,deployability,version,version,400,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:418,deployability,Instal,Installation,418,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:400,integrability,version,version,400,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:341,interoperability,standard,standard,341,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:22,modifiability,variab,variable,22,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:241,modifiability,variab,variable,241,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:400,modifiability,version,version,400,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14568:486,testability,context,context,486,[ROOT-10943] Multiple variable definition; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable. ```cpp. bool TMVA::DecisionTreeNode::fgIsTraining = false;. ```. This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14568
https://github.com/root-project/root/issues/14569:25,availability,Fault,Fault,25,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:344,availability,fault,fault,344,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2624,availability,operat,operator,2624,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:3135,availability,Operat,Operating,3135,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:484,deployability,stack,stack,484,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:794,deployability,releas,releases,794,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:885,deployability,build,build,885,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:921,deployability,BUILD,BUILDTYPE,921,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:972,deployability,build,build,972,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1091,deployability,Stack,StackTrace,1091," ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1127,deployability,build,build,1127,"cription. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1163,deployability,BUILD,BUILDTYPE,1163,"a/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1214,deployability,build,build,1214,"am with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1405,deployability,build,build,1405,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1441,deployability,BUILD,BUILDTYPE,1441,"ntationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1492,deployability,build,build,1492," of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/sl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1649,deployability,build,build,1649,"92 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1685,deployability,BUILD,BUILDTYPE,1685,".6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1736,deployability,build,build,1736,"his=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1869,deployability,build,build,1869,"&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1905,deployability,BUILD,BUILDTYPE,1905,"cg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1956,deployability,build,build,1956,"lc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/Test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2157,deployability,build,build,2157,"se/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2193,deployability,BUILD,BUILDTYPE,2193,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2244,deployability,build,build,2244,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2289,deployability,build,build,2289,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2420,deployability,build,build,2420,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2456,deployability,BUILD,BUILDTYPE,2456,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2507,deployability,build,build,2507,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2668,deployability,build,build,2668,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2704,deployability,BUILD,BUILDTYPE,2704,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2755,deployability,build,build,2755,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:3087,deployability,version,version,3087,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:3105,deployability,Instal,Installation,3105,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:25,energy efficiency,Fault,Fault,25,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:344,energy efficiency,fault,fault,344,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1017,energy efficiency,core,core,1017,"ation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1259,energy efficiency,core,core,1259,"stExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1537,energy efficiency,core,core,1537,"=================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:1781,energy efficiency,core,core,1781,".ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2001,energy efficiency,core,core,2001,"/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===============================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:3087,integrability,version,version,3087,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:313,interoperability,xml,xml,313,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:3087,modifiability,version,version,3087,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:25,performance,Fault,Fault,25,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:344,performance,fault,fault,344,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:25,reliability,Fault,Fault,25,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:344,reliability,fault,fault,344,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:25,safety,Fault,Fault,25,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:259,safety,Test,TestExe,259,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:344,safety,fault,fault,344,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2955,safety,Test,TestExe,2955,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2041,security,sign,signal,2041,"xx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:259,testability,Test,TestExe,259,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:490,testability,trace,trace,490,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2938,testability,simpl,simpleStudy,2938,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2955,testability,Test,TestExe,2955,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:3173,testability,context,context,3173,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:239,usability,command,command,239,"[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:. ```. TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml. ```. I get a segmentation fault:. ```. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6. #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6. #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073. #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14569:2938,usability,simpl,simpleStudy,2938,"ABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301. #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539. #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395. #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516. #7 <signal handler called>. #8 0x00007f2a622f1846 in TMVA::DecisionTreeNode::GetSeparationGain (this=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT-6.06.02-build/include/TMVA/DecisionTreeNode.h:268. #9 0x00007f2a622ef5d8 in TMVA::DecisionTreeNode::Print (this=0x12cc2a0, os=...) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/DecisionTreeNode.cxx:217. #10 0x00007f2a62116d89 in TMVA::operator<< (os=..., node=0x12cc2a0) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/tmva/tmva/src/Node.cxx:142. #11 0x000000000040955f in main (argc=3, argv=0x7ffd9f1b3de8) at /home/jmitrevs/work/AtlasOffline-rel_5/source/simpleStudy/util/TestExe.cxx:112. ===========================================================. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14569
https://github.com/root-project/root/issues/14570:362,availability,Operat,Operating,362,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:175,deployability,build,builds,175,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:195,deployability,modul,modules,195,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:314,deployability,version,version,314,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:332,deployability,Instal,Installation,332,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:314,integrability,version,version,314,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:195,modifiability,modul,modules,195,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:314,modifiability,version,version,314,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:195,safety,modul,modules,195,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14570:400,testability,context,context,400,"[ROOT-10978] Remove R__LOAD_LIBRARY from RNTuple tutorials; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10978. Once all builds are with C++ modules, the R__LOAD_LIBRARY macros in the RNTuple tutorials are not necessary anymore and should be removed. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14570
https://github.com/root-project/root/issues/14571:17,availability,fault,fault,17,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:38,availability,error,error,38,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:342,availability,fault,fault,342,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:488,availability,Error,Error,488,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:784,availability,error,error,784,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:1175,availability,Operat,Operating,1175,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:313,deployability,version,version,313,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:392,deployability,version,version,392,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:620,deployability,instal,installing,620,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:664,deployability,instal,installed,664,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:1127,deployability,version,version,1127,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:1145,deployability,Instal,Installation,1145,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:17,energy efficiency,fault,fault,17,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:342,energy efficiency,fault,fault,342,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:44,integrability,messag,messages,44,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:313,integrability,version,version,313,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:392,integrability,version,version,392,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:494,integrability,messag,messages,494,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:790,integrability,messag,message,790,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:1127,integrability,version,version,1127,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:44,interoperability,messag,messages,44,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:290,interoperability,standard,standard,290,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:494,interoperability,messag,messages,494,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:790,interoperability,messag,message,790,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:886,interoperability,share,shared,886,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:313,modifiability,version,version,313,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:392,modifiability,version,version,392,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:1127,modifiability,version,version,1127,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:17,performance,fault,fault,17,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:38,performance,error,error,38,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:342,performance,fault,fault,342,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:488,performance,Error,Error,488,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:784,performance,error,error,784,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:17,reliability,fault,fault,17,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:342,reliability,fault,fault,342,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:17,safety,fault,fault,17,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:38,safety,error,error,38,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:342,safety,fault,fault,342,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:408,safety,compl,complained,408,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:488,safety,Error,Error,488,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:544,safety,compl,complained,544,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:784,safety,error,error,784,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:408,security,compl,complained,408,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:544,security,compl,complained,544,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:701,testability,plan,plan,701,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:1213,testability,context,context,1213,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:38,usability,error,error,38,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:360,usability,hint,hint,360,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:488,usability,Error,Error,488,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:778,usability,clear,clear,778,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14571:784,usability,error,error,784,"[ROOT-10797] Seg fault and misleading error messages if system header files are missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14571
https://github.com/root-project/root/issues/14572:609,availability,Operat,Operating,609,"[ROOT-10592] Characters with diactritics not well rendered in ""root -a""; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10592. Hello, when you type ""root -a"", all the contributor names are displayed. Names using character with diacritics (for example ""André Filipe"") are not well displayed (the ""é"" is not well rendered). Using Unicode should solve the problem. Sorry but I did not list all the names involved but I have seen only few names. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:561,deployability,version,version,561,"[ROOT-10592] Characters with diactritics not well rendered in ""root -a""; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10592. Hello, when you type ""root -a"", all the contributor names are displayed. Names using character with diacritics (for example ""André Filipe"") are not well displayed (the ""é"" is not well rendered). Using Unicode should solve the problem. Sorry but I did not list all the names involved but I have seen only few names. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:579,deployability,Instal,Installation,579,"[ROOT-10592] Characters with diactritics not well rendered in ""root -a""; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10592. Hello, when you type ""root -a"", all the contributor names are displayed. Names using character with diacritics (for example ""André Filipe"") are not well displayed (the ""é"" is not well rendered). Using Unicode should solve the problem. Sorry but I did not list all the names involved but I have seen only few names. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:561,integrability,version,version,561,"[ROOT-10592] Characters with diactritics not well rendered in ""root -a""; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10592. Hello, when you type ""root -a"", all the contributor names are displayed. Names using character with diacritics (for example ""André Filipe"") are not well displayed (the ""é"" is not well rendered). Using Unicode should solve the problem. Sorry but I did not list all the names involved but I have seen only few names. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:561,modifiability,version,version,561,"[ROOT-10592] Characters with diactritics not well rendered in ""root -a""; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10592. Hello, when you type ""root -a"", all the contributor names are displayed. Names using character with diacritics (for example ""André Filipe"") are not well displayed (the ""é"" is not well rendered). Using Unicode should solve the problem. Sorry but I did not list all the names involved but I have seen only few names. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14572:647,testability,context,context,647,"[ROOT-10592] Characters with diactritics not well rendered in ""root -a""; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10592. Hello, when you type ""root -a"", all the contributor names are displayed. Names using character with diacritics (for example ""André Filipe"") are not well displayed (the ""é"" is not well rendered). Using Unicode should solve the problem. Sorry but I did not list all the names involved but I have seen only few names. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14572
https://github.com/root-project/root/issues/14573:671,availability,consist,consistently,671,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:897,availability,Operat,Operating,897,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:69,deployability,contain,containers,69,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:269,deployability,contain,containers,269,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:415,deployability,contain,containers,415,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:469,deployability,contain,containing,469,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:546,deployability,automat,automatically,546,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:740,deployability,contain,container,740,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:849,deployability,version,version,849,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:867,deployability,Instal,Installation,867,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:399,integrability,wrap,wrapping,399,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:526,integrability,wrap,wrapper,526,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:849,integrability,version,version,849,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:526,interoperability,wrapper,wrapper,526,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:849,modifiability,version,version,849,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:248,safety,test,test,248,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:257,safety,valid,validity,257,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:574,safety,test,test,574,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:697,safety,avoid,avoid,697,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:248,testability,test,test,248,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:546,testability,automat,automatically,546,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:574,testability,test,test,574,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:935,testability,context,context,935,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:671,usability,consist,consistently,671,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14573:721,usability,user,users,721,"[ROOT-10118] Follow Python convention for bool representation of STL containers in PyROOT; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method? ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14573
https://github.com/root-project/root/issues/14574:663,availability,Operat,Operating,663,"[ROOT-10465] rootcling ignores -W flag passed through ACLiC; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10465. If I try to pass a -W flag to rootcling with:. ```. gSystem->AddIncludePath(""-Wno-narrowing"");. ```. and then I  compile a macro with:. ```. .L . macro.C+kv. ```. rootcling ignore this flag, even if it appears in the arguments. See more details on the ROOT forum: [Changing ACLiC compilation flags](https://root-forum.cern.ch/t/changing-aclic-compilation-flags/36971/13?u=ccorti). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:615,deployability,version,version,615,"[ROOT-10465] rootcling ignores -W flag passed through ACLiC; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10465. If I try to pass a -W flag to rootcling with:. ```. gSystem->AddIncludePath(""-Wno-narrowing"");. ```. and then I  compile a macro with:. ```. .L . macro.C+kv. ```. rootcling ignore this flag, even if it appears in the arguments. See more details on the ROOT forum: [Changing ACLiC compilation flags](https://root-forum.cern.ch/t/changing-aclic-compilation-flags/36971/13?u=ccorti). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:633,deployability,Instal,Installation,633,"[ROOT-10465] rootcling ignores -W flag passed through ACLiC; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10465. If I try to pass a -W flag to rootcling with:. ```. gSystem->AddIncludePath(""-Wno-narrowing"");. ```. and then I  compile a macro with:. ```. .L . macro.C+kv. ```. rootcling ignore this flag, even if it appears in the arguments. See more details on the ROOT forum: [Changing ACLiC compilation flags](https://root-forum.cern.ch/t/changing-aclic-compilation-flags/36971/13?u=ccorti). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:615,integrability,version,version,615,"[ROOT-10465] rootcling ignores -W flag passed through ACLiC; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10465. If I try to pass a -W flag to rootcling with:. ```. gSystem->AddIncludePath(""-Wno-narrowing"");. ```. and then I  compile a macro with:. ```. .L . macro.C+kv. ```. rootcling ignore this flag, even if it appears in the arguments. See more details on the ROOT forum: [Changing ACLiC compilation flags](https://root-forum.cern.ch/t/changing-aclic-compilation-flags/36971/13?u=ccorti). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:615,modifiability,version,version,615,"[ROOT-10465] rootcling ignores -W flag passed through ACLiC; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10465. If I try to pass a -W flag to rootcling with:. ```. gSystem->AddIncludePath(""-Wno-narrowing"");. ```. and then I  compile a macro with:. ```. .L . macro.C+kv. ```. rootcling ignore this flag, even if it appears in the arguments. See more details on the ROOT forum: [Changing ACLiC compilation flags](https://root-forum.cern.ch/t/changing-aclic-compilation-flags/36971/13?u=ccorti). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14574:701,testability,context,context,701,"[ROOT-10465] rootcling ignores -W flag passed through ACLiC; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10465. If I try to pass a -W flag to rootcling with:. ```. gSystem->AddIncludePath(""-Wno-narrowing"");. ```. and then I  compile a macro with:. ```. .L . macro.C+kv. ```. rootcling ignore this flag, even if it appears in the arguments. See more details on the ROOT forum: [Changing ACLiC compilation flags](https://root-forum.cern.ch/t/changing-aclic-compilation-flags/36971/13?u=ccorti). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14574
https://github.com/root-project/root/issues/14575:1766,availability,Operat,Operating,1766,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1718,deployability,version,version,1718,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1736,deployability,Instal,Installation,1736,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1718,integrability,version,version,1718,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1718,modifiability,version,version,1718,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:230,performance,perform,performed,230,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:285,performance,memor,memory,285,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1004,performance,memor,memory,1004,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1083,performance,memor,memory,1083,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1162,performance,memor,memory,1162,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1241,performance,memor,memory,1241,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1320,performance,memor,memory,1320,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1399,performance,memor,memory,1399,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:504,reliability,doe,does,504,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:626,safety,test,test,626,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:884,safety,test,test,884,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:930,safety,test,test,930,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1459,security,checksum,checksum,1459,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1510,security,modif,modified,1510,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:305,testability,understand,understand,305,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:626,testability,test,test,626,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:884,testability,test,test,884,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:930,testability,test,test,930,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1804,testability,context,context,1804,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:230,usability,perform,performed,230,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:285,usability,memor,memory,285,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:530,usability,user,users,530,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1004,usability,memor,memory,1004,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1083,usability,memor,memory,1083,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1162,usability,memor,memory,1162,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1241,usability,memor,memory,1241,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1320,usability,memor,memory,1320,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14575:1399,usability,memor,memory,1399,"[ROOT-10196] boundary check in TH1::AddBinContent is missing; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp. void test() {}. int nbins = 500;.  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){.     int bin = h->GetBin(500);.     for(int i = bin; i < bin + 100; i++){.       h->AddBinContent(i, 1);.     }.   }. ```. ```. $ root. root [0] .L test.C. root [1] for(int i = 0; i < 100; i++) test();. Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak). root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed. Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug. ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14575
https://github.com/root-project/root/issues/14576:507,availability,Operat,Operating,507,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:459,deployability,version,version,459,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:477,deployability,Instal,Installation,477,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:459,integrability,version,version,459,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:459,modifiability,version,version,459,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:20,testability,unit,units,20,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:278,testability,unit,units,278,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14576:545,testability,context,context,545,[ROOT-7155] Angular units used in HTML doc of TGLViewer::SetPerspectiveCamera are wrong; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-7155. https://root.cern.ch/root/html/src/TGLViewer.cxx.html#per4VC. The units of 'hRotate' and 'vRotate' should be radians. In addition the second 'hRotate' in the doc should be replaced with 'vRotate.'. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14576
https://github.com/root-project/root/issues/14577:516,availability,Operat,Operating,516,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:468,deployability,version,version,468,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:486,deployability,Instal,Installation,486,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:172,energy efficiency,Current,Currently,172,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:384,energy efficiency,core,core,384,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:468,integrability,version,version,468,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:327,modifiability,reu,reuse,327,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:468,modifiability,version,version,468,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14577:554,testability,context,context,554,"[ROOT-10355] Use GetDemangledTypeName instead of TypeID2TypeName; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10355. Currently, {{RDataFrame}} uses an own implementation of getting the typename as string, namely {{ROOT::Internal::RDF::TypeID2TypeName}}. However, we could reuse {{ROOT::Internal::GetDemangledTypeName}} from ROOT core, which has the same functionality and is the superior implementation. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14577
https://github.com/root-project/root/issues/14578:696,availability,error,error,696,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1541,availability,Operat,Operating,1541,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1493,deployability,version,version,1493,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1511,deployability,Instal,Installation,1511,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1493,integrability,version,version,1493,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1418,interoperability,specif,specific,1418,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1493,modifiability,version,version,1493,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:696,performance,error,error,696,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:696,safety,error,error,696,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1277,safety,avoid,avoided,1277,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1217,security,modif,modifications,1217,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1579,testability,context,context,1579,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:365,usability,user,user,365,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:696,usability,error,error,696,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1024,usability,user,user,1024,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1301,usability,user,user,1301,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14578:1450,usability,behavi,behaviour,1450,"[ROOT-10213] Make RResultPtr<Object> behave more like Object*; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:. ```python. import ROOT. df_1 = ROOT.RDataFrame(10). h_1 = df_1.Histo1D(""rdfentry_""). df_2 = ROOT.RDataFrame(10). h_2 = df_2.Histo1D(""rdfentry_""). h_1.Add(h_2). ```. The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14578
https://github.com/root-project/root/issues/14579:532,availability,Operat,Operating,532,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:484,deployability,version,version,484,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:502,deployability,Instal,Installation,502,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:484,integrability,version,version,484,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:484,modifiability,version,version,484,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:371,performance,time,time,371,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:43,safety,test,test,43,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:341,safety,test,test,341,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:43,testability,test,test,43,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:341,testability,test,test,341,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14579:570,testability,context,context,570,"[ROOT-10190] Excluded fastcloningeventtree test in roottest.git should be re-enabled back; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10190. Files for fastcloningeventtree were moved from filemerger directory during its migration to CMake. During migration to CMake, it was found that test was not running for some time and as a result it is not compiling. . Fastcloningeventtree is temporary disabled for this reason. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14579
https://github.com/root-project/root/issues/14580:703,availability,state,state,703,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:805,availability,state,state,805,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:1613,availability,Operat,Operating,1613,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:1565,deployability,version,version,1565,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:1583,deployability,Instal,Installation,1583,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:703,integrability,state,state,703,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:805,integrability,state,state,805,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:1565,integrability,version,version,1565,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:1565,modifiability,version,version,1565,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:1651,testability,context,context,1651,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14580:226,usability,behavi,behavior,226,"[ROOT-10081] TRandom1 SetSeed GetSeed inconsistency; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10081. Hi,. I've encountered rather unexpected TRandom1 behavior. Basically, TRandom1::GetSeed() returns value different from what was set by SetSeed(). For example:. ```cpp. TRandom1 *rnd0 = new TRandom1(42);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 42. rnd0->SetSeed(50);. std::cout<<rnd0->GetSeed()<<std::endl; //returns 2000700. UInt_t seedlist[2]={100, 0};. rnd0->SetSeeds(seedlist); //used in TRandom1 constructor. std::cout<<rnd0->GetSeed()<<std::endl; //returns 100 as expected. ```. In my project I track generator state in order to be able to reproduce my results. So I basically want to read and then set generator state with only GetSeed and SetSeed. As you can see, there is workaround by using SetSeeds instead (or creating new TRandom1 object), but in my case I store base class TRandom* pointer which I initialize elsewhere, so I have to cast it to the derived type explicitly when setting seed. There is no such issue for TRandom1, but there is for TRandom2:. ```cpp. TRandom3 *rnd1 = new TRandom3(42);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 42. rnd1->SetSeed(50);. std::cout<<rnd1->GetSeed()<<std::endl; //returns 50. TRandom2 *rnd2 = new TRandom2(42);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 3121265377. rnd2->SetSeed(50);. std::cout<<rnd2->GetSeed()<<std::endl; //returns 477290104. ```. Thanks. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14580
https://github.com/root-project/root/issues/14581:864,availability,state,states,864,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:972,availability,sli,slightly,972,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1267,availability,Operat,Operating,1267,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1219,deployability,version,version,1219,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1237,deployability,Instal,Installation,1237,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:464,integrability,event,eventual,464,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:864,integrability,state,states,864,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1219,integrability,version,version,1219,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:604,interoperability,standard,standard,604,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1219,modifiability,version,version,1219,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:21,reliability,doe,does,21,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:534,reliability,doe,does,534,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:972,reliability,sli,slightly,972,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1127,reliability,doe,does,1127,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:680,safety,except,except,680,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1305,testability,context,context,1305,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14581:1113,usability,document,documentation,1113,"[ROOT-9733] TRandom3 does not implement perfectly a Mersenne Twister PRNG; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9733. The {{TRandom3}} is a random number engine based on Mersenne Twister algorithm, defined in {{TRandom3.cxx}}. Since 2002 (see [commit 026ec9c0f458be61825e7335ec51e115ec6cbf4c](https://github.com/root-project/root/commit/026ec9c0f458be61825e7335ec51e115ec6cbf4c)), an eventual zero return value is discarded by {{TRandom3::Rndm()}}. This does not allow the algorithm to return the same sequence of the C++11 standard implementation {{std::mt19937}} (when seeded with the same value - except for seed zero, since handled in a special way by {{TRandom3::SetSeed()}} - and multiplied by 2^-32). A related mistake is present also in the description of the class, where it states the algorithm period to be 2^19937 - 1. If you discard the zeros, of course the period will be (very slightly) less than it. In conclusion, {{TRandom3}} is an imperfect implementation of the Mersenne Twister 32-bit algoritm. Furthermore, the documentation does not explain this small difference.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14581
https://github.com/root-project/root/issues/14582:395,availability,Operat,Operating,395,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:347,deployability,version,version,347,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:365,deployability,Instal,Installation,365,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:347,integrability,version,version,347,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:202,modifiability,maintain,maintained,202,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:347,modifiability,version,version,347,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:202,safety,maintain,maintained,202,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:433,testability,context,context,433,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14582:49,usability,tool,tools,49,[ROOT-8594] Deprecate old classes in statistical tools; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8594. Deprecate classes which are not any more maintained and they are not needed. A replacement exists. These are today:. TFitter. TFitterMinuit. TRolke. TLimit and related classes. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14582
https://github.com/root-project/root/issues/14583:851,availability,Operat,Operating,851,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:803,deployability,version,version,803,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:821,deployability,Instal,Installation,821,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:425,integrability,messag,message,425,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:803,integrability,version,version,803,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:425,interoperability,messag,message,425,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:803,modifiability,version,version,803,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:889,testability,context,context,889,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:26,usability,document,documentation,26,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:382,usability,document,documentation,382,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:715,usability,document,documentation,715,"[ROOT_5159] Improve TTree documentation about SetMakeClass(); ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay . sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14584:1235,availability,Operat,Operating,1235,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:187,deployability,continu,continuously,187,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:880,deployability,contain,contain,880,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1076,deployability,automat,automatically,1076,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1187,deployability,version,version,1187,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1205,deployability,Instal,Installation,1205,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:287,integrability,topic,topic,287,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1187,integrability,version,version,1187,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1187,modifiability,version,version,1187,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:553,performance,disk,disk,553,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:711,performance,time,times,711,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:785,safety,compl,complete,785,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:999,safety,avoid,avoid,999,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:785,security,compl,complete,785,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1076,testability,automat,automatically,1076,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1273,testability,context,context,1273,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:23,usability,clear,clear,23,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:177,usability,User,Users,177,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:459,usability,user,users,459,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:465,usability,guid,guide,465,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:670,usability,guid,guide,670,"[ROOT-10802] We need a clear explanation of cycle numbers in our docs; ### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10802. Users are continuously tripped up by multiple namecycles (for a non-exhaustive list of forum questions on the topic, see the forum threads that link to [this thread](https://root-forum.cern.ch/t/aux-1-aux-2-aux3/13345)). The only explanation I could find in our docs is in the ROOT users guide:. > Their cycle number, the number after the semicolon, differentiates objects on disk with the same name. which is true but insufficient to figure out what to do with those numbers. TFile's doxygen guide refers to the cycle number several times but never explains what it is. It would be great if we could have a complete source of information for everything about namecycles, e.g.:. * TTree namecycles only contain the metadata, but for other objects, the namecycles might be full copies. * TObject::kOverwrite can be used to avoid writing multiple namecycles. * retrieving an object from TFile by name automatically retrieves the highest namecycle. * relation to TTree's autoflush and autosave settings. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14585:765,availability,Operat,Operating,765,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:381,deployability,Contain,Contains,381,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:419,deployability,Contain,Contains,419,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:717,deployability,version,version,717,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:735,deployability,Instal,Installation,735,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:717,integrability,version,version,717,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:717,modifiability,version,version,717,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:803,testability,context,context,803,"[ROOT-5572] Handling of '.?' in TRegexp; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5572. The handling of '.?' with the TRegexp class seems to be broken. Consider the following examples:. Two TStrings:. TString abc(""abc""). TString ac(""ac""). Using the regular expression '.?' I get the following output. abc.Contains(TRegexp(""a.?c"")) -> true. ac.Contains(TRegexp(""a.?c"")) -> false. while in the later case I would also expect true. Note that I obtain the result I would expect for the regular expression 'ab?c', so there seems to be something wrong only for the optional match to any character. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14586:28,availability,state,statement,28,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:292,availability,state,statement,292,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:863,availability,Operat,Operating,863,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:815,deployability,version,version,815,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:833,deployability,Instal,Installation,833,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:729,energy efficiency,current,current,729,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:28,integrability,state,statement,28,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:292,integrability,state,statement,292,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:815,integrability,version,version,815,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:815,modifiability,version,version,815,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:436,performance,content,content,436,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:38,reliability,doe,does,38,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:349,reliability,doe,does,349,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:666,safety,test,test,666,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:666,testability,test,test,666,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14586:901,testability,context,context,901,"[ROOT-6317] using namespace statement does not provoke autoload; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-6317. Hi,. In roottest/root/meta/runnamespace.C, a namespace is declared in an ACLiC library and then a using statement is done for this namespace. At the moment this does not provoke any auto parsing of the header (and/or all the headers) declaring the content of the namespace. (In addition a direct call to gInterpreter->AutoParse(namespace_name) as no effect). Cheers,. Philippe. PS. Because of the potential-spread-over-multiple-header-files-and-library nature of namespace this test may actually be a concrete example of the weakness of the current auto parsing implementation. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14586
https://github.com/root-project/root/issues/14587:155,availability,Error,Error,155,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:299,availability,error,error,299,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:629,availability,error,error,629,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:729,availability,Error,Error,729,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2642,availability,error,errors,2642,"DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2844,availability,error,errors,2844,"awers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6705,availability,error,error,6705,"issing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/uti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6979,availability,cluster,cluster,6979,"uteFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7359,availability,error,error,7359,"that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:8435,availability,Operat,Operating,8435,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6870,deployability,patch,patchwork,6870,"nal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6979,deployability,cluster,cluster,6979,"uteFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7442,deployability,build,builddir,7442,"ries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7451,deployability,build,build,7451,"t I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7457,deployability,BUILD,BUILD,7457," not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7489,deployability,build,build,7489,"that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No respon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7899,deployability,version,version,7899,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:8391,deployability,Instal,Installation,8391,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:575,energy efficiency,load,load,575,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1171,energy efficiency,load,load,1171," line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1625,energy efficiency,Draw,DrawGeometry,1625,"ror comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1645,energy efficiency,Draw,DrawCanvases,1645,"y to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1669,energy efficiency,Draw,DrawRCanvases,1669," python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1773,energy efficiency,Draw,DrawRCanvases,1773,"ves._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1798,energy efficiency,Draw,DrawRCanvases,1798,"yROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1864,energy efficiency,draw,drawer,1864,"e7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1889,energy efficiency,draw,drawer,1889,"), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1896,energy efficiency,Draw,Draw,1896,"h arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3170,energy efficiency,load,load,3170,"_smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3449,energy efficiency,load,load,3449,"On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3793,energy efficiency,load,load,3793,"g with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4157,energy efficiency,load,load,4157,"ou need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4435,energy efficiency,load,load,4435,"you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4814,energy efficiency,alloc,allocator,4814,"red library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4859,energy efficiency,load,load,4859,"unction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5178,energy efficiency,load,load,5178,"shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5454,energy efficiency,load,load,5454,"g shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5840,energy efficiency,alloc,allocator,5840,"e you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5919,energy efficiency,load,load,5919,"ecuteFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6280,energy efficiency,load,load,6280,"ental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the followi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7366,energy efficiency,alloc,allocation,7366," of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3045,integrability,interfac,interface,3045,"ot RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3324,integrability,interfac,interface,3324,"perimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3633,integrability,interfac,interface,3633,"ing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while link",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3983,integrability,interfac,interface,3983,"2Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4311,integrability,interfac,interface,4311," [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4649,integrability,interfac,interface,4649,"You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5031,integrability,interfac,interface,5031,"inition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5331,integrability,interfac,interface,5331,"are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Tempora",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5669,integrability,interfac,interface,5669,"are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6103,integrability,interfac,interface,6103,"ental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7899,integrability,version,version,7899,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:598,interoperability,share,shared,598,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1194,interoperability,share,shared,1194,"er notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3045,interoperability,interfac,interface,3045,"ot RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3193,interoperability,share,shared,3193," can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3324,interoperability,interfac,interface,3324,"perimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3472,interoperability,share,shared,3472,"nning EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3633,interoperability,interfac,interface,3633,"ing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while link",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3816,interoperability,share,shared,3816,"structor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::alloc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3983,interoperability,interfac,interface,3983,"2Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4180,interoperability,share,shared,4180,"esponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4311,interoperability,interfac,interface,4311," [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4458,interoperability,share,shared,4458,"responding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4649,interoperability,interfac,interface,4649,"You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4882,interoperability,share,shared,4882,"T12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5031,interoperability,interfac,interface,5031,"inition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5201,interoperability,share,shared,5201,"talExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Displa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5331,interoperability,interfac,interface,5331,"are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Tempora",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5477,interoperability,share,shared,5477,"entalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5669,interoperability,interfac,interface,5669,"are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5942,interoperability,share,shared,5942,"ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6103,interoperability,interfac,interface,6103,"ental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6303,interoperability,share,shared,6303,"ved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6434,interoperability,share,shared,6434,"aybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6962,interoperability,share,shared,6962,"ntalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ---------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1377,modifiability,pac,packages,1377,"ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1562,modifiability,pac,packages,1562," need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1730,modifiability,pac,packages,1730," in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1948,modifiability,pac,packages,1948,"xecuteFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3045,modifiability,interfac,interface,3045,"ot RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3324,modifiability,interfac,interface,3324,"perimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3633,modifiability,interfac,interface,3633,"ing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while link",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3983,modifiability,interfac,interface,3983,"2Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4311,modifiability,interfac,interface,4311," [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4649,modifiability,interfac,interface,4649,"You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5031,modifiability,interfac,interface,5031,"inition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5331,modifiability,interfac,interface,5331,"are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Tempora",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5669,modifiability,interfac,interface,5669,"are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6103,modifiability,interfac,interface,6103,"ental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7899,modifiability,version,version,7899,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:155,performance,Error,Error,155,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:299,performance,error,error,299,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:575,performance,load,load,575,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:629,performance,error,error,629,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:729,performance,Error,Error,729,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1171,performance,load,load,1171," line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2619,performance,time,time,2619,"464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2642,performance,error,errors,2642,"DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2844,performance,error,errors,2844,"awers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3170,performance,load,load,3170,"_smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3449,performance,load,load,3449,"On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:3793,performance,load,load,3793,"g with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4157,performance,load,load,4157,"ou need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4435,performance,load,load,4435,"you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:4859,performance,load,load,4859,"unction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5178,performance,load,load,5178,"shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RDrawable. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5454,performance,load,load,5454,"g shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:5919,performance,load,load,5919,"ecuteFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6280,performance,load,load,6280,"ental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of vtable for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the followi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6705,performance,error,error,6705,"issing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/uti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7359,performance,error,error,7359,"that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:69,reliability,RCa,RCanvas,69,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:533,reliability,RCa,RCanvas,533,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1129,reliability,RCa,RCanvas,1129,"s. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2053,reliability,RCa,RCanvasAvailable,2053,"15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface functi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2117,reliability,RCa,RCanvas,2117,"mental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2310,reliability,RCa,RCanvas,2310,"recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2341,reliability,RCa,RCanvas,2341,"ooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2709,reliability,RCa,RCanvas,2709,"4/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experiment",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2804,reliability,RCa,RCanvas,2804,"ses():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2919,reliability,RCa,RCanvas,2919,"env/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6403,reliability,RCa,RCanvas,6403,"OOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6601,reliability,RCa,RCanvasAvailable,6601,"al13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7845,reliability,RCa,RCanvas,7845,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:155,safety,Error,Error,155,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:299,safety,error,error,299,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:629,safety,error,error,629,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:729,safety,Error,Error,729,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2642,safety,error,errors,2642,"DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2844,safety,error,errors,2844,"awers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6705,safety,error,error,6705,"issing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/uti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6870,safety,patch,patchwork,6870,"nal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7359,safety,error,error,7359,"that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6515,security,modif,modified,6515,"teFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6870,security,patch,patchwork,6870,"nal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7010,security,privil,privileges,7010,"xperimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:8055,security,Team,Team,8055,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1298,testability,Trace,Traceback,1298,"r in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6794,testability,understand,understand,6794,"rimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:8473,testability,context,context,8473,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:155,usability,Error,Error,155,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:299,usability,error,error,299,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:629,usability,error,error,629,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:729,usability,Error,Error,729,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:811,usability,help,helpers,811,"Jupyter ROOT (both C++ and Python) notebooks unresponsive because of RCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error. Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:. ```. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1395,usability,help,helpers,1395,"tal7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1580,usability,help,helpers,1580,"corresponding shared library? ```. A similar error comes up if I try to ``import ROOT`` in a python notebook:. ```. Welcome to JupyROOT 6.30/02. Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1748,usability,help,helpers,1748,"d method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:1966,usability,help,helpers,1966,"mbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'! You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(). Maybe you need to load the corresponding shared library? ---------------------------------------------------------------------------. ValueError Traceback (most recent call last). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self). 475 def _post_execute(self):. --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2556,usability,interact,interactively,2556,"ackages/JupyROOT/helpers/utils.py:466, in NotebookDraw(). 464 DrawGeometry(). 465 DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2642,usability,error,errors,2642,"DrawCanvases(). --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(). 458 def DrawRCanvases():. --> 459 rdrawers = GetRCanvasDrawers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:2844,usability,error,errors,2844,"awers(). 460 for drawer in rdrawers:. 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(). 429 def GetRCanvasDrawers():. 430 if not RCanvasAvailable(): return []. --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(). 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>. ValueError: nullptr result where temporary expected. ```. # Attempted Debugging. * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected. * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``. * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all. * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT. ```. root [0] new ROOT::Experimental::RCanvas();. IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]! You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase. Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&). Maybe you need to load the corresponding shared library? IncrementalExec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6568,usability,help,helpers,6568,"CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6705,usability,error,error,6705,"issing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/uti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6743,usability,help,help,6743,"mental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:6780,usability,prefer,preferable,6780,"tor<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&). Maybe you need to load the corresponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```impor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7288,usability,interact,interactive,7288,"sponding shared library? ```. # My Temporary Solution. I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7359,usability,error,error,7359,"that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7697,usability,help,helpers,7697,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:7799,usability,interact,interactive,7799,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/issues/14587:8253,usability,help,help,8253,"t. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue? It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem? I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:. ```. root [0] new TWebCanvas();. ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'. new TWebCanvas();. ^~~~~~~~~~. /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'. class TWebCanvas;. ```. This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:. ```import ROOT```. In interactive ROOT:. ```new ROOT::Experimental::RCanvas();```. or:. ```new TWebCanvas();```. ### ROOT version. ``` . ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |. | From heads/master@tags/v6-30-02 |. | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14587
https://github.com/root-project/root/pull/14588:159,deployability,API,API,159,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:159,integrability,API,API,159,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:159,interoperability,API,API,159,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:14,usability,support,support,14,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:92,usability,stop,stopped,92,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:211,usability,support,support,211,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:470,usability,document,document,470,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:585,usability,Close,Closes,585,"[PyROOT] Drop support for `from ROOT import *`; Wild card imports like `from ROOT import *` stopped working with Python 3.11 given some changes in the CPython API. For that reason, upstream `cppyy` also dropped support for lazy lookups, which was the feature that enabled wildcard imports: https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005#diff-6160c0eb004dabeedaeb58d804a7ecd3e563d9379e9e7af39623fd38d0bc6a37R352. This commit suggests to document `from ROOT import *` officially as unsupported and remove the corresponding code path in the ROOT facade. Closes #7669.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14590:211,availability,error,error,211,Very long text string generated a wrong SVG file; Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:211,performance,error,error,211,Very long text string generated a wrong SVG file; Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:193,safety,avoid,avoids,193,Very long text string generated a wrong SVG file; Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:211,safety,error,error,211,Very long text string generated a wrong SVG file; Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:211,usability,error,error,211,Very long text string generated a wrong SVG file; Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:221,usability,user,user,221,Very long text string generated a wrong SVG file; Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14591:38,integrability,pub,public,38,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:52,integrability,interfac,interface,52,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:104,integrability,pub,public,104,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:122,integrability,interfac,interface,122,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:52,interoperability,interfac,interface,52,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:122,interoperability,interfac,interface,122,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:52,modifiability,interfac,interface,52,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:122,modifiability,interfac,interface,122,[ntuple] remove page source/sink from public RField interface; Includes moving CommitCluster out of the public RFieldBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/issues/14592:0,availability,Error,Error,0,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:85,availability,error,error,85,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:267,availability,error,errors,267,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:340,availability,error,errors,340,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:365,availability,Error,Error,365,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:394,availability,error,error,394,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:610,availability,error,error,610,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:807,availability,error,error,807,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1325,availability,Error,Error,1325," nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1352,availability,error,error,1352,"dentical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1476,availability,Error,Error,1476,"ttps://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1503,availability,error,error,1503,"ect/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2277,availability,sli,slightly,2277,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2624,availability,Operat,Operating,2624,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:221,deployability,updat,updated,221,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:281,deployability,log,logs,281,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1682,deployability,Patch,Patch,1682,"the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1839,deployability,version,version,1839,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2091,deployability,automat,automatic,2091,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2346,deployability,version,version,2346,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2507,deployability,Instal,Installation,2507,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2528,deployability,Build,Build,2528,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2581,deployability,Build,Build,2581,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:91,integrability,messag,message,91,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:616,integrability,messag,message,616,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1839,integrability,version,version,1839,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2346,integrability,version,version,2346,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:91,interoperability,messag,message,91,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:616,interoperability,messag,message,616,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2016,interoperability,standard,standard,2016,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:755,modifiability,paramet,parameters,755,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1839,modifiability,version,version,1839,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2346,modifiability,version,version,2346,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:0,performance,Error,Error,0,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:85,performance,error,error,85,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:267,performance,error,errors,267,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:340,performance,error,errors,340,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:365,performance,Error,Error,365,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:394,performance,error,error,394,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:610,performance,error,error,610,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:807,performance,error,error,807,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1325,performance,Error,Error,1325," nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1352,performance,error,error,1352,"dentical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1476,performance,Error,Error,1476,"ttps://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1503,performance,error,error,1503,"ect/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2277,reliability,sli,slightly,2277,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:0,safety,Error,Error,0,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:85,safety,error,error,85,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:221,safety,updat,updated,221,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:267,safety,error,errors,267,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:281,safety,log,logs,281,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:291,safety,test,test,291,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:340,safety,error,errors,340,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:365,safety,Error,Error,365,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:394,safety,error,error,394,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:610,safety,error,error,610,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:807,safety,error,error,807,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1325,safety,Error,Error,1325," nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1352,safety,error,error,1352,"dentical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1476,safety,Error,Error,1476,"ttps://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1503,safety,error,error,1503,"ect/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1534,safety,input,input,1534,"3d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1682,safety,Patch,Patch,1682,"the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1688,safety,test,tested,1688,"ot cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2478,safety,test,test,2478,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:221,security,updat,updated,221,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:281,security,log,logs,281,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:354,security,ident,identical,354,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:676,security,ident,identify,676,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1682,security,Patch,Patch,1682,"the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:16,testability,context,context,16,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:102,testability,Context,Context,102,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:281,testability,log,logs,281,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:291,testability,test,test,291,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1688,testability,test,tested,1688,"ot cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2091,testability,automat,automatic,2091,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2478,testability,test,test,2478,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:2695,testability,context,context,2695,"blem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build from Source within FairSoft (v6.22 and v6.26), Build from source standalone (master). ### Operating system. Debian12, Ubuntu 20.04, Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:0,usability,Error,Error,0,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:85,usability,error,error,85,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:150,usability,help,helping,150,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:166,usability,support,support,166,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:267,usability,error,errors,267,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:340,usability,error,errors,340,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:365,usability,Error,Error,365,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:394,usability,error,error,394,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:610,usability,error,error,610,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:624,usability,help,helps,624,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:807,usability,error,error,807,"Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message; **Context:**. I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains. One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1325,usability,Error,Error,1325," nodes. All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1352,usability,error,error,1352,"dentical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1476,usability,Error,Error,1476,"ttps://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1503,usability,error,error,1503,"ect/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:1534,usability,input,input,1534,"3d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**. The error message helps neither. - to find out the call origin . - to identify the root cause. - to fix the problem. as it provides . 1. neither the parameters used in the top call . 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** . (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `). ```diff. diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx. index b8acf771d9..2f844b98da 100644. --- a/graf2d/graf/src/TTF.cxx. +++ b/graf2d/graf/src/TTF.cxx. @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize). }. . Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;. - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)). - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");. + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);. + if (err). + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);. }. . ////////////////////////////////////////////////////////////////////////////////. ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter). The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**. In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but corresponding block seems unchanged since the initial commit in 2003, local compilation test on `master` worked. ### Installation method. Build fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14593:261,availability,error,error,261,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:274,availability,error,error,274,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:366,availability,error,error,366,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:458,availability,error,error,458,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:550,availability,error,error,550,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:642,availability,Error,Error,642,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:837,availability,Operat,Operating,837,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:0,deployability,Build,Build,0,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:6,deployability,fail,fails,6,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:116,deployability,fail,fails,116,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:125,deployability,build,build,125,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:236,deployability,fail,fails,236,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,deployability,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,deployability,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,deployability,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,deployability,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:665,deployability,fail,failed,665,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:771,deployability,version,version,771,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:793,deployability,Instal,Installation,793,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:814,deployability,build,build,814,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:222,energy efficiency,Core,Core,222,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:693,energy efficiency,core,core,693,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,integrability,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,integrability,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,integrability,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,integrability,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:771,integrability,version,version,771,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,interoperability,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,interoperability,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,interoperability,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,interoperability,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:152,modifiability,variab,variable,152,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,modifiability,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,modifiability,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,modifiability,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,modifiability,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:771,modifiability,version,version,771,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:261,performance,error,error,261,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:274,performance,error,error,274,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:366,performance,error,error,366,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:458,performance,error,error,458,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:550,performance,error,error,550,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:642,performance,Error,Error,642,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:6,reliability,fail,fails,6,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:116,reliability,fail,fails,116,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:236,reliability,fail,fails,236,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,reliability,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,reliability,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,reliability,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,reliability,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:658,reliability,pra,pragma,658,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:665,reliability,fail,failed,665,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:261,safety,error,error,261,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:274,safety,error,error,274,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:366,safety,error,error,366,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:458,safety,error,error,458,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:550,safety,error,error,550,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:642,safety,Error,Error,642,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,security,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,security,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,security,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,security,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:289,testability,integr,integral,289,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:381,testability,integr,integral,381,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:473,testability,integr,integral,473,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:565,testability,integr,integral,565,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:884,testability,context,context,884,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:261,usability,error,error,261,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:274,usability,error,error,274,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:366,usability,error,error,366,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:458,usability,error,error,458,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:550,usability,error,error,550,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14593:642,usability,Error,Error,642,"Build fails with CLING_DEBUG=1 set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:. ```. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'. Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h. ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14593
https://github.com/root-project/root/issues/14594:621,availability,Operat,Operating,621,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:559,deployability,version,version,559,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:577,deployability,Instal,Installation,577,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:598,deployability,build,build,598,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:559,integrability,version,version,559,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:352,modifiability,deco,decode,352,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:559,modifiability,version,version,559,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:263,reliability,doe,does,263,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:200,safety,compl,complex,200,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:200,security,compl,complex,200,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:659,testability,context,context,659,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14594:221,usability,custom,custom,221,Provide `file.root` request in THttpServer; ### Explain what you would like to see improved and how. There are different kind of requests like `root.json` or `root.bin` to obtain object data. But for complex classes with custom streamers like `TH1I` reading JSON does not work and with binary request one still need to obtain streamer infos to be able decode object data. To combine both of such requests one can just provide possibility to request root file with single object inside. This will solve problems with extra handling of streamer infos. ### ROOT version. all. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14594
https://github.com/root-project/root/issues/14595:292,availability,error,error,292,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1132,availability,Error,Error,1132,"ar experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1205,availability,Down,Downloads,1205,"r/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:2195,availability,Operat,Operating,2195,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:263,deployability,version,versions,263,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:317,deployability,configurat,configuration,317,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:639,deployability,Toolchain,Toolchains,639,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:930,deployability,Toolchain,Toolchains,930,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1369,deployability,depend,dependency,1369,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1436,deployability,build,build,1436,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1471,deployability,fail,failed,1471,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1479,deployability,Build,Build,1479,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1623,deployability,version,version,1623,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1632,deployability,fail,fails,1632,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1651,deployability,version,versions,1651,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1971,deployability,version,version,1971,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:2152,deployability,Instal,Installation,2152,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:263,integrability,version,versions,263,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:317,integrability,configur,configuration,317,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1073,integrability,Configur,Configuring,1073,"ssues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ----",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1369,integrability,depend,dependency,1369,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1623,integrability,version,version,1623,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1651,integrability,version,versions,1651,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1971,integrability,version,version,1971,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:263,modifiability,version,versions,263,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:317,modifiability,configur,configuration,317,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1073,modifiability,Configur,Configuring,1073,"ssues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ----",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1369,modifiability,depend,dependency,1369,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1623,modifiability,version,version,1623,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1651,modifiability,version,versions,1651,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1971,modifiability,version,version,1971,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:292,performance,error,error,292,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:620,performance,Content,Contents,620,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:911,performance,Content,Contents,911,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1132,performance,Error,Error,1132,"ar experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1471,reliability,fail,failed,1471,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1632,reliability,fail,fails,1632,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:292,safety,error,error,292,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:491,safety,Detect,Detecting,491,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:525,safety,Detect,Detecting,525,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:703,safety,Detect,Detecting,703,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:736,safety,Detect,Detecting,736,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:776,safety,Detect,Detecting,776,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:812,safety,Detect,Detecting,812,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:996,safety,Detect,Detecting,996,"roblem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1031,safety,Detect,Detecting,1031,"Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1132,safety,Error,Error,1132,"ar experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1369,safety,depend,dependency,1369,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:317,security,configur,configuration,317,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:376,security,ident,identification,376,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:442,security,ident,identification,442,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:491,security,Detect,Detecting,491,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:525,security,Detect,Detecting,525,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:703,security,Detect,Detecting,703,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:736,security,Detect,Detecting,736,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:776,security,Detect,Detecting,776,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:812,security,Detect,Detecting,812,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:996,security,Detect,Detecting,996,"roblem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1031,security,Detect,Detecting,1031,"Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1073,security,Configur,Configuring,1073,"ssues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ----",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1826,security,Team,Team,1826,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1369,testability,depend,dependency,1369,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:2235,testability,context,context,2235,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:292,usability,error,error,292,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:639,usability,Tool,Toolchains,639,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:930,usability,Tool,Toolchains,930,"Problem when creating dictionary in Osx 12.7, Xcode 14.2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1132,usability,Error,Error,1132,"ar experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1162,usability,custom,custom,1162," shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1169,usability,command,command,1169,"ow to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1190,usability,User,Users,1190,"onary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:2019,usability,help,help,2019,"newer versions of Osx / Xcode. The error happens during the configuration:. ```. cmake .. -G Xcode . -- The C compiler identification is AppleClang 14.0.0.14000029. -- The CXX compiler identification is AppleClang 14.0.0.14000029. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Configuring done (12.8s). -- Generating done (0.0s). CMake Error in CMakeLists.txt:. The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree. data2TreeLib. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly. ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.26/14 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 28 2023, 00:39:39 |. | From tags/v6-26-14@v6-26-14 |. | With Apple clang version 14.0.0 (clang-1400.0.29.202) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/pull/14596:78,deployability,version,version,78,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:91,deployability,patch,patch,91,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:174,energy efficiency,current,current,174,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:78,integrability,version,version,78,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:78,modifiability,version,version,78,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:91,safety,patch,patch,91,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:91,security,patch,patch,91,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14596:115,security,expos,exposes,115,[meta][cppyy] Export `isAggregate` property to TDictionary; This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:. https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:. https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14596
https://github.com/root-project/root/pull/14597:105,integrability,wrap,wrapping,105,"[ntuple] Refactor sink creation; `RPagePersistentSink::Create` guesses the concrete derived sink without wrapping it in a `RPageSinkBuf`, which is now entirely left in the responsibility of the `RNTupleWriter`. (as suggested in https://github.com/root-project/root/pull/14519#discussion_r1477061194)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14597
https://github.com/root-project/root/pull/14597:9,modifiability,Refact,Refactor,9,"[ntuple] Refactor sink creation; `RPagePersistentSink::Create` guesses the concrete derived sink without wrapping it in a `RPageSinkBuf`, which is now entirely left in the responsibility of the `RNTupleWriter`. (as suggested in https://github.com/root-project/root/pull/14519#discussion_r1477061194)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14597
https://github.com/root-project/root/pull/14597:172,modifiability,responsibil,responsibility,172,"[ntuple] Refactor sink creation; `RPagePersistentSink::Create` guesses the concrete derived sink without wrapping it in a `RPageSinkBuf`, which is now entirely left in the responsibility of the `RNTupleWriter`. (as suggested in https://github.com/root-project/root/pull/14519#discussion_r1477061194)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14597
https://github.com/root-project/root/pull/14597:9,performance,Refactor,Refactor,9,"[ntuple] Refactor sink creation; `RPagePersistentSink::Create` guesses the concrete derived sink without wrapping it in a `RPageSinkBuf`, which is now entirely left in the responsibility of the `RNTupleWriter`. (as suggested in https://github.com/root-project/root/pull/14519#discussion_r1477061194)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14597
https://github.com/root-project/root/issues/14598:434,availability,state,states,434,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2245,availability,state,states,2245,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2311,availability,state,states,2311,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2732,availability,Operat,Operating,2732,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:184,deployability,fail,failing,184,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:309,deployability,fail,failing,309,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2297,deployability,fail,fail,2297,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2597,deployability,fail,failing,2597,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2711,deployability,version,version,2711,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2363,energy efficiency,Draw,DrawClone,2363,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:434,integrability,state,states,434,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2245,integrability,state,states,2245,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2311,integrability,state,states,2311,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2711,integrability,version,version,2711,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2083,modifiability,Inherit,InheritsFrom,2083,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2711,modifiability,version,version,2711,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1806,performance,CACH,CACHEREAD,1806,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:184,reliability,fail,failing,184,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:309,reliability,fail,failing,309,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2297,reliability,fail,fail,2297,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:2597,reliability,fail,failing,2597,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:148,safety,test,test,148,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:317,safety,test,test,317,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1846,security,access,access,1846,"hire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys());. while ((key = (TKey*)nextkey())) {. TObject *obj = key->ReadObj();. if (obj->InheritsFrom(""TMultiGraph"")) {. mg = (TMultiGraph*)obj;. p->AddBin(mg);. }. }. // Fill TH2Poly. printf(""nx = %d\n"",nx);. for (i=0; i<nx; i++) {. printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail. p->Fill(states[i], pop[i]);. }. gStyle->SetOptStat(11);. p->DrawClone(""COL"");. }. ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```. root sg50b.C++. ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it. In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:148,testability,test,test,148,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:317,testability,test,test,317,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:22,usability,behavi,behaviour,22,"A ""printf"" change the behaviour of a macro ... ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I was investigating why test number 50 of stressGraphics is failing when stressGraphics is run in interpreted mode on Mac. In compiled mode mode it runs just fine. I have extracted the failing test and made the following macro:. ### Reproducer. ```. void sg50b() {. Int_t i;. const Int_t nx = 48;. const char *states [nx] = {. ""alabama"", ""arizona"", ""arkansas"", ""california"",. ""colorado"", ""connecticut"", ""delaware"", ""florida"",. ""georgia"", ""idaho"", ""illinois"", ""indiana"",. ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",. ""maine"", ""maryland"", ""massachusetts"", ""michigan"",. ""minnesota"", ""mississippi"", ""missouri"", ""montana"",. ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",. ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",. ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",. ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",. ""texas"", ""utah"", ""vermont"", ""virginia"",. ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming"". };. Double_t pop[nx] = {. 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,. 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,. 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,. 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,. 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,. 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270. };. Double_t lon1 = -130;. Double_t lon2 = -65;. Double_t lat1 = 24;. Double_t lat2 = 50;. TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. gErrorIgnoreLevel = 9999;. TFile::SetCacheFileDir(""."");. TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {. printf(""Cannot access usa.root. Is internet working ?\n"");. return;. }. // Define the TH2Poly bins. TMultiGraph *mg;. TKey *key;. TIter nextkey(gDirectory->GetListOfKeys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14599:298,deployability,updat,update,298,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:280,interoperability,specif,specify,280,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:298,safety,updat,update,298,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:501,safety,compl,completeness,501,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:298,security,updat,update,298,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:501,security,compl,completeness,501,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:254,usability,close,closely,254,"The example th2polyUSA.C needs re-labelling; ### Explain what you would like to see improved and how. In https://root.cern/doc/master/th2polyUSA_8C.html (and example 50 in stressGraphics), the map is missing Hawaii and Alaska now that I look at the plot closely... We should also specify a year or update the population numbers (and fix a year)... It turns out that we can elegantly call this map ""Lower 48"" (https://en.wikipedia.org/wiki/Contiguous_United_States) then we can figure out the year for completeness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14601:445,availability,error,error,445,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:660,availability,error,error,660,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1644,availability,Operat,Operating,1644,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:244,deployability,fail,fails,244,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:302,deployability,fail,fails,302,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:377,deployability,BUILD,BUILD,377,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:591,deployability,BUILD,BUILD,591,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1100,deployability,version,version,1100,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1424,deployability,version,version,1424,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1609,deployability,Instal,Installation,1609,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:553,energy efficiency,current,current,553,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:770,energy efficiency,current,current,770,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1000,energy efficiency,current,current,1000,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1100,integrability,version,version,1100,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1424,integrability,version,version,1424,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1100,modifiability,version,version,1100,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1424,modifiability,version,version,1424,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:445,performance,error,error,445,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:660,performance,error,error,660,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:244,reliability,fail,fails,244,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:302,reliability,fail,fails,302,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:445,safety,error,error,445,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:660,safety,error,error,660,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1255,security,Team,Team,1255,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1684,testability,context,context,1684,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:360,usability,User,Users,360,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:445,usability,error,error,445,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:574,usability,User,Users,574,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:660,usability,error,error,660,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:1471,usability,help,help,1471,"std::source_location not found when running with c++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```. In file included from input_line_8:1:. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'. std::source_location loc = std::source_location::current();. ~~~~~^. ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++. #include <source_location>. #include <iostream>. int foo() {. std::source_location loc = std::source_location::current();. std::cout << ""File: "" << loc.function_name() << std::endl;. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jan 26 2024, 10:35:25 |. | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |. | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14602:310,availability,error,errors,310,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1093,availability,error,error,1093, issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file incl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2267,availability,error,error,2267,"ame lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2550,availability,error,error,2550,"T_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2566,availability,error,errors,2566,"n file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2841,availability,error,errors,2841,":. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3039,availability,error,error,3039,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3410,availability,error,error,3410,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3774,availability,error,error,3774,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3921,availability,Operat,Operating,3921,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:209,deployability,build,building-cling-dll-from-source-code,209,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3859,deployability,version,version,3859,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3877,deployability,Instal,Installation,3877,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3898,deployability,build,build,3898,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3859,integrability,version,version,3859,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1070,interoperability,share,shared,1070,s.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\O,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1077,interoperability,rpc,rpcndr,1077, Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1220,interoperability,share,shared,1220,-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1227,interoperability,rpc,rpcndr,1227,om-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2244,interoperability,share,shared,2244,"e: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\201",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2251,interoperability,rpc,rpcndr,2251,"idate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Commu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3017,interoperability,share,shared,3017,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3024,interoperability,rpc,rpcndr,3024,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3138,interoperability,share,shared,3138,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3145,interoperability,rpc,rpcndr,3145,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3388,interoperability,share,shared,3388,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3395,interoperability,rpc,rpcndr,3395,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3509,interoperability,share,shared,3509,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3516,interoperability,rpc,rpcndr,3516,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3859,modifiability,version,version,3859,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:310,performance,error,errors,310,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1093,performance,error,error,1093, issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file incl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2267,performance,error,error,2267,"ame lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2550,performance,error,error,2550,"T_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2566,performance,error,errors,2566,"n file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2841,performance,error,errors,2841,":. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3039,performance,error,error,3039,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3410,performance,error,error,3410,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3774,performance,error,error,3774,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:310,safety,error,errors,310,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1093,safety,error,error,1093, issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file incl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2267,safety,error,error,2267,"ame lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2550,safety,error,error,2550,"T_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2566,safety,error,errors,2566,"n file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2841,safety,error,errors,2841,":. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3039,safety,error,error,3039,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3410,safety,error,error,3410,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3774,safety,error,error,3774,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3963,testability,context,context,3963,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:310,usability,error,errors,310,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:449,usability,Visual,Visual,449,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:481,usability,Tool,Tools,481,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:588,usability,Visual,Visual,588,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:620,usability,Tool,Tools,620,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:728,usability,Visual,Visual,728,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:760,usability,Tool,Tools,760,The implicit `using namespace std;` can have nasty side effects on Windows.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1093,usability,error,error,1093, issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:. ```. root [0] #include <atlstr.h>. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file incl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1357,usability,Visual,Visual,1357,"e included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1389,usability,Tool,Tools,1389,". In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1623,usability,Visual,Visual,1623,"MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1655,usability,Tool,Tools,1655,"atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1762,usability,Visual,Visual,1762,"\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout <<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1794,usability,Tool,Tools,1794,"\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1902,usability,Visual,Visual,1902,"37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:1934,usability,Tool,Tools,1934,"ogram Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous. typedef byte cs_byte;. ^. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atls",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2267,usability,error,error,2267,"ame lookup is 'byte'. typedef unsigned char byte;. ^. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2373,usability,Visual,Visual,2373,"Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2405,usability,Tool,Tools,2405,"133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. In file included from ROOT_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2550,usability,error,error,2550,"T_prompt_0:1:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2566,usability,error,errors,2566,"n file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2582,usability,stop,stopping,2582,"rom C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2841,usability,error,errors,2841,":. In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:2858,usability,User,Users,2858,"ed from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:3039,usability,error,error,3039,". In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:. In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous. byte * pNetworkData,. ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'. enum class byte : unsigned char {};. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. root [1]. ```. To illustrate this, compiling this code:. ```. #include <iostream>. using namespace std;. #include <atlstr.h>. int main() {. std::cout << ""hello world!"" << std::endl;. return 0;. }. ```. is enough to generate the errors:. ```. C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx. atlstr.cxx. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol. C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```. And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:. ```. root [0] #include <atlstr.h>. ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
