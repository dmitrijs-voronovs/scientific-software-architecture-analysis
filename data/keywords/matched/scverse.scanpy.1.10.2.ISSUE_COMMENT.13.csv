id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/scverse/scanpy/pull/941:598,integrability,compon,components,598,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:644,integrability,compon,components,644,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:701,integrability,compon,components,701,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:829,integrability,compon,component,829,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:987,integrability,compon,component,987,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:412,interoperability,compon,components,412,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:598,interoperability,compon,components,598,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:644,interoperability,compon,components,644,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:701,interoperability,compon,components,701,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:829,interoperability,compon,component,829,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:987,interoperability,compon,component,987,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:186,modifiability,variab,variable,186,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:412,modifiability,compon,components,412,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:511,modifiability,variab,variables,511,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:598,modifiability,compon,components,598,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:644,modifiability,compon,components,644,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:701,modifiability,compon,components,701,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:829,modifiability,compon,component,829,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:961,modifiability,variab,variable,961,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:987,modifiability,compon,component,987,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:970,performance,load,loadings,970,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:350,safety,input,input,350,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:902,safety,except,except,902,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:295,security,sign,signals,295,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:462,security,sign,signals,462,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:857,security,sign,signal,857,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:118,testability,understand,understanding,118,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:250,usability,user,user,250,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:350,usability,input,input,350,"I'll give a brief hand-wavy explanation now, before checking with someone who knows more about it whether my in depth understanding is correct. PCA is finding a set linearly independent variable which form a new basis for the data. ICA is finding N (user defined) discrete maximally independent signals from the data. They won't form a basis for the input data, and results can vary a lot based on the number of components you try and find. However, each of the signals is discrete and made of a sparser set of variables, which I think makes them more interpretable. I'd relate this to how the PCA components become a single blob while the ICA components keep separating clusters. For example, in the components that you point out, I would agree 1, 5, and 7 look to be the same (note: I may have underspecified N here). However, component 3 is picking up a signal which is largely colinear with those, except for one cluster. To me, that says the difference in variable loadings between component 3 and the others is worth investigating.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:292,availability,cluster,clusters,292,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:337,availability,redund,redundant,337,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:292,deployability,cluster,clusters,292,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:337,deployability,redundan,redundant,337,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:141,energy efficiency,optim,optimal,141,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:176,energy efficiency,optim,optima,176,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:337,reliability,redundan,redundant,337,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:337,safety,redund,redundant,337,"Thanks for the explanation. But what do you mean by ""discrete"" here? And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I guess that's just local optima that are found. It feels strange to generally say that ICA is better as higher dimensions still separate out clusters, while at lower dimensions there is redundant information compared to PCA.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:28,availability,redund,redundant,28,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:362,availability,failur,failure,362,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:867,availability,cluster,clustering,867,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:937,availability,redund,redundant,937,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:28,deployability,redundan,redundant,28,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:362,deployability,fail,failure,362,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:867,deployability,cluster,clustering,867,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:937,deployability,redundan,redundant,937,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:196,energy efficiency,optim,optimal,196,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:69,integrability,compon,component,69,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:300,integrability,compon,components,300,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:594,integrability,compon,components,594,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:641,integrability,compon,components,641,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1015,integrability,compon,components,1015,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:69,interoperability,compon,component,69,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:300,interoperability,compon,components,300,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:594,interoperability,compon,components,594,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:641,interoperability,compon,components,641,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1015,interoperability,compon,components,1015,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:69,modifiability,compon,component,69,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:300,modifiability,compon,components,300,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:387,modifiability,deco,decompositions,387,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:594,modifiability,compon,components,594,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:641,modifiability,compon,components,641,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:795,modifiability,deco,decompositions,795,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1015,modifiability,compon,components,1015,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:362,performance,failur,failure,362,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:28,reliability,redundan,redundant,28,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:362,reliability,fail,failure,362,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:937,reliability,redundan,redundant,937,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:28,safety,redund,redundant,28,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:937,safety,redund,redundant,937,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:102,security,sign,signal,102,"I think saying discrete was redundant with independent, in that each component should correspond to a signal in the data. > And so you're saying 1, 5, and 7 being given as solutions to ICA is non-optimal. I'm not sure how to interpret it. I know that if I run an analysis on the same dataset with 20 components I get more independent ones. My impression is the ""failure modes"" of linear decompositions like this are not well characterized. > It feels strange to generally say that ICA is better as higher dimensions. I probably wouldn't say this. I think there are different use cases, and ICA components may be easier to interpret than PCA components. I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". I think I'll still use PCA for clustering and generating UMAPs. > while at lower dimensions there is redundant information compared to PCA. I'd note that there is no order to ICA components.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:377,energy efficiency,optim,optimal,377,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:6,integrability,compon,components,6,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:53,integrability,compon,components,53,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:149,integrability,compon,component,149,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:331,integrability,compon,components,331,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:751,integrability,sub,subjective,751,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1026,integrability,compon,components,1026,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1079,integrability,compon,components,1079,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:6,interoperability,compon,components,6,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:53,interoperability,compon,components,53,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:149,interoperability,component base,component based,149,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:331,interoperability,compon,components,331,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1026,interoperability,compon,components,1026,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1079,interoperability,compon,components,1079,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:6,modifiability,compon,components,6,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:53,modifiability,compon,components,53,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:149,modifiability,compon,component,149,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:331,modifiability,compon,components,331,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:540,modifiability,deco,decompositions,540,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:662,modifiability,deco,decompositions,662,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:911,modifiability,deco,decompositions,911,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1026,modifiability,compon,components,1026,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:1079,modifiability,compon,components,1079,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:267,performance,time,time,267,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:762,security,assess,assessment,762,"> ICA components may be easier to interpret than PCA components. . I find this difficult to generalize. I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). In ICA I would have to find some sort of enrichment every time to interpret the same thing. Surely ICA must have spurious components as well (even if only based on non-optimal solutions). >I was also just at a talk by Elana Fertig (who knows much more about this kind of thing than I do) where one of the take aways was ""different decompositions for different use-cases"". That's not really a useful take-away for me. That would say I should try as many decompositions as possible to see when I get a good result. So then I have to rely on my subjective assessment of ""good"" being based on what I expect the data to show. This is especially difficult if there is some stochasticity in the output of the decompositions. I assume there is some sort of random seed for ICA given that there is no inherent ordering to the components? > I'd note that there is no order to ICA components. Good point.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:477,availability,cluster,clustering,477,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:627,availability,robust,robust,627,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:838,availability,robust,robustness,838,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:477,deployability,cluster,clustering,477,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:519,deployability,modul,modules,519,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:937,deployability,pipelin,pipeline,937,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:588,energy efficiency,load,loadings,588,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:47,integrability,compon,component,47,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:937,integrability,pipelin,pipeline,937,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:47,interoperability,component base,component based,47,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:124,interoperability,specif,specifically,124,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:47,modifiability,compon,component,47,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:231,modifiability,deco,decompositions,231,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:345,modifiability,deco,decompositions,345,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:365,modifiability,deco,decomposition,365,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:519,modifiability,modul,modules,519,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:579,modifiability,variab,variable,579,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:588,performance,load,loadings,588,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:627,reliability,robust,robust,627,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:838,reliability,robust,robustness,838,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:519,safety,modul,modules,519,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:627,safety,robust,robust,627,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:797,safety,valid,validation,797,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:838,safety,robust,robustness,838,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:733,security,trust,trust,733,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:797,security,validat,validation,797,"> I know exactly that in PCA I can interpret a component based on its rank (and/or variance contribution). Ah, I meant more specifically that it may be easier to biologically interpret an ICA. > That would say I should try as many decompositions as possible to see when I get a good result. I'm a little unsure of your meaning here. Do you mean decompositions like decomposition techniques? If so, I don't think this is the right conclusion. I think it means: probably PCA for clustering, probably NMF for finding gene modules. I would also suspect something which finds sparser variable loadings like ICA or NMF could be more robust for cross dataset classification. If you mean, if the results are unstable how do we know which to trust – I did ask that question. I think it's the usual: have a validation dataset, maybe some ensemble/ robustness method, or do some sort of enrichment. It's an open question, but a lot of our analysis pipeline is.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:74,availability,robust,robustness,74,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:714,energy efficiency,measur,measure,714,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:74,reliability,robust,robustness,74,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:296,reliability,pra,practice,296,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:74,safety,robust,robustness,74,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:527,safety,valid,validation,527,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:527,security,validat,validation,527,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/pull/941:591,usability,user,users,591,"I was referring to both the instability and what i understood to mean non-robustness to different datasets. But it seems a ""use case"" is an analytical step here, rather than a particular dataset to be analysed. That makes it a lot better, and it means there is work to be done but a general best practice conclusion would be reachable. . In that case it's only the instability of the algorithm that is the issue per dataset. And in the case where you're doing exploratory analysis for a new dataset, you don't typically have a validation dataset, which makes this pretty challenging for end users of the method. Enrichment could be a way forward I guess... I'm not the biggest fan of using enrichment results as a measure for success though. Enrichment results still require quite a bit of interpretation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941
https://github.com/scverse/scanpy/issues/942:19,deployability,version,versions,19,It looks like your versions aren't up to date.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:19,integrability,version,versions,19,It looks like your versions aren't up to date.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:19,modifiability,version,versions,19,It looks like your versions aren't up to date.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:39,deployability,updat,updated,39,"@ivirshup Thanks for pointing it up. I updated all to newest version, and it worked!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:61,deployability,version,version,61,"@ivirshup Thanks for pointing it up. I updated all to newest version, and it worked!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:61,integrability,version,version,61,"@ivirshup Thanks for pointing it up. I updated all to newest version, and it worked!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:61,modifiability,version,version,61,"@ivirshup Thanks for pointing it up. I updated all to newest version, and it worked!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:39,safety,updat,updated,39,"@ivirshup Thanks for pointing it up. I updated all to newest version, and it worked!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:39,security,updat,updated,39,"@ivirshup Thanks for pointing it up. I updated all to newest version, and it worked!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:67,availability,avail,available,67,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:128,availability,error,error,128,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:24,deployability,instal,install,24,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:36,deployability,version,version,36,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:212,deployability,Version,Version,212,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:220,deployability,Build,Build,220,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:181,energy efficiency,Load,Loading,181,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:36,integrability,version,version,36,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:212,integrability,Version,Version,212,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:36,modifiability,version,version,36,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:212,modifiability,Version,Version,212,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:128,performance,error,error,128,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:181,performance,Load,Loading,181,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:67,reliability,availab,available,67,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:67,safety,avail,available,67,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:128,safety,error,error,128,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:67,security,availab,available,67,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:128,usability,error,error,128,@MichaelPeibo Could you install the version 1.4.5.post1? It is not available in conda and with 1.4.4.post1 I'm getting the same error. Thanks! ```. conda search -c bioconda scanpy. Loading channels: done. # Name Version Build Channel . scanpy 1.3.1 py36_0 bioconda . scanpy 1.3.2 py36_0 bioconda . scanpy 1.3.3 py36_0 bioconda . scanpy 1.3.4 py36_0 bioconda . scanpy 1.3.5 py36_0 bioconda . scanpy 1.3.6 py36_0 bioconda . scanpy 1.3.7 py36_0 bioconda . scanpy 1.4 py_0 bioconda . scanpy 1.4.1 py_0 bioconda . scanpy 1.4.2 py_0 bioconda . scanpy 1.4.3 py_0 bioconda . scanpy 1.4.4 py_0 bioconda . scanpy 1.4.4 py_1 bioconda . scanpy 1.4.4.post1 py_0 bioconda . scanpy 1.4.4.post1 py_1 bioconda . scanpy 1.4.4.post1 py_2 bioconda . ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:28,availability,avail,available,28,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:17,deployability,version,version,17,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:62,deployability,instal,installing,62,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:81,deployability,instal,install,81,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:17,integrability,version,version,17,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:17,modifiability,version,version,17,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:28,reliability,availab,available,28,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:28,safety,avail,available,28,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:28,security,availab,available,28,"@massonix Latest version is available on PyPI, so you can try installing via pip install.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:42,usability,help,help,42,"That worked, thank you very much for your help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:21,availability,error,error,21,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:117,availability,slo,slow,117,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:59,deployability,updat,updating,59,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:21,performance,error,error,21,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:117,reliability,slo,slow,117,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:21,safety,error,error,21,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:59,safety,updat,updating,59,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:59,security,updat,updating,59,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/issues/942:21,usability,error,error,21,"I still had the same error with `scanpy` 1.4.5, in my case updating `anndata` solved the issue, but now I've hit the slow concatenation problem https://github.com/theislab/anndata/issues/303",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942
https://github.com/scverse/scanpy/pull/943:82,integrability,sub,subsample,82,"I'd like to merge this. I think we could just rename the function, and deprecate `subsample`. I'd like the name `sample` more for this function if we could add a `dim` argument so users can subsample on the variable as well.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/943
https://github.com/scverse/scanpy/pull/943:190,integrability,sub,subsample,190,"I'd like to merge this. I think we could just rename the function, and deprecate `subsample`. I'd like the name `sample` more for this function if we could add a `dim` argument so users can subsample on the variable as well.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/943
https://github.com/scverse/scanpy/pull/943:207,modifiability,variab,variable,207,"I'd like to merge this. I think we could just rename the function, and deprecate `subsample`. I'd like the name `sample` more for this function if we could add a `dim` argument so users can subsample on the variable as well.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/943
https://github.com/scverse/scanpy/pull/943:180,usability,user,users,180,"I'd like to merge this. I think we could just rename the function, and deprecate `subsample`. I'd like the name `sample` more for this function if we could add a `dim` argument so users can subsample on the variable as well.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/943
https://github.com/scverse/scanpy/issues/944:10,usability,experien,experiencing,10,I am also experiencing the same issue.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/944
https://github.com/scverse/scanpy/issues/944:80,usability,user,user-images,80,"Same issue here, also without `standard_scale=""var""` (shown) . ![image](https://user-images.githubusercontent.com/60929679/92390361-00ea7d80-f11b-11ea-90f1-7170e0671dca.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/944
https://github.com/scverse/scanpy/pull/945:18,availability,error,error,18,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:18,performance,error,error,18,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:31,performance,performance test,performance test,31,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:18,safety,error,error,18,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:43,safety,test,test,43,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:43,testability,test,test,43,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:18,usability,error,error,18,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/pull/945:31,usability,perform,performance,31,No idea about the error in the performance test. @flying-sheep ?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945
https://github.com/scverse/scanpy/issues/946:91,integrability,filter,filtered,91,"if you have the barcodes in a list, the following command will give you a new adata object filtered for those cells:. ```python. adata[barcodes].copy(). ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/946
https://github.com/scverse/scanpy/issues/946:50,usability,command,command,50,"if you have the barcodes in a list, the following command will give you a new adata object filtered for those cells:. ```python. adata[barcodes].copy(). ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/946
https://github.com/scverse/scanpy/issues/947:45,performance,cach,caching,45,I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:21,testability,understand,understand,21,I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:398,availability,cluster,clustering,398,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:330,deployability,updat,updating,330,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:398,deployability,cluster,clustering,398,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:472,deployability,stage,stages,472,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:555,deployability,stage,stage,555,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:854,deployability,depend,depends,854,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:570,energy efficiency,load,load,570,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:977,energy efficiency,Current,Currently,977,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:854,integrability,depend,depends,854,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:678,modifiability,paramet,parameter,678,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:854,modifiability,depend,depends,854,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:47,performance,cach,caching,47,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:492,performance,time,times,492,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:570,performance,load,load,570,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:645,performance,time,time,645,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:723,performance,cach,caching,723,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:874,performance,cach,cache,874,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:1150,performance,cach,cached,1150,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:330,safety,updat,updating,330,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:854,safety,depend,depends,854,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:956,safety,reme,remember,956,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:330,security,updat,updating,330,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:1096,security,control,control,1096,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:23,testability,understand,understand,23,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:854,testability,depend,depends,854,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:1096,testability,control,control,1096,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:1107,usability,user,user,1107,"> I'm not sure i fully understand the point of caching. So you store the exact output of all the computations of a function so that it can be rerun exactly? How big do those objects become? We've had problems in the past when running notebooks on different computers (by having different distros or just using the server) or just updating a library produced different results in terms of embedding/clustering... The other benefit is that if analyzing the data in multiple stages (or multiple times), you'd have to either store the adata object after each stage and then load it for the next one. Or just run it from scratch, which can take some time. Not to mention a forgotten parameter which affects reproducibility. The caching makes this convenient - just run the notebook. We only store the attributes generated by each function, therefore the size depends on what you cache and the dimensionality of the data. For ~8k cells, PCA takes upto 8MB (if I remember correctly). Currently, there's no compression scheme in place, but I have it on my todo list. The other thing would be to add more control to user during runtime about what needs to be cached.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:203,availability,state,state,203,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:300,availability,state,states,300,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:438,availability,state,state,438,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:449,availability,state,states,449,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:60,integrability,sub,subsequent,60,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:203,integrability,state,state,203,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:300,integrability,state,states,300,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:438,integrability,state,state,438,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:449,integrability,state,states,449,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:41,modifiability,layer,layer,41,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:146,security,hash,hash,146,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:228,security,hash,hash,228,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:369,security,modif,modifications,369,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:177,usability,interact,interaction,177,"So basically this would be a transaction layer, right? Like subsequent lines in a Dockerfile:. 1. AnnDatas with certain initial data start with a hash computed from it. 2. Each interaction creates a new state with an associated hash. The difference (and only thing that has to be stored) between two states is all properties that changed. 3. If you rerun a script with modifications, all steps that didn’t change just forward to the next state, all states after a change are deleted and the steps executed. Did I get this right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/947:28,energy efficiency,current,currently,28,"Yes, that's right. However, currently I don't have such thing implemented yet (the compression is done though).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/947
https://github.com/scverse/scanpy/issues/948:256,modifiability,pac,packages,256,"Yes. Within the implementation of the `simplicial_set_embedding` function in the [umap_.py](https://github.com/lmcinnes/umap/blob/80f1247de0d60eb60d7222a3cdf9aef9452ab38e/umap/umap_.py) file (in my system it is located at: `~/miniconda3/lib/python3.7/site-packages/umap/umap_.py`), I type-casted the `embedding` objects to `astype(np.float32, copy=False)` from within the call to the `optimize_layout` function: lines 1137 and 1138 in [umap_.py](https://github.com/lmcinnes/umap/blob/80f1247de0d60eb60d7222a3cdf9aef9452ab38e/umap/umap_.py) are thus changed from:. `embedding,`. `embedding`. to:. `embedding.astype(np.float32, copy=False),`. `embedding.astype(np.float32, copy=False)`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:72,deployability,log,logging,72,"Solved same problem for me as well. . For the record, the output of `sc.logging.print_versions()` in my conda environment is: . `scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.17.2 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:72,safety,log,logging,72,"Solved same problem for me as well. . For the record, the output of `sc.logging.print_versions()` in my conda environment is: . `scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.17.2 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:72,security,log,logging,72,"Solved same problem for me as well. . For the record, the output of `sc.logging.print_versions()` in my conda environment is: . `scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.17.2 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:72,testability,log,logging,72,"Solved same problem for me as well. . For the record, the output of `sc.logging.print_versions()` in my conda environment is: . `scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.17.2 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:233,usability,learn,learn,233,"Solved same problem for me as well. . For the record, the output of `sc.logging.print_versions()` in my conda environment is: . `scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.17.2 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:228,deployability,version,version,228,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:344,deployability,depend,depends,344,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:838,deployability,releas,released,838,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:228,integrability,version,version,228,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:344,integrability,depend,depends,344,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:788,integrability,messag,message,788,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:356,interoperability,specif,specifically,356,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:788,interoperability,messag,message,788,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:228,modifiability,version,version,228,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:344,modifiability,depend,depends,344,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:180,reliability,doe,does,180,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:296,reliability,doe,does,296,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:344,safety,depend,depends,344,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/948:344,testability,depend,depends,344,"> Well, as that issue says, it’s fixed in [lmcinnes/umap#261](https://github.com/lmcinnes/umap/pull/261), which means it’s in umap 0.3.10. @flying-sheep unfortunately `umap==3.10` does not fix this relative to the latest scanpy version on Bioconda (`1.4.4.post1`). The issue is that the UMAP fix does not address the branch of code that scanpy depends on (specifically the call follows [this branch in the UMAP code](https://github.com/lmcinnes/umap/blob/41205248fb48391d1f6e4effcb974307b7c229ce/umap/umap_.py#L1059)), which still just passes the `init_coords` in as is. . Of course, there has been [a workaround in scanpy since 1.4.5.post1](https://github.com/theislab/scanpy/commit/1400d1e35f908d6f5ab8a8681970ac4aba673565). However, I would caution against the advice in that commit's message, which assumed that once `umap==3.10` was released the workaround could be removed.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/948
https://github.com/scverse/scanpy/issues/950:64,interoperability,format,format,64,"I think this could be useful, but I'm not sure how stable their format is, or if we can promise to support it. Maybe this could be a standalone package which we link to from the docs? Thoughts @flying-sheep?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:144,modifiability,pac,package,144,"I think this could be useful, but I'm not sure how stable their format is, or if we can promise to support it. Maybe this could be a standalone package which we link to from the docs? Thoughts @flying-sheep?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:99,usability,support,support,99,"I think this could be useful, but I'm not sure how stable their format is, or if we can promise to support it. Maybe this could be a standalone package which we link to from the docs? Thoughts @flying-sheep?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:567,integrability,sub,subscribed,567,"This sounds great. If I recall correctly it is possible to upload data to. the broad single cell portal and share this link with other people right? This would certainly be useful. On Tue, Dec 10, 2019 at 4:23 AM Isaac Virshup <notifications@github.com>. wrote:. > I think this could be useful, but I'm not sure how stable their format is,. > or if we can promise to support it. Maybe this could be a standalone. > package which we link to from the docs? >. > Thoughts @flying-sheep <https://github.com/flying-sheep>? >. > —. > You are receiving this because you are subscribed to this thread. > Reply to this email directly, view it on GitHub. > <https://github.com/theislab/scanpy/issues/950?email_source=notifications&email_token=ABF37VJIYCEDQNKTLEB3V23QX4DS7A5CNFSM4JXFVOAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGMRPJY#issuecomment-563681191>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ABF37VKHFTRDL6MDRBWAJ33QX4DS7ANCNFSM4JXFVOAA>. > . >. -- . Fidel Ramirez.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:108,interoperability,share,share,108,"This sounds great. If I recall correctly it is possible to upload data to. the broad single cell portal and share this link with other people right? This would certainly be useful. On Tue, Dec 10, 2019 at 4:23 AM Isaac Virshup <notifications@github.com>. wrote:. > I think this could be useful, but I'm not sure how stable their format is,. > or if we can promise to support it. Maybe this could be a standalone. > package which we link to from the docs? >. > Thoughts @flying-sheep <https://github.com/flying-sheep>? >. > —. > You are receiving this because you are subscribed to this thread. > Reply to this email directly, view it on GitHub. > <https://github.com/theislab/scanpy/issues/950?email_source=notifications&email_token=ABF37VJIYCEDQNKTLEB3V23QX4DS7A5CNFSM4JXFVOAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGMRPJY#issuecomment-563681191>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ABF37VKHFTRDL6MDRBWAJ33QX4DS7ANCNFSM4JXFVOAA>. > . >. -- . Fidel Ramirez.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:329,interoperability,format,format,329,"This sounds great. If I recall correctly it is possible to upload data to. the broad single cell portal and share this link with other people right? This would certainly be useful. On Tue, Dec 10, 2019 at 4:23 AM Isaac Virshup <notifications@github.com>. wrote:. > I think this could be useful, but I'm not sure how stable their format is,. > or if we can promise to support it. Maybe this could be a standalone. > package which we link to from the docs? >. > Thoughts @flying-sheep <https://github.com/flying-sheep>? >. > —. > You are receiving this because you are subscribed to this thread. > Reply to this email directly, view it on GitHub. > <https://github.com/theislab/scanpy/issues/950?email_source=notifications&email_token=ABF37VJIYCEDQNKTLEB3V23QX4DS7A5CNFSM4JXFVOAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGMRPJY#issuecomment-563681191>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ABF37VKHFTRDL6MDRBWAJ33QX4DS7ANCNFSM4JXFVOAA>. > . >. -- . Fidel Ramirez.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:415,modifiability,pac,package,415,"This sounds great. If I recall correctly it is possible to upload data to. the broad single cell portal and share this link with other people right? This would certainly be useful. On Tue, Dec 10, 2019 at 4:23 AM Isaac Virshup <notifications@github.com>. wrote:. > I think this could be useful, but I'm not sure how stable their format is,. > or if we can promise to support it. Maybe this could be a standalone. > package which we link to from the docs? >. > Thoughts @flying-sheep <https://github.com/flying-sheep>? >. > —. > You are receiving this because you are subscribed to this thread. > Reply to this email directly, view it on GitHub. > <https://github.com/theislab/scanpy/issues/950?email_source=notifications&email_token=ABF37VJIYCEDQNKTLEB3V23QX4DS7A5CNFSM4JXFVOAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGMRPJY#issuecomment-563681191>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ABF37VKHFTRDL6MDRBWAJ33QX4DS7ANCNFSM4JXFVOAA>. > . >. -- . Fidel Ramirez.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:937,security,auth,auth,937,"This sounds great. If I recall correctly it is possible to upload data to. the broad single cell portal and share this link with other people right? This would certainly be useful. On Tue, Dec 10, 2019 at 4:23 AM Isaac Virshup <notifications@github.com>. wrote:. > I think this could be useful, but I'm not sure how stable their format is,. > or if we can promise to support it. Maybe this could be a standalone. > package which we link to from the docs? >. > Thoughts @flying-sheep <https://github.com/flying-sheep>? >. > —. > You are receiving this because you are subscribed to this thread. > Reply to this email directly, view it on GitHub. > <https://github.com/theislab/scanpy/issues/950?email_source=notifications&email_token=ABF37VJIYCEDQNKTLEB3V23QX4DS7A5CNFSM4JXFVOAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGMRPJY#issuecomment-563681191>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ABF37VKHFTRDL6MDRBWAJ33QX4DS7ANCNFSM4JXFVOAA>. > . >. -- . Fidel Ramirez.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:367,usability,support,support,367,"This sounds great. If I recall correctly it is possible to upload data to. the broad single cell portal and share this link with other people right? This would certainly be useful. On Tue, Dec 10, 2019 at 4:23 AM Isaac Virshup <notifications@github.com>. wrote:. > I think this could be useful, but I'm not sure how stable their format is,. > or if we can promise to support it. Maybe this could be a standalone. > package which we link to from the docs? >. > Thoughts @flying-sheep <https://github.com/flying-sheep>? >. > —. > You are receiving this because you are subscribed to this thread. > Reply to this email directly, view it on GitHub. > <https://github.com/theislab/scanpy/issues/950?email_source=notifications&email_token=ABF37VJIYCEDQNKTLEB3V23QX4DS7A5CNFSM4JXFVOAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGMRPJY#issuecomment-563681191>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ABF37VKHFTRDL6MDRBWAJ33QX4DS7ANCNFSM4JXFVOAA>. > . >. -- . Fidel Ramirez.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:126,interoperability,format,format,126,(Orthogonal to this suggestion: We can maybe talk to the SCP people and ask how difficult would it be to use h5ad as a native format.),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,deployability,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,integrability,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,interoperability,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,modifiability,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:68,performance,time,time,68,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,reliability,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,security,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:76,testability,integr,integrate,76,@sjfleming Is there a GIST or repo url to use this code? Might take time to integrate into scanpy/anndata but people can benefit from the code if it already lives somewhere...,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:75,integrability,standardiz,standardizing,75,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:102,integrability,schema,schema,102,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:144,integrability,repositor,repositories,144,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:373,integrability,schema,schemas,373,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:386,integrability,repositor,repositories,386,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:75,interoperability,standard,standardizing,75,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:144,interoperability,repositor,repositories,144,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:386,interoperability,repositor,repositories,386,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/issues/950:277,security,team,team,277,"@gokceneraslan, also kinda orthogonal, but there is some effort going into standardizing metadata and schema of `AnnData`-like objects for data repositories over at the [single-cell-data](https://github.com/single-cell-data) org. A lot of this is being pushed by the cellxgene team. I'd assume SCP can handle h5ads by this point, but it would be nice to be able to enforce schemas that repositories require.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/950
https://github.com/scverse/scanpy/pull/952:186,availability,error,error,186,"> . > . > #530 also related. Are you including the `log_transformed=True` kwarg in your call to `rank_genes_groups()`? oh, I'm not. But when I included it, the ’ValueError: math domain‘ error still appeared.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:186,performance,error,error,186,"> . > . > #530 also related. Are you including the `log_transformed=True` kwarg in your call to `rank_genes_groups()`? oh, I'm not. But when I included it, the ’ValueError: math domain‘ error still appeared.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:186,safety,error,error,186,"> . > . > #530 also related. Are you including the `log_transformed=True` kwarg in your call to `rank_genes_groups()`? oh, I'm not. But when I included it, the ’ValueError: math domain‘ error still appeared.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:186,usability,error,error,186,"> . > . > #530 also related. Are you including the `log_transformed=True` kwarg in your call to `rank_genes_groups()`? oh, I'm not. But when I included it, the ’ValueError: math domain‘ error still appeared.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:231,availability,error,error,231,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:231,performance,error,error,231,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:231,safety,error,error,231,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:269,security,ident,identify,269,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:25,usability,minim,minimal,25,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:231,usability,error,error,231,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:260,usability,help,help,260,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:353,usability,help,help,353,"In #706 @LuckyMD gives a minimal working example in [this comment](https://github.com/theislab/scanpy/issues/706#issuecomment-505335006) that may give you a useful starting point. Their advice to create/post a way to reproduce the error is good too, as it may help you identify the source of the problem in the process (and make it easier for others to help troubleshoot)!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/pull/952:66,safety,avoid,avoid,66,Unfortunately I am still facing this problem! . Is there a way to avoid it?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/952
https://github.com/scverse/scanpy/issues/953:41,testability,trace,traceback,41,"+1, I still have the same issue (the 2nd traceback)- did you find a solution?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:32,availability,down,downgrade,32,"I've found a workaround, when I downgrade to `anndata=0.6.22.post1` (still with `scanpy==1.4.5.post2`), it generates an output with `paga_path` but also this warning:. ```. FutureWarning: In anndata v0.7+, arrays contained within an AnnData object will maintain their dimensionality. For example, prior to v0.7 `adata[0, 0].X` returned a scalar and `adata[0, :]` returned a 1d array, post v0.7 they will return two dimensional arrays. If you would like to get a one dimensional array from your AnnData object, consider using the `adata.obs_vector`, `adata.var_vector` methods or accessing the array directly. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:213,deployability,contain,contained,213,"I've found a workaround, when I downgrade to `anndata=0.6.22.post1` (still with `scanpy==1.4.5.post2`), it generates an output with `paga_path` but also this warning:. ```. FutureWarning: In anndata v0.7+, arrays contained within an AnnData object will maintain their dimensionality. For example, prior to v0.7 `adata[0, 0].X` returned a scalar and `adata[0, :]` returned a 1d array, post v0.7 they will return two dimensional arrays. If you would like to get a one dimensional array from your AnnData object, consider using the `adata.obs_vector`, `adata.var_vector` methods or accessing the array directly. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:253,modifiability,maintain,maintain,253,"I've found a workaround, when I downgrade to `anndata=0.6.22.post1` (still with `scanpy==1.4.5.post2`), it generates an output with `paga_path` but also this warning:. ```. FutureWarning: In anndata v0.7+, arrays contained within an AnnData object will maintain their dimensionality. For example, prior to v0.7 `adata[0, 0].X` returned a scalar and `adata[0, :]` returned a 1d array, post v0.7 they will return two dimensional arrays. If you would like to get a one dimensional array from your AnnData object, consider using the `adata.obs_vector`, `adata.var_vector` methods or accessing the array directly. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:338,modifiability,scal,scalar,338,"I've found a workaround, when I downgrade to `anndata=0.6.22.post1` (still with `scanpy==1.4.5.post2`), it generates an output with `paga_path` but also this warning:. ```. FutureWarning: In anndata v0.7+, arrays contained within an AnnData object will maintain their dimensionality. For example, prior to v0.7 `adata[0, 0].X` returned a scalar and `adata[0, :]` returned a 1d array, post v0.7 they will return two dimensional arrays. If you would like to get a one dimensional array from your AnnData object, consider using the `adata.obs_vector`, `adata.var_vector` methods or accessing the array directly. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:253,safety,maintain,maintain,253,"I've found a workaround, when I downgrade to `anndata=0.6.22.post1` (still with `scanpy==1.4.5.post2`), it generates an output with `paga_path` but also this warning:. ```. FutureWarning: In anndata v0.7+, arrays contained within an AnnData object will maintain their dimensionality. For example, prior to v0.7 `adata[0, 0].X` returned a scalar and `adata[0, :]` returned a 1d array, post v0.7 they will return two dimensional arrays. If you would like to get a one dimensional array from your AnnData object, consider using the `adata.obs_vector`, `adata.var_vector` methods or accessing the array directly. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:579,security,access,accessing,579,"I've found a workaround, when I downgrade to `anndata=0.6.22.post1` (still with `scanpy==1.4.5.post2`), it generates an output with `paga_path` but also this warning:. ```. FutureWarning: In anndata v0.7+, arrays contained within an AnnData object will maintain their dimensionality. For example, prior to v0.7 `adata[0, 0].X` returned a scalar and `adata[0, :]` returned a 1d array, post v0.7 they will return two dimensional arrays. If you would like to get a one dimensional array from your AnnData object, consider using the `adata.obs_vector`, `adata.var_vector` methods or accessing the array directly. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:28,deployability,Version,Version,28,+1 issue found with scanpy <Version('1.4.5.post3')>,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:28,integrability,Version,Version,28,+1 issue found with scanpy <Version('1.4.5.post3')>,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:28,modifiability,Version,Version,28,+1 issue found with scanpy <Version('1.4.5.post3')>,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8,safety,test,tested,8,"Hi, . I tested your fix and it works! . ```. scanpy==1.4.5.2.dev6+gfa408dc7 anndata==0.7.1 . umap==0.3.10 numpy==1.17.4 scipy==1.3.1 . pandas==0.25.2 scikit-learn==0.21.3 . statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1. ```. BTW:. `matplotlib==3.1.3`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8,testability,test,tested,8,"Hi, . I tested your fix and it works! . ```. scanpy==1.4.5.2.dev6+gfa408dc7 anndata==0.7.1 . umap==0.3.10 numpy==1.17.4 scipy==1.3.1 . pandas==0.25.2 scikit-learn==0.21.3 . statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1. ```. BTW:. `matplotlib==3.1.3`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:157,usability,learn,learn,157,"Hi, . I tested your fix and it works! . ```. scanpy==1.4.5.2.dev6+gfa408dc7 anndata==0.7.1 . umap==0.3.10 numpy==1.17.4 scipy==1.3.1 . pandas==0.25.2 scikit-learn==0.21.3 . statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1. ```. BTW:. `matplotlib==3.1.3`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:44,deployability,fail,fails,44,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:206,deployability,fail,fails,206,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:239,deployability,fail,failed-diff,239,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:0,energy efficiency,Cool,Cool,0,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:44,reliability,fail,fails,44,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:169,reliability,doe,does,169,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:206,reliability,fail,fails,206,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:239,reliability,fail,failed-diff,239,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:34,safety,test,test,34,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:106,safety,test,tests,106,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:328,safety,test,tests,328,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:34,testability,test,test,34,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:106,testability,test,tests,106,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:328,testability,test,tests,328,"Cool! Can you also try to run the test that fails in the PR please? Should be `PYTHONPATH=. pytest scanpy/tests/test_plotting.py::test_paga_path`. I have no idea why it does that, as it works for me. If it fails for you, please attach the failed-diff image and the corresponding plot image in a comment here (they’re in `scanpy/tests/figures`)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:14,safety,test,test,14,"Ok, I ran the test and was successful.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:14,testability,test,test,14,"Ok, I ran the test and was successful.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:149,availability,servic,service,149,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:54,deployability,fail,fails,54,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:149,deployability,servic,service,149,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:211,deployability,fail,failed,211,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:149,integrability,servic,service,149,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:163,integrability,sub,subscription,163,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:149,modifiability,servic,service,149,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:54,reliability,fail,fails,54,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:211,reliability,fail,failed,211,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:49,safety,test,test,49,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:118,safety,test,test,118,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:224,safety,test,tests,224,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:49,testability,test,test,49,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:118,testability,test,test,118,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:224,testability,test,tests,224,"Damn … it’s going to be hard to find out why the test fails on Travis then, and I don’t feel comfortable not adding a test. Do we have an Amazon web service (AWS) subscription at ICB that we could use to upload failed image tests?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:16,deployability,resourc,resources,16,"OK, TODO: check resources with https://calculator.s3.amazonaws.com/index.html and report back to him",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:16,energy efficiency,resourc,resources,16,"OK, TODO: check resources with https://calculator.s3.amazonaws.com/index.html and report back to him",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:16,performance,resourc,resources,16,"OK, TODO: check resources with https://calculator.s3.amazonaws.com/index.html and report back to him",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:16,safety,resourc,resources,16,"OK, TODO: check resources with https://calculator.s3.amazonaws.com/index.html and report back to him",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:16,testability,resourc,resources,16,"OK, TODO: check resources with https://calculator.s3.amazonaws.com/index.html and report back to him",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:67,deployability,releas,release,67,Getting the same bug. What's the status on merging this fix into a release? Thanks!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:33,usability,statu,status,33,Getting the same bug. What's the status on merging this fix into a release? Thanks!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:61,deployability,log,login,61,Can someone at ICB make the S3 bucket happen and give me the login creds? Then I can merge this.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:61,safety,log,login,61,Can someone at ICB make the S3 bucket happen and give me the login creds? Then I can merge this.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:61,security,log,login,61,Can someone at ICB make the S3 bucket happen and give me the login creds? Then I can merge this.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:61,testability,log,login,61,Can someone at ICB make the S3 bucket happen and give me the login creds? Then I can merge this.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8604,availability,watchdog,watchdog,8604,. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4.0 py_0 conda-forge. zlib 1.2.11 h7795811_1010 conda-forge. zstd 1.4.5 h0384e3a_2 conda-forge. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:291,deployability,Version,Version,291,"I am also getting a TypeError when I run the following code:. `sc.pl.paga_path(adata, nodes = [0, 5, 1], keys = ['IFNG', 'GZMB'], show = True)`. > TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:299,deployability,Build,Build,299,"I am also getting a TypeError when I run the following code:. `sc.pl.paga_path(adata, nodes = [0, 5, 1], keys = ['IFNG', 'GZMB'], show = True)`. > TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1572,deployability,patch,patch,1572, py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 con,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:3090,deployability,api,api-wrap,3090,hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 conda-forge. jinja2 2.11.2 pyh9f0ad1d_0 conda-forge. joblib 0.17.0 py_0 conda-forge. jpeg 9d h0b31af3_0 conda-forge. jsonschema 3.2.0 py38h32f6830_1 conda-forge. jupyter_client 6.1.7 py_0 conda-forge. jupyter_core 4.6.3 py38h32f6830_2 conda-forge. jupyterlab_pygments 0.1.2 pyh9f0ad1d_0 conda-forge. keyring 21.4.0 py38h32f6830_2 conda-forge. kiwisolver 1.3.0 py38h02bb52f_0 conda-forge. krb5 1.17.1 h75d18d8_3 conda-forge. lazy-object-proxy 1.4.3 py38h64e0658_2 conda-forge. lcms2 2.11 h174193d_0 conda-forge. legacy-api-wrap 1.2 py_0 conda-forge. libblas 3.9.0 2_openblas conda-forge. libcblas 3.9.0 2_openblas conda-forge. libclang 10.0.1 default_hf57f61e_1 conda-forge. libcurl 7.71.1 h9bf37e3_8 conda-forge. libcxx 11.0.0 h439d374_0 conda-forge. libedit 3.1.20191231 hed1e85f_2 conda-forge. libev 4.33 haf1e3a3_1 conda-forge. libffi 3.2.1 1 bioconda. libgfortran 4.0.0 h50e675f_13 conda-forge. libgfortran4 7.5.0 h50e675f_13 conda-forge. libglib 2.66.2 hdb5fb44_0 conda-forge. libiconv 1.16 haf1e3a3_0 conda-forge. liblapack 3.9.0 2_openblas conda-forge. libllvm10 10.0.1 h009f743_3 conda-forge. libnghttp2 1.41.0 h7580e61_2 conda-forge. libopenblas 0.3.12 openmp_h63d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-base 1.1.0 h0b31af3_3 conda-forge. libxml2 2.9.10 h7fdee97_2 conda-forge. llvm-openmp,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:227,energy efficiency,current,current,227,"I am also getting a TypeError when I run the following code:. `sc.pl.paga_path(adata, nodes = [0, 5, 1], keys = ['IFNG', 'GZMB'], show = True)`. > TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1312,energy efficiency,cloud,cloudpickle,1312,aster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forg,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:291,integrability,Version,Version,291,"I am also getting a TypeError when I run the following code:. `sc.pl.paga_path(adata, nodes = [0, 5, 1], keys = ['IFNG', 'GZMB'], show = True)`. > TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:3090,integrability,api,api-wrap,3090,hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 conda-forge. jinja2 2.11.2 pyh9f0ad1d_0 conda-forge. joblib 0.17.0 py_0 conda-forge. jpeg 9d h0b31af3_0 conda-forge. jsonschema 3.2.0 py38h32f6830_1 conda-forge. jupyter_client 6.1.7 py_0 conda-forge. jupyter_core 4.6.3 py38h32f6830_2 conda-forge. jupyterlab_pygments 0.1.2 pyh9f0ad1d_0 conda-forge. keyring 21.4.0 py38h32f6830_2 conda-forge. kiwisolver 1.3.0 py38h02bb52f_0 conda-forge. krb5 1.17.1 h75d18d8_3 conda-forge. lazy-object-proxy 1.4.3 py38h64e0658_2 conda-forge. lcms2 2.11 h174193d_0 conda-forge. legacy-api-wrap 1.2 py_0 conda-forge. libblas 3.9.0 2_openblas conda-forge. libcblas 3.9.0 2_openblas conda-forge. libclang 10.0.1 default_hf57f61e_1 conda-forge. libcurl 7.71.1 h9bf37e3_8 conda-forge. libcxx 11.0.0 h439d374_0 conda-forge. libedit 3.1.20191231 hed1e85f_2 conda-forge. libev 4.33 haf1e3a3_1 conda-forge. libffi 3.2.1 1 bioconda. libgfortran 4.0.0 h50e675f_13 conda-forge. libgfortran4 7.5.0 h50e675f_13 conda-forge. libglib 2.66.2 hdb5fb44_0 conda-forge. libiconv 1.16 haf1e3a3_0 conda-forge. liblapack 3.9.0 2_openblas conda-forge. libllvm10 10.0.1 h009f743_3 conda-forge. libnghttp2 1.41.0 h7580e61_2 conda-forge. libopenblas 0.3.12 openmp_h63d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-base 1.1.0 h0b31af3_3 conda-forge. libxml2 2.9.10 h7fdee97_2 conda-forge. llvm-openmp,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8764,integrability,wrap,wrapt,8764,. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4.0 py_0 conda-forge. zlib 1.2.11 h7795811_1010 conda-forge. zstd 1.4.5 h0384e3a_2 conda-forge. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:3008,interoperability,prox,proxy,3008,.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 conda-forge. jinja2 2.11.2 pyh9f0ad1d_0 conda-forge. joblib 0.17.0 py_0 conda-forge. jpeg 9d h0b31af3_0 conda-forge. jsonschema 3.2.0 py38h32f6830_1 conda-forge. jupyter_client 6.1.7 py_0 conda-forge. jupyter_core 4.6.3 py38h32f6830_2 conda-forge. jupyterlab_pygments 0.1.2 pyh9f0ad1d_0 conda-forge. keyring 21.4.0 py38h32f6830_2 conda-forge. kiwisolver 1.3.0 py38h02bb52f_0 conda-forge. krb5 1.17.1 h75d18d8_3 conda-forge. lazy-object-proxy 1.4.3 py38h64e0658_2 conda-forge. lcms2 2.11 h174193d_0 conda-forge. legacy-api-wrap 1.2 py_0 conda-forge. libblas 3.9.0 2_openblas conda-forge. libcblas 3.9.0 2_openblas conda-forge. libclang 10.0.1 default_hf57f61e_1 conda-forge. libcurl 7.71.1 h9bf37e3_8 conda-forge. libcxx 11.0.0 h439d374_0 conda-forge. libedit 3.1.20191231 hed1e85f_2 conda-forge. libev 4.33 haf1e3a3_1 conda-forge. libffi 3.2.1 1 bioconda. libgfortran 4.0.0 h50e675f_13 conda-forge. libgfortran4 7.5.0 h50e675f_13 conda-forge. libglib 2.66.2 hdb5fb44_0 conda-forge. libiconv 1.16 haf1e3a3_0 conda-forge. liblapack 3.9.0 2_openblas conda-forge. libllvm10 10.0.1 h009f743_3 conda-forge. libnghttp2 1.41.0 h7580e61_2 conda-forge. libopenblas 0.3.12 openmp_h63d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-ba,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:3090,interoperability,api,api-wrap,3090,hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 conda-forge. jinja2 2.11.2 pyh9f0ad1d_0 conda-forge. joblib 0.17.0 py_0 conda-forge. jpeg 9d h0b31af3_0 conda-forge. jsonschema 3.2.0 py38h32f6830_1 conda-forge. jupyter_client 6.1.7 py_0 conda-forge. jupyter_core 4.6.3 py38h32f6830_2 conda-forge. jupyterlab_pygments 0.1.2 pyh9f0ad1d_0 conda-forge. keyring 21.4.0 py38h32f6830_2 conda-forge. kiwisolver 1.3.0 py38h02bb52f_0 conda-forge. krb5 1.17.1 h75d18d8_3 conda-forge. lazy-object-proxy 1.4.3 py38h64e0658_2 conda-forge. lcms2 2.11 h174193d_0 conda-forge. legacy-api-wrap 1.2 py_0 conda-forge. libblas 3.9.0 2_openblas conda-forge. libcblas 3.9.0 2_openblas conda-forge. libclang 10.0.1 default_hf57f61e_1 conda-forge. libcurl 7.71.1 h9bf37e3_8 conda-forge. libcxx 11.0.0 h439d374_0 conda-forge. libedit 3.1.20191231 hed1e85f_2 conda-forge. libev 4.33 haf1e3a3_1 conda-forge. libffi 3.2.1 1 bioconda. libgfortran 4.0.0 h50e675f_13 conda-forge. libgfortran4 7.5.0 h50e675f_13 conda-forge. libglib 2.66.2 hdb5fb44_0 conda-forge. libiconv 1.16 haf1e3a3_0 conda-forge. liblapack 3.9.0 2_openblas conda-forge. libllvm10 10.0.1 h009f743_3 conda-forge. libnghttp2 1.41.0 h7580e61_2 conda-forge. libopenblas 0.3.12 openmp_h63d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-base 1.1.0 h0b31af3_3 conda-forge. libxml2 2.9.10 h7fdee97_2 conda-forge. llvm-openmp,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:5618,interoperability,plug,pluggy,5618,onda-forge. nbformat 5.0.8 py_0 conda-forge. ncurses 6.2 hb1e8313_2 conda-forge. nest-asyncio 1.4.1 py_0 conda-forge. networkx 2.5 py_0 conda-forge. nspr 4.29 hb1e8313_1 conda-forge. nss 3.47 hcec2283_0 conda-forge. numba 0.51.2 py38h6be0db6_0 conda-forge. numexpr 2.7.1 py38h6be0db6_3 conda-forge. numpy 1.19.2 py38ha98150c_1 conda-forge. numpy_groupies 0.9.13 pyh9f0ad1d_1 conda-forge. numpydoc 1.1.0 py_1 conda-forge. olefile 0.46 pyh9f0ad1d_1 conda-forge. openssl 1.1.1h haf1e3a3_0 conda-forge. packaging 20.4 pyh9f0ad1d_0 conda-forge. pandas 1.1.3 py38h48ddb8e_2 conda-forge. pandoc 2.11.0.4 h22f3db7_0 conda-forge. pandocfilters 1.4.2 py_1 conda-forge. parso 0.7.0 pyh9f0ad1d_0 conda-forge. pathtools 0.1.2 py_1 conda-forge. patsy 0.5.1 py_0 conda-forge. pcre 8.44 hb1e8313_0 conda-forge. pexpect 4.8.0 py38h32f6830_1 conda-forge. pickleshare 0.7.5 py38h32f6830_1002 conda-forge. pillow 8.0.1 py38hef457fe_0 conda-forge. pip 20.2.4 py_0 conda-forge. pixman 0.38.0 h01d97ff_1003 conda-forge. pluggy 0.13.1 py38h5347e94_3 conda-forge. prompt-toolkit 3.0.8 py_0 conda-forge. psutil 5.7.3 py38h94c058a_0 conda-forge. ptyprocess 0.6.0 py_1001 conda-forge. pycairo 1.20.0 py38h26abc9d_1 conda-forge. pycodestyle 2.6.0 pyh9f0ad1d_0 conda-forge. pycparser 2.20 pyh9f0ad1d_2 conda-forge. pydocstyle 5.1.1 py_0 conda-forge. pyflakes 2.2.0 pyh9f0ad1d_0 conda-forge. pygments 2.7.2 py_0 conda-forge. pylint 2.6.0 py38h32f6830_1 conda-forge. pyopenssl 19.1.0 py38_0 conda-forge. pyparsing 2.4.7 pyh9f0ad1d_0 conda-forge. pyqt 5.12.3 py38hca2ab18_4 conda-forge. pyqt5-sip 4.19.18 pypi_0 pypi. pyqtchart 5.12 pypi_0 pypi. pyqtwebengine 5.12.1 pypi_0 pypi. pyrsistent 0.17.3 py38h4d0b108_1 conda-forge. pysocks 1.7.1 py38h5347e94_2 conda-forge. pytables 3.6.1 py38h4e4ac5c_3 conda-forge. python 3.8.6 hcfdab8c_0_cpython conda-forge. python-dateutil 2.8.1 py_0 conda-forge. python-igraph 0.8.3 py38hcde0000_2 conda-forge. python-jsonrpc-server 0.4.0 pyh9f0ad1d_0 conda-forge. python-language-server 0.35.1 py_0 ,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:291,modifiability,Version,Version,291,"I am also getting a TypeError when I run the following code:. `sc.pl.paga_path(adata, nodes = [0, 5, 1], keys = ['IFNG', 'GZMB'], show = True)`. > TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1492,modifiability,deco,decorator,1492,01 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 ,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:5120,modifiability,pac,packaging,5120, llvmlite 0.34.0 py38h3707e27_2 conda-forge. loompy 3.0.6 py_0 conda-forge. lz4-c 1.9.2 hb1e8313_3 conda-forge. markupsafe 1.1.1 py38h94c058a_2 conda-forge. matplotlib-base 3.3.2 py38had0acaf_1 conda-forge. mccabe 0.6.1 py_1 conda-forge. mistune 0.8.4 py38h4d0b108_1002 conda-forge. mock 4.0.2 py38h32f6830_1 conda-forge. mysql-common 8.0.21 2 conda-forge. mysql-libs 8.0.21 hfb8f7af_2 conda-forge. natsort 7.0.1 py_0 conda-forge. nbclient 0.5.1 py_0 conda-forge. nbconvert 6.0.7 py38h32f6830_2 conda-forge. nbformat 5.0.8 py_0 conda-forge. ncurses 6.2 hb1e8313_2 conda-forge. nest-asyncio 1.4.1 py_0 conda-forge. networkx 2.5 py_0 conda-forge. nspr 4.29 hb1e8313_1 conda-forge. nss 3.47 hcec2283_0 conda-forge. numba 0.51.2 py38h6be0db6_0 conda-forge. numexpr 2.7.1 py38h6be0db6_3 conda-forge. numpy 1.19.2 py38ha98150c_1 conda-forge. numpy_groupies 0.9.13 pyh9f0ad1d_1 conda-forge. numpydoc 1.1.0 py_1 conda-forge. olefile 0.46 pyh9f0ad1d_1 conda-forge. openssl 1.1.1h haf1e3a3_0 conda-forge. packaging 20.4 pyh9f0ad1d_0 conda-forge. pandas 1.1.3 py38h48ddb8e_2 conda-forge. pandoc 2.11.0.4 h22f3db7_0 conda-forge. pandocfilters 1.4.2 py_1 conda-forge. parso 0.7.0 pyh9f0ad1d_0 conda-forge. pathtools 0.1.2 py_1 conda-forge. patsy 0.5.1 py_0 conda-forge. pcre 8.44 hb1e8313_0 conda-forge. pexpect 4.8.0 py38h32f6830_1 conda-forge. pickleshare 0.7.5 py38h32f6830_1002 conda-forge. pillow 8.0.1 py38hef457fe_0 conda-forge. pip 20.2.4 py_0 conda-forge. pixman 0.38.0 h01d97ff_1003 conda-forge. pluggy 0.13.1 py38h5347e94_3 conda-forge. prompt-toolkit 3.0.8 py_0 conda-forge. psutil 5.7.3 py38h94c058a_0 conda-forge. ptyprocess 0.6.0 py_1001 conda-forge. pycairo 1.20.0 py38h26abc9d_1 conda-forge. pycodestyle 2.6.0 pyh9f0ad1d_0 conda-forge. pycparser 2.20 pyh9f0ad1d_2 conda-forge. pydocstyle 5.1.1 py_0 conda-forge. pyflakes 2.2.0 pyh9f0ad1d_0 conda-forge. pygments 2.7.2 py_0 conda-forge. pylint 2.6.0 py38h32f6830_1 conda-forge. pyopenssl 19.1.0 py38_0 conda-forge. pyparsing 2.4.7 pyh9f0ad1d_0 con,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:4739,performance,network,networkx,4739,3d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-base 1.1.0 h0b31af3_3 conda-forge. libxml2 2.9.10 h7fdee97_2 conda-forge. llvm-openmp 11.0.0 h73239a0_1 conda-forge. llvmlite 0.34.0 py38h3707e27_2 conda-forge. loompy 3.0.6 py_0 conda-forge. lz4-c 1.9.2 hb1e8313_3 conda-forge. markupsafe 1.1.1 py38h94c058a_2 conda-forge. matplotlib-base 3.3.2 py38had0acaf_1 conda-forge. mccabe 0.6.1 py_1 conda-forge. mistune 0.8.4 py38h4d0b108_1002 conda-forge. mock 4.0.2 py38h32f6830_1 conda-forge. mysql-common 8.0.21 2 conda-forge. mysql-libs 8.0.21 hfb8f7af_2 conda-forge. natsort 7.0.1 py_0 conda-forge. nbclient 0.5.1 py_0 conda-forge. nbconvert 6.0.7 py38h32f6830_2 conda-forge. nbformat 5.0.8 py_0 conda-forge. ncurses 6.2 hb1e8313_2 conda-forge. nest-asyncio 1.4.1 py_0 conda-forge. networkx 2.5 py_0 conda-forge. nspr 4.29 hb1e8313_1 conda-forge. nss 3.47 hcec2283_0 conda-forge. numba 0.51.2 py38h6be0db6_0 conda-forge. numexpr 2.7.1 py38h6be0db6_3 conda-forge. numpy 1.19.2 py38ha98150c_1 conda-forge. numpy_groupies 0.9.13 pyh9f0ad1d_1 conda-forge. numpydoc 1.1.0 py_1 conda-forge. olefile 0.46 pyh9f0ad1d_1 conda-forge. openssl 1.1.1h haf1e3a3_0 conda-forge. packaging 20.4 pyh9f0ad1d_0 conda-forge. pandas 1.1.3 py38h48ddb8e_2 conda-forge. pandoc 2.11.0.4 h22f3db7_0 conda-forge. pandocfilters 1.4.2 py_1 conda-forge. parso 0.7.0 pyh9f0ad1d_0 conda-forge. pathtools 0.1.2 py_1 conda-forge. patsy 0.5.1 py_0 conda-forge. pcre 8.44 hb1e8313_0 conda-forge. pexpect 4.8.0 py38h32f6830_1 conda-forge. pickleshare 0.7.5 py38h32f6830_1002 conda-forge. pillow 8.0.1 py38hef457fe_0 conda-forge. pip 20.2.4 py_0 conda-forge. pixman 0.38.0 h01d97ff_1003 conda-forge. pluggy 0.13.1 py38h5347e94_3 conda-forge. prompt-toolkit 3.0.8 py_0 conda-forge. psutil 5.7.3 py38h94c058a_0 conda-forge. pty,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1572,safety,patch,patch,1572, py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 con,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8178,safety,test,testpath,8178,. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4.0 py_0 conda-forge. zlib 1.2.11 h7795811_1010 conda-forge. zstd 1.4.5 h0384e3a_2 conda-forge. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8604,safety,watchdog,watchdog,8604,. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4.0 py_0 conda-forge. zlib 1.2.11 h7795811_1010 conda-forge. zstd 1.4.5 h0384e3a_2 conda-forge. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1075,security,certif,certificates,1075,"ata, nodes = [0, 5, 1], keys = ['IFNG', 'GZMB'], show = True)`. > TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1143,security,certif,certifi,1143,"TypeError: Image data of dtype object cannot be converted to float. What is the current solution to this issue? Many thanks,. Lucy. ```. # Name Version Build Channel. alabaster 0.7.12 py_0 conda-forge. anndata 0.7.4 py38h32f6830_0 conda-forge. applaunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1389,security,cryptograph,cryptography,1389,aunchservices 0.2.1 py_0 conda-forge. appnope 0.1.0 py38h32f6830_1002 conda-forge. argh 0.26.2 py38_1001 conda-forge. astroid 2.4.2 py38h32f6830_1 conda-forge. async_generator 1.10 py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykerne,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:1572,security,patch,patch,1572, py_0 conda-forge. atomicwrites 1.4.0 pyh9f0ad1d_0 conda-forge. attrs 20.2.0 pyh9f0ad1d_0 conda-forge. autopep8 1.5.4 pyh9f0ad1d_0 conda-forge. babel 2.8.0 py_0 conda-forge. backcall 0.2.0 pyh9f0ad1d_0 conda-forge. backports 1.0 py_2 conda-forge. backports.functools_lru_cache 1.6.1 py_0 conda-forge. bleach 3.2.1 pyh9f0ad1d_0 conda-forge. blosc 1.20.1 hb1e8313_0 conda-forge. brotlipy 0.7.0 py38h94c058a_1001 conda-forge. bzip2 1.0.8 haf1e3a3_3 conda-forge. c-ares 1.16.1 haf1e3a3_3 conda-forge. ca-certificates 2020.10.14 0 . cairo 1.16.0 h360c52f_1006 conda-forge. certifi 2020.6.20 py38h5347e94_2 conda-forge. cffi 1.14.3 py38h9edaa1b_1 conda-forge. chardet 3.0.4 py38h5347e94_1008 conda-forge. click 7.1.2 pyh9f0ad1d_0 conda-forge. cloudpickle 1.6.0 py_0 conda-forge. colorama 0.4.4 pyh9f0ad1d_0 conda-forge. cryptography 3.2 py38hf6767f5_0 conda-forge. cycler 0.10.0 py_2 conda-forge. dbus 1.13.18 h18a8e69_0 . decorator 4.4.2 py_0 conda-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 con,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:2515,security,iso,isort,2515,-forge. defusedxml 0.6.0 py_0 conda-forge. diff-match-patch 20200713 pyh9f0ad1d_0 conda-forge. docutils 0.16 py38h5347e94_2 conda-forge. entrypoints 0.3 py38h32f6830_1002 conda-forge. expat 2.2.10 hb1e8313_2 . fa2 0.3.5 py38h4d0b108_0 conda-forge. flake8 3.8.4 py_0 conda-forge. fontconfig 2.13.1 h79c0d67_1002 conda-forge. freetype 2.10.4 ha233b18_0 conda-forge. future 0.18.2 py38h32f6830_2 conda-forge. get_version 2.1 py_1 conda-forge. gettext 0.19.8.1 haf92f58_1004 conda-forge. glib 2.66.2 hb1e8313_0 conda-forge. gmp 6.2.0 hb1e8313_3 conda-forge. h5py 2.10.0 nompi_py38hf6831e1_105 conda-forge. hdf5 1.10.6 nompi_hc457bb4_1110 conda-forge. icu 67.1 hb1e8313_0 conda-forge. idna 2.10 pyh9f0ad1d_0 conda-forge. imagesize 1.2.0 py_0 conda-forge. importlib-metadata 2.0.0 py38h32f6830_0 conda-forge. importlib_metadata 2.0.0 1 conda-forge. intervaltree 3.1.0 py_0 . ipykernel 5.3.4 py38h1cdfbd6_1 conda-forge. ipython 7.18.1 py38h1cdfbd6_1 conda-forge. ipython_genutils 0.2.0 py_1 conda-forge. isort 5.6.4 py_0 conda-forge. jedi 0.17.1 py38h32f6830_0 conda-forge. jinja2 2.11.2 pyh9f0ad1d_0 conda-forge. joblib 0.17.0 py_0 conda-forge. jpeg 9d h0b31af3_0 conda-forge. jsonschema 3.2.0 py38h32f6830_1 conda-forge. jupyter_client 6.1.7 py_0 conda-forge. jupyter_core 4.6.3 py38h32f6830_2 conda-forge. jupyterlab_pygments 0.1.2 pyh9f0ad1d_0 conda-forge. keyring 21.4.0 py38h32f6830_2 conda-forge. kiwisolver 1.3.0 py38h02bb52f_0 conda-forge. krb5 1.17.1 h75d18d8_3 conda-forge. lazy-object-proxy 1.4.3 py38h64e0658_2 conda-forge. lcms2 2.11 h174193d_0 conda-forge. legacy-api-wrap 1.2 py_0 conda-forge. libblas 3.9.0 2_openblas conda-forge. libcblas 3.9.0 2_openblas conda-forge. libclang 10.0.1 default_hf57f61e_1 conda-forge. libcurl 7.71.1 h9bf37e3_8 conda-forge. libcxx 11.0.0 h439d374_0 conda-forge. libedit 3.1.20191231 hed1e85f_2 conda-forge. libev 4.33 haf1e3a3_1 conda-forge. libffi 3.2.1 1 bioconda. libgfortran 4.0.0 h50e675f_13 conda-forge. libgfortran4 7.5.0 h50e675f_13 conda-forge. lib,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:4739,security,network,networkx,4739,3d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-base 1.1.0 h0b31af3_3 conda-forge. libxml2 2.9.10 h7fdee97_2 conda-forge. llvm-openmp 11.0.0 h73239a0_1 conda-forge. llvmlite 0.34.0 py38h3707e27_2 conda-forge. loompy 3.0.6 py_0 conda-forge. lz4-c 1.9.2 hb1e8313_3 conda-forge. markupsafe 1.1.1 py38h94c058a_2 conda-forge. matplotlib-base 3.3.2 py38had0acaf_1 conda-forge. mccabe 0.6.1 py_1 conda-forge. mistune 0.8.4 py38h4d0b108_1002 conda-forge. mock 4.0.2 py38h32f6830_1 conda-forge. mysql-common 8.0.21 2 conda-forge. mysql-libs 8.0.21 hfb8f7af_2 conda-forge. natsort 7.0.1 py_0 conda-forge. nbclient 0.5.1 py_0 conda-forge. nbconvert 6.0.7 py38h32f6830_2 conda-forge. nbformat 5.0.8 py_0 conda-forge. ncurses 6.2 hb1e8313_2 conda-forge. nest-asyncio 1.4.1 py_0 conda-forge. networkx 2.5 py_0 conda-forge. nspr 4.29 hb1e8313_1 conda-forge. nss 3.47 hcec2283_0 conda-forge. numba 0.51.2 py38h6be0db6_0 conda-forge. numexpr 2.7.1 py38h6be0db6_3 conda-forge. numpy 1.19.2 py38ha98150c_1 conda-forge. numpy_groupies 0.9.13 pyh9f0ad1d_1 conda-forge. numpydoc 1.1.0 py_1 conda-forge. olefile 0.46 pyh9f0ad1d_1 conda-forge. openssl 1.1.1h haf1e3a3_0 conda-forge. packaging 20.4 pyh9f0ad1d_0 conda-forge. pandas 1.1.3 py38h48ddb8e_2 conda-forge. pandoc 2.11.0.4 h22f3db7_0 conda-forge. pandocfilters 1.4.2 py_1 conda-forge. parso 0.7.0 pyh9f0ad1d_0 conda-forge. pathtools 0.1.2 py_1 conda-forge. patsy 0.5.1 py_0 conda-forge. pcre 8.44 hb1e8313_0 conda-forge. pexpect 4.8.0 py38h32f6830_1 conda-forge. pickleshare 0.7.5 py38h32f6830_1002 conda-forge. pillow 8.0.1 py38hef457fe_0 conda-forge. pip 20.2.4 py_0 conda-forge. pixman 0.38.0 h01d97ff_1003 conda-forge. pluggy 0.13.1 py38h5347e94_3 conda-forge. prompt-toolkit 3.0.8 py_0 conda-forge. psutil 5.7.3 py38h94c058a_0 conda-forge. pty,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:4408,testability,mock,mock,4408,3.2.1 1 bioconda. libgfortran 4.0.0 h50e675f_13 conda-forge. libgfortran4 7.5.0 h50e675f_13 conda-forge. libglib 2.66.2 hdb5fb44_0 conda-forge. libiconv 1.16 haf1e3a3_0 conda-forge. liblapack 3.9.0 2_openblas conda-forge. libllvm10 10.0.1 h009f743_3 conda-forge. libnghttp2 1.41.0 h7580e61_2 conda-forge. libopenblas 0.3.12 openmp_h63d9170_1 conda-forge. libpng 1.6.37 hb0a8c7a_2 conda-forge. libpq 12.3 haa216e0_2 conda-forge. libsodium 1.0.18 haf1e3a3_1 conda-forge. libspatialindex 1.9.3 h4a8c4bd_3 conda-forge. libssh2 1.9.0 h39bdce6_5 conda-forge. libtiff 4.1.0 h2ae36a8_6 conda-forge. libwebp-base 1.1.0 h0b31af3_3 conda-forge. libxml2 2.9.10 h7fdee97_2 conda-forge. llvm-openmp 11.0.0 h73239a0_1 conda-forge. llvmlite 0.34.0 py38h3707e27_2 conda-forge. loompy 3.0.6 py_0 conda-forge. lz4-c 1.9.2 hb1e8313_3 conda-forge. markupsafe 1.1.1 py38h94c058a_2 conda-forge. matplotlib-base 3.3.2 py38had0acaf_1 conda-forge. mccabe 0.6.1 py_1 conda-forge. mistune 0.8.4 py38h4d0b108_1002 conda-forge. mock 4.0.2 py38h32f6830_1 conda-forge. mysql-common 8.0.21 2 conda-forge. mysql-libs 8.0.21 hfb8f7af_2 conda-forge. natsort 7.0.1 py_0 conda-forge. nbclient 0.5.1 py_0 conda-forge. nbconvert 6.0.7 py38h32f6830_2 conda-forge. nbformat 5.0.8 py_0 conda-forge. ncurses 6.2 hb1e8313_2 conda-forge. nest-asyncio 1.4.1 py_0 conda-forge. networkx 2.5 py_0 conda-forge. nspr 4.29 hb1e8313_1 conda-forge. nss 3.47 hcec2283_0 conda-forge. numba 0.51.2 py38h6be0db6_0 conda-forge. numexpr 2.7.1 py38h6be0db6_3 conda-forge. numpy 1.19.2 py38ha98150c_1 conda-forge. numpy_groupies 0.9.13 pyh9f0ad1d_1 conda-forge. numpydoc 1.1.0 py_1 conda-forge. olefile 0.46 pyh9f0ad1d_1 conda-forge. openssl 1.1.1h haf1e3a3_0 conda-forge. packaging 20.4 pyh9f0ad1d_0 conda-forge. pandas 1.1.3 py38h48ddb8e_2 conda-forge. pandoc 2.11.0.4 h22f3db7_0 conda-forge. pandocfilters 1.4.2 py_1 conda-forge. parso 0.7.0 pyh9f0ad1d_0 conda-forge. pathtools 0.1.2 py_1 conda-forge. patsy 0.5.1 py_0 conda-forge. pcre 8.44 hb1e8313_0 conda-f,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:7933,testability,spy,spyder,7933,sole 4.7.7 pyh9f0ad1d_0 conda-forge. qtpy 1.9.0 py_0 conda-forge. readline 8.0 h0678c8f_2 conda-forge. requests 2.24.0 pyh9f0ad1d_0 conda-forge. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. ,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:7974,testability,spy,spyder-kernels,7974,.0 py_0 conda-forge. readline 8.0 h0678c8f_2 conda-forge. requests 2.24.0 pyh9f0ad1d_0 conda-forge. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8178,testability,test,testpath,8178,. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4.0 py_0 conda-forge. zlib 1.2.11 h7795811_1010 conda-forge. zstd 1.4.5 h0384e3a_2 conda-forge. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:5667,usability,tool,toolkit,5667,es 6.2 hb1e8313_2 conda-forge. nest-asyncio 1.4.1 py_0 conda-forge. networkx 2.5 py_0 conda-forge. nspr 4.29 hb1e8313_1 conda-forge. nss 3.47 hcec2283_0 conda-forge. numba 0.51.2 py38h6be0db6_0 conda-forge. numexpr 2.7.1 py38h6be0db6_3 conda-forge. numpy 1.19.2 py38ha98150c_1 conda-forge. numpy_groupies 0.9.13 pyh9f0ad1d_1 conda-forge. numpydoc 1.1.0 py_1 conda-forge. olefile 0.46 pyh9f0ad1d_1 conda-forge. openssl 1.1.1h haf1e3a3_0 conda-forge. packaging 20.4 pyh9f0ad1d_0 conda-forge. pandas 1.1.3 py38h48ddb8e_2 conda-forge. pandoc 2.11.0.4 h22f3db7_0 conda-forge. pandocfilters 1.4.2 py_1 conda-forge. parso 0.7.0 pyh9f0ad1d_0 conda-forge. pathtools 0.1.2 py_1 conda-forge. patsy 0.5.1 py_0 conda-forge. pcre 8.44 hb1e8313_0 conda-forge. pexpect 4.8.0 py38h32f6830_1 conda-forge. pickleshare 0.7.5 py38h32f6830_1002 conda-forge. pillow 8.0.1 py38hef457fe_0 conda-forge. pip 20.2.4 py_0 conda-forge. pixman 0.38.0 h01d97ff_1003 conda-forge. pluggy 0.13.1 py38h5347e94_3 conda-forge. prompt-toolkit 3.0.8 py_0 conda-forge. psutil 5.7.3 py38h94c058a_0 conda-forge. ptyprocess 0.6.0 py_1001 conda-forge. pycairo 1.20.0 py38h26abc9d_1 conda-forge. pycodestyle 2.6.0 pyh9f0ad1d_0 conda-forge. pycparser 2.20 pyh9f0ad1d_2 conda-forge. pydocstyle 5.1.1 py_0 conda-forge. pyflakes 2.2.0 pyh9f0ad1d_0 conda-forge. pygments 2.7.2 py_0 conda-forge. pylint 2.6.0 py38h32f6830_1 conda-forge. pyopenssl 19.1.0 py38_0 conda-forge. pyparsing 2.4.7 pyh9f0ad1d_0 conda-forge. pyqt 5.12.3 py38hca2ab18_4 conda-forge. pyqt5-sip 4.19.18 pypi_0 pypi. pyqtchart 5.12 pypi_0 pypi. pyqtwebengine 5.12.1 pypi_0 pypi. pyrsistent 0.17.3 py38h4d0b108_1 conda-forge. pysocks 1.7.1 py38h5347e94_2 conda-forge. pytables 3.6.1 py38h4e4ac5c_3 conda-forge. python 3.8.6 hcfdab8c_0_cpython conda-forge. python-dateutil 2.8.1 py_0 conda-forge. python-igraph 0.8.3 py38hcde0000_2 conda-forge. python-jsonrpc-server 0.4.0 pyh9f0ad1d_0 conda-forge. python-language-server 0.35.1 py_0 conda-forge. python.app 2 py38_10 . python_abi 3.8,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:7194,usability,learn,learn,7194,_0 pypi. pyqtchart 5.12 pypi_0 pypi. pyqtwebengine 5.12.1 pypi_0 pypi. pyrsistent 0.17.3 py38h4d0b108_1 conda-forge. pysocks 1.7.1 py38h5347e94_2 conda-forge. pytables 3.6.1 py38h4e4ac5c_3 conda-forge. python 3.8.6 hcfdab8c_0_cpython conda-forge. python-dateutil 2.8.1 py_0 conda-forge. python-igraph 0.8.3 py38hcde0000_2 conda-forge. python-jsonrpc-server 0.4.0 pyh9f0ad1d_0 conda-forge. python-language-server 0.35.1 py_0 conda-forge. python.app 2 py38_10 . python_abi 3.8 1_cp38 conda-forge. pytz 2020.1 pyh9f0ad1d_0 conda-forge. pyyaml 5.3.1 py38h94c058a_1 conda-forge. pyzmq 19.0.2 py38h2c785a9_2 conda-forge. qdarkstyle 2.8.1 pyh9f0ad1d_1 conda-forge. qt 5.12.9 h717870c_0 conda-forge. qtawesome 1.0.1 pyh9f0ad1d_0 conda-forge. qtconsole 4.7.7 pyh9f0ad1d_0 conda-forge. qtpy 1.9.0 py_0 conda-forge. readline 8.0 h0678c8f_2 conda-forge. requests 2.24.0 pyh9f0ad1d_0 conda-forge. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:8530,usability,learn,learn,8530,. rope 0.18.0 pyh9f0ad1d_0 conda-forge. rtree 0.9.4 py38h08f867b_1 conda-forge. scanpy 1.6.0 py_0 bioconda. scikit-learn 0.23.2 py38hc63f23e_1 conda-forge. scipy 1.5.2 py38hf17e0cf_2 conda-forge. seaborn 0.11.0 0 conda-forge. seaborn-base 0.11.0 py_0 conda-forge. setuptools 50.3.0 py38h0dc7051_1 . setuptools-scm 4.1.2 pyh9f0ad1d_0 conda-forge. setuptools_scm 4.1.2 0 conda-forge. sinfo 0.3.1 py_0 conda-forge. six 1.15.0 pyh9f0ad1d_0 conda-forge. snowballstemmer 2.0.0 py_0 conda-forge. sortedcontainers 2.2.2 pyh9f0ad1d_0 conda-forge. sphinx 3.2.1 py_0 conda-forge. sphinxcontrib-applehelp 1.0.2 py_0 conda-forge. sphinxcontrib-devhelp 1.0.2 py_0 conda-forge. sphinxcontrib-htmlhelp 1.0.3 py_0 conda-forge. sphinxcontrib-jsmath 1.0.1 py_0 conda-forge. sphinxcontrib-qthelp 1.0.3 py_0 conda-forge. sphinxcontrib-serializinghtml 1.1.4 py_0 conda-forge. spyder 4.1.5 py38h32f6830_0 conda-forge. spyder-kernels 1.9.4 py38h32f6830_0 conda-forge. sqlite 3.33.0 h960bd1c_1 conda-forge. statsmodels 0.12.0 py38h174b24a_1 conda-forge. stdlib-list 0.7.0 py38h32f6830_1 conda-forge. tbb 2020.3 h879752b_0 . testpath 0.4.4 py_0 conda-forge. texttable 1.6.3 pyh9f0ad1d_0 conda-forge. threadpoolctl 2.1.0 pyh5ca1d4c_0 conda-forge. tk 8.6.10 hb0a8c7a_1 conda-forge. toml 0.10.1 pyh9f0ad1d_0 conda-forge. tornado 6.0.4 py38h4d0b108_2 conda-forge. tqdm 4.51.0 pyh9f0ad1d_0 conda-forge. traitlets 5.0.5 py_0 conda-forge. ujson 4.0.1 py38h11c0d25_1 conda-forge. umap-learn 0.4.6 py38h32f6830_0 conda-forge. urllib3 1.25.11 py_0 conda-forge. watchdog 0.10.3 py38h4d0b108_2 conda-forge. wcwidth 0.2.5 pyh9f0ad1d_2 conda-forge. webencodings 0.5.1 py_1 conda-forge. wheel 0.35.1 pyh9f0ad1d_0 conda-forge. wrapt 1.11.2 py38h4d0b108_1 conda-forge. wurlitzer 2.0.1 py38_0 . xz 5.2.5 haf1e3a3_1 conda-forge. yaml 0.2.5 haf1e3a3_0 conda-forge. yapf 0.30.0 pyh9f0ad1d_0 conda-forge. zeromq 4.3.3 hb1e8313_2 conda-forge. zipp 3.4.0 py_0 conda-forge. zlib 1.2.11 h7795811_1010 conda-forge. zstd 1.4.5 h0384e3a_2 conda-forge. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:79,testability,understand,understand,79,@flying-sheep could you explain again what you need from ICB? Sorry not sure I understand. Thank you!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:108,availability,error,error,108,"I hve to clarify: I tried out the fix provided above from @flying-sheep and it does the job for me, but the error persists on the `master` branch.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:108,performance,error,error,108,"I hve to clarify: I tried out the fix provided above from @flying-sheep and it does the job for me, but the error persists on the `master` branch.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:79,reliability,doe,does,79,"I hve to clarify: I tried out the fix provided above from @flying-sheep and it does the job for me, but the error persists on the `master` branch.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:108,safety,error,error,108,"I hve to clarify: I tried out the fix provided above from @flying-sheep and it does the job for me, but the error persists on the `master` branch.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:108,usability,error,error,108,"I hve to clarify: I tried out the fix provided above from @flying-sheep and it does the job for me, but the error persists on the `master` branch.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:465,energy efficiency,current,current,465,"I just tried again with the reprex above and it works for me. ```python. import scanpy as sc. adata = sc.datasets.paul15(). sc.pp.pca(adata). sc.pp.neighbors(adata). sc.tl.dpt(adata). sc.tl.paga(adata, groups='paul15_clusters'). sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). ```. ![image](https://user-images.githubusercontent.com/25887487/107772027-f1133d00-6d3b-11eb-8866-f514acea297a.png). I'm on a separate branch but it's on par with current master. ```. scanpy==1.7.0rc2.dev25+g56303580.d20210212 anndata==0.7.4 umap==0.4.6 numpy==1.19.4 scipy==1.5.2 pandas==1.1.4 scikit-learn==0.24.1 statsmodels==0.12.1 python-igraph==0.8.3 leidenalg==0.8.2. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:323,usability,user,user-images,323,"I just tried again with the reprex above and it works for me. ```python. import scanpy as sc. adata = sc.datasets.paul15(). sc.pp.pca(adata). sc.pp.neighbors(adata). sc.tl.dpt(adata). sc.tl.paga(adata, groups='paul15_clusters'). sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). ```. ![image](https://user-images.githubusercontent.com/25887487/107772027-f1133d00-6d3b-11eb-8866-f514acea297a.png). I'm on a separate branch but it's on par with current master. ```. scanpy==1.7.0rc2.dev25+g56303580.d20210212 anndata==0.7.4 umap==0.4.6 numpy==1.19.4 scipy==1.5.2 pandas==1.1.4 scikit-learn==0.24.1 statsmodels==0.12.1 python-igraph==0.8.3 leidenalg==0.8.2. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:604,usability,learn,learn,604,"I just tried again with the reprex above and it works for me. ```python. import scanpy as sc. adata = sc.datasets.paul15(). sc.pp.pca(adata). sc.pp.neighbors(adata). sc.tl.dpt(adata). sc.tl.paga(adata, groups='paul15_clusters'). sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). ```. ![image](https://user-images.githubusercontent.com/25887487/107772027-f1133d00-6d3b-11eb-8866-f514acea297a.png). I'm on a separate branch but it's on par with current master. ```. scanpy==1.7.0rc2.dev25+g56303580.d20210212 anndata==0.7.4 umap==0.4.6 numpy==1.19.4 scipy==1.5.2 pandas==1.1.4 scikit-learn==0.24.1 statsmodels==0.12.1 python-igraph==0.8.3 leidenalg==0.8.2. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:67,availability,Error,Error,67,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:188,availability,Error,Error,188,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:289,deployability,modul,module,289,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:776,deployability,Version,Versions,776,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:194,integrability,messag,message,194,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:776,integrability,Version,Versions,776,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:194,interoperability,messag,message,194,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:662,interoperability,format,format,662,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:289,modifiability,modul,module,289,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:487,modifiability,pac,packages,487,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:776,modifiability,Version,Versions,776,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:67,performance,Error,Error,67,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:188,performance,Error,Error,188,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:67,safety,Error,Error,67,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:188,safety,Error,Error,188,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:263,safety,input,input-,263,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:289,safety,modul,module,289,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:219,testability,Trace,Traceback,219,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:67,usability,Error,Error,67,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:188,usability,Error,Error,188,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:263,usability,input,input-,263,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/953:894,usability,learn,learn,894,"I copied your code to a google colabs instance and ran into a Type Error similar to the one above:. https://colab.research.google.com/drive/1LYxOAuNqaJHGfRjNjyluUHk9BFsmkWa4?usp=sharing . Error message:. ```. TypeError Traceback (most recent call last). <ipython-input-3-9abce68d1753> in <module>(). 4 sc.tl.dpt(adata). 5 sc.tl.paga(adata, groups='paul15_clusters'). ----> 6 sc.pl.paga_path(adata, nodes=['1Ery'], keys=['Gata2', 'Btg2', 'Btg1']). 5 frames. /usr/local/lib/python3.6/dist-packages/matplotlib/image.py in set_data(self, A). 697 or self._A.ndim == 3 and self._A.shape[-1] in [3, 4]):. 698 raise TypeError(""Invalid shape {} for image data"". --> 699 .format(self._A.shape)). 700 . 701 if self._A.ndim == 3:. TypeError: Invalid shape (3, 43, 1) for image data. ```. Versions: . ```. scanpy==1.7.0 . anndata==0.7.5 . umap==0.5.0 . numpy==1.19.5 . scipy==1.4.1 . pandas==1.1.5 . scikit-learn==0.22.2.post1 . statsmodels==0.10.2 . python-igraph==0.8.3 . leidenalg==0.8.3. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/953
https://github.com/scverse/scanpy/issues/954:70,deployability,version,version,70,This was solved recently. Can you check that you are using the latest version from master?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/954
https://github.com/scverse/scanpy/issues/954:70,integrability,version,version,70,This was solved recently. Can you check that you are using the latest version from master?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/954
https://github.com/scverse/scanpy/issues/954:70,modifiability,version,version,70,This was solved recently. Can you check that you are using the latest version from master?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/954
https://github.com/scverse/scanpy/issues/954:28,deployability,version,version,28,"Yes, it works in the latest version, thank you!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/954
https://github.com/scverse/scanpy/issues/954:28,integrability,version,version,28,"Yes, it works in the latest version, thank you!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/954
https://github.com/scverse/scanpy/issues/954:28,modifiability,version,version,28,"Yes, it works in the latest version, thank you!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/954
https://github.com/scverse/scanpy/issues/955:200,deployability,API,API,200,"I need that a lot actually. One question, is it different than just `sc.pl.umap(adata, groups=adata.bulk_labels.cat.categories)`? Maybe a special keyword like groups='all' would be easy to use on the API side?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:200,integrability,API,API,200,"I need that a lot actually. One question, is it different than just `sc.pl.umap(adata, groups=adata.bulk_labels.cat.categories)`? Maybe a special keyword like groups='all' would be easy to use on the API side?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:200,interoperability,API,API,200,"I need that a lot actually. One question, is it different than just `sc.pl.umap(adata, groups=adata.bulk_labels.cat.categories)`? Maybe a special keyword like groups='all' would be easy to use on the API side?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:192,availability,error,error,192,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:229,interoperability,specif,specify,229,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:192,performance,error,error,192,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:287,reliability,doe,doesn,287,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:374,reliability,doe,doesn,374,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:192,safety,error,error,192,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:124,testability,simpl,simpler,124,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:124,usability,simpl,simpler,124,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:163,usability,command,command,163,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:192,usability,error,error,192,"Tbh, I found out about `groups` after writing the function and looking for a way to put the dots in front. Maybe there is a simpler way to do this... But then the command you suggest gives an error on my own data if I don't also specify `color='bulk_labels'` (works for the pbmc68k, but doesn't colour anything in), and then it just puts all the labels on the same plot and doesn't create small multiples.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:173,availability,cluster,clusters,173,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:208,availability,cluster,clusters,208,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:75,deployability,modul,modules,75,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:173,deployability,cluster,clusters,173,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:208,deployability,cluster,clusters,208,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:75,modifiability,modul,modules,75,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:75,safety,modul,modules,75,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:34,testability,plan,planning,34,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:103,testability,simpl,simply,103,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:230,testability,simpl,simply,230,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:103,usability,simpl,simply,103,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:230,usability,simpl,simply,230,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:357,usability,user,user-images,357,"Just saw this by chance. As we're planning to merge with scvelo's plotting modules soonish, that would simply become. `scv.pl.scatter(adata, groups=[[c] for c in adata.obs['clusters'].cat.categories], color='clusters', ncols=4)`, simply passing a list of lists to `groups` (without copying a whole anndata object). Will that be sufficient? ![image](https://user-images.githubusercontent.com/31883718/71019675-10dcb000-20fb-11ea-80da-78301d37b958.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:123,usability,user,user,123,Damn... so smug that @VolkerBergen ;). This looks great! Although maybe a keyword that triggers this might be nice for the user.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:206,availability,cluster,clusters,206,@LuckyMD thanks for the suggestion. I actually wrote some code long time ago that does something similar and that I use quite frequently. The main difference is that I always use the same color for all the clusters as sometimes I can not distinguish between the gray background and the cluster color. But using what @VolkerBergen suggested and then resetting the colors should do the trick. @VolkerBergen I second the idea of `groups='all'` as I think this also exists for `sc.pl.embedding_density`.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:286,availability,cluster,cluster,286,@LuckyMD thanks for the suggestion. I actually wrote some code long time ago that does something similar and that I use quite frequently. The main difference is that I always use the same color for all the clusters as sometimes I can not distinguish between the gray background and the cluster color. But using what @VolkerBergen suggested and then resetting the colors should do the trick. @VolkerBergen I second the idea of `groups='all'` as I think this also exists for `sc.pl.embedding_density`.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:206,deployability,cluster,clusters,206,@LuckyMD thanks for the suggestion. I actually wrote some code long time ago that does something similar and that I use quite frequently. The main difference is that I always use the same color for all the clusters as sometimes I can not distinguish between the gray background and the cluster color. But using what @VolkerBergen suggested and then resetting the colors should do the trick. @VolkerBergen I second the idea of `groups='all'` as I think this also exists for `sc.pl.embedding_density`.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:286,deployability,cluster,cluster,286,@LuckyMD thanks for the suggestion. I actually wrote some code long time ago that does something similar and that I use quite frequently. The main difference is that I always use the same color for all the clusters as sometimes I can not distinguish between the gray background and the cluster color. But using what @VolkerBergen suggested and then resetting the colors should do the trick. @VolkerBergen I second the idea of `groups='all'` as I think this also exists for `sc.pl.embedding_density`.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:68,performance,time,time,68,@LuckyMD thanks for the suggestion. I actually wrote some code long time ago that does something similar and that I use quite frequently. The main difference is that I always use the same color for all the clusters as sometimes I can not distinguish between the gray background and the cluster color. But using what @VolkerBergen suggested and then resetting the colors should do the trick. @VolkerBergen I second the idea of `groups='all'` as I think this also exists for `sc.pl.embedding_density`.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:82,reliability,doe,does,82,@LuckyMD thanks for the suggestion. I actually wrote some code long time ago that does something similar and that I use quite frequently. The main difference is that I always use the same color for all the clusters as sometimes I can not distinguish between the gray background and the cluster color. But using what @VolkerBergen suggested and then resetting the colors should do the trick. @VolkerBergen I second the idea of `groups='all'` as I think this also exists for `sc.pl.embedding_density`.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:46,availability,error,error,46,Tried with the group option but got an `Value error: The truth value of a Index is ambiguous.` As I didn't know how to deal with it I just applied the function @LuckyMD posted above and it worked perfectly alright.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:46,performance,error,error,46,Tried with the group option but got an `Value error: The truth value of a Index is ambiguous.` As I didn't know how to deal with it I just applied the function @LuckyMD posted above and it worked perfectly alright.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:46,safety,error,error,46,Tried with the group option but got an `Value error: The truth value of a Index is ambiguous.` As I didn't know how to deal with it I just applied the function @LuckyMD posted above and it worked perfectly alright.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:46,usability,error,error,46,Tried with the group option but got an `Value error: The truth value of a Index is ambiguous.` As I didn't know how to deal with it I just applied the function @LuckyMD posted above and it worked perfectly alright.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:121,availability,error,error,121,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:508,availability,error,error,508,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:91,interoperability,specif,specifically,91,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:451,interoperability,specif,specific,451,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:121,performance,error,error,121,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:508,performance,error,error,508,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:798,performance,time,time,798,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:201,reliability,doe,doesn,201,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:689,reliability,doe,doesn,689,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:121,safety,error,error,121,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:508,safety,error,error,508,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:121,usability,error,error,121,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:241,usability,command,command,241,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:508,usability,error,error,508,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:624,usability,command,command,624,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:755,usability,help,help,755,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/955:931,usability,command,command,931,"Hi there - random question, but for some reason, after applying this plotting solution, it specifically then leads to an error being thrown when the adata object is written (I double checked, and this doesn't happen if this `scv.pl.scatter` command isn't called). . `--> 103 write_elem(f, ""obs"", adata.obs, dataset_kwargs=dataset_kwargs)`. `TypeError: Can't implicitly convert non-string objects to strings`. Is something stored in the object that is specific to this here, that can lead to an AnnData write error? The issue relates to the .obs column, and I can certainly save the adata object if not running this plotting command. I also checked the dtypes of the obs columns, and there doesn't seem to be anything out of the ordinary there either. Any help would be appreciated, it took me some time to figure out this was causing the issue! (and it's a bit frustrating to not be able to save an object just from running a plot command)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955
https://github.com/scverse/scanpy/issues/956:95,usability,document,documentation,95,I love this! Question from my side would be how to best make docs for this. Might fragment the documentation too much if we're not careful with this.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:64,deployability,modul,module,64,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:205,deployability,api,api,205,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:205,integrability,api,api,205,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:205,interoperability,api,api,205,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:219,interoperability,format,formats,219,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:64,modifiability,modul,module,64,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:64,safety,modul,module,64,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:16,usability,document,documentation,16,With respect to documentation: each plotting function becomes a module with well described functions. An example is the styling of pandas DataFrames (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.io.formats.style.Styler.html),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:449,availability,cluster,clusters,449,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1083,availability,cluster,clusters,1083,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1318,availability,cluster,clusters,1318,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1463,availability,cluster,clusters,1463,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1596,availability,cluster,clusters,1596,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:233,deployability,log,logically,233,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:449,deployability,cluster,clusters,449,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1083,deployability,cluster,clusters,1083,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1173,deployability,manag,managers,1173,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1318,deployability,cluster,clusters,1318,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1463,deployability,cluster,clusters,1463,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1596,deployability,cluster,clusters,1596,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:202,energy efficiency,cool,cool,202,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1173,energy efficiency,manag,managers,1173,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:144,modifiability,reu,reusability,144,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:735,modifiability,reu,reusability,735,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:804,modifiability,reu,reuse,804,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:290,reliability,doe,doesn,290,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:233,safety,log,logically,233,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1173,safety,manag,managers,1173,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:233,security,log,logically,233,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:233,testability,log,logically,233,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:956,testability,simpl,simple,956,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1165,testability,context,context,1165,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:2,usability,support,support,2,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:956,usability,simpl,simple,956,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:1230,usability,aesthet,aesthetics,1230,"I support the idea of tidying up plotting arguments. I think there are mainly two problems. 1) the high number of plotting arguments 2) lack of reusability of plotting ""styles"". . Chaining looks really cool and improves 1). Also, it logically partitions the plotting arguments. However, it doesn't solve 2). In other words, if we plot two figures, we'll need to copy the entire thing, and it'll be very verbose:. ```python. sc.pl.umap(adata, color='clusters').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). sc.pl.umap(adata2, color='fluffy').scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). ```. One thing that comes to mind for reusability is to store the result of the chain somewhere and, well, reuse it:. ```python. style = sc.pl.styles.scatter_outline(width=0.1). .legend(loc='on data', outline=1). .add_edges(color='black', width=0.1). # using simple arguments, similar to https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/lmeControl.html. sc.pl.umap(adata, color='clusters', style=style). sc.pl.umap(adata2, color='fluffy', style=style). # using context managers, similar to https://seaborn.pydata.org/tutorial/aesthetics.html#temporarily-setting-figure-style. with style:. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # overriding an existing style object. with style.legend(fontsize=12):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). # or use predefined styles (?). with sc.pl.style('malte'):. sc.pl.umap(adata, color='clusters'). sc.pl.umap(adata2, color='fluffy'). ```. WDYT?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:311,deployability,manag,managers,311,"I like the idea and I see your point, however I wonder how intuitive the concept of a style is for beginners. Also you'd have to know exactly what you are looking to plot during your analysis to set up a style for all plots for the future (e.g. do you need arrows? Will you use a marker gene dotplot?). Context managers definitely look clean (I love that I have my own ^^), but it would make things a bit more difficult for beginners to get an intuitive feel for scanpy.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:311,energy efficiency,manag,managers,311,"I like the idea and I see your point, however I wonder how intuitive the concept of a style is for beginners. Also you'd have to know exactly what you are looking to plot during your analysis to set up a style for all plots for the future (e.g. do you need arrows? Will you use a marker gene dotplot?). Context managers definitely look clean (I love that I have my own ^^), but it would make things a bit more difficult for beginners to get an intuitive feel for scanpy.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:311,safety,manag,managers,311,"I like the idea and I see your point, however I wonder how intuitive the concept of a style is for beginners. Also you'd have to know exactly what you are looking to plot during your analysis to set up a style for all plots for the future (e.g. do you need arrows? Will you use a marker gene dotplot?). Context managers definitely look clean (I love that I have my own ^^), but it would make things a bit more difficult for beginners to get an intuitive feel for scanpy.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:303,testability,Context,Context,303,"I like the idea and I see your point, however I wonder how intuitive the concept of a style is for beginners. Also you'd have to know exactly what you are looking to plot during your analysis to set up a style for all plots for the future (e.g. do you need arrows? Will you use a marker gene dotplot?). Context managers definitely look clean (I love that I have my own ^^), but it would make things a bit more difficult for beginners to get an intuitive feel for scanpy.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:59,usability,intuit,intuitive,59,"I like the idea and I see your point, however I wonder how intuitive the concept of a style is for beginners. Also you'd have to know exactly what you are looking to plot during your analysis to set up a style for all plots for the future (e.g. do you need arrows? Will you use a marker gene dotplot?). Context managers definitely look clean (I love that I have my own ^^), but it would make things a bit more difficult for beginners to get an intuitive feel for scanpy.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:444,usability,intuit,intuitive,444,"I like the idea and I see your point, however I wonder how intuitive the concept of a style is for beginners. Also you'd have to know exactly what you are looking to plot during your analysis to set up a style for all plots for the future (e.g. do you need arrows? Will you use a marker gene dotplot?). Context managers definitely look clean (I love that I have my own ^^), but it would make things a bit more difficult for beginners to get an intuitive feel for scanpy.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:258,reliability,pra,practical,258,"@gokceneraslan indeed styling needs to be addressed and your solution seems quite interesting however, I don't know how complicated is to implement something like this. My suggestion would be to try the chaining first at least with some functions to see how practical is this. Maybe @VolkerBergen that is revising the scatter plots can try some initial steps?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:120,safety,compl,complicated,120,"@gokceneraslan indeed styling needs to be addressed and your solution seems quite interesting however, I don't know how complicated is to implement something like this. My suggestion would be to try the chaining first at least with some functions to see how practical is this. Maybe @VolkerBergen that is revising the scatter plots can try some initial steps?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/issues/956:120,security,compl,complicated,120,"@gokceneraslan indeed styling needs to be addressed and your solution seems quite interesting however, I don't know how complicated is to implement something like this. My suggestion would be to try the chaining first at least with some functions to see how practical is this. Maybe @VolkerBergen that is revising the scatter plots can try some initial steps?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956
https://github.com/scverse/scanpy/pull/957:67,energy efficiency,load,loaded,67,Is this backward compatible for cases where old AnnData object are loaded?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:17,interoperability,compatib,compatible,17,Is this backward compatible for cases where old AnnData object are loaded?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:67,performance,load,loaded,67,Is this backward compatible for cases where old AnnData object are loaded?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:203,interoperability,specif,specified,203,"The default behavior is the same, if `key` is not given, everything will be stored under adata.uns['paga'] as before and the plotting functions will also look for adata.uns['paga'] unless a key='key' is specified.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:12,usability,behavi,behavior,12,"The default behavior is the same, if `key` is not given, everything will be stored under adata.uns['paga'] as before and the plotting functions will also look for adata.uns['paga'] unless a key='key' is specified.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:170,deployability,version,version,170,"I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. I assume the new version has a `dict` in `adata.uns['paga']` with the keys of the individual paga runs, whereas the old case just had the paga run data in there directly.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:170,integrability,version,version,170,"I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. I assume the new version has a `dict` in `adata.uns['paga']` with the keys of the individual paga runs, whereas the old case just had the paga run data in there directly.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:170,modifiability,version,version,170,"I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. I assume the new version has a `dict` in `adata.uns['paga']` with the keys of the individual paga runs, whereas the old case just had the paga run data in there directly.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:470,availability,failur,failure,470,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:470,deployability,fail,failure,470,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:672,deployability,version,versioning,672,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:737,deployability,version,version,737,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:672,integrability,version,versioning,672,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:737,integrability,version,version,737,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:257,interoperability,compatib,compatibility,257,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:694,interoperability,specif,specification,694,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:672,modifiability,version,versioning,672,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:737,modifiability,version,version,737,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:470,performance,failur,failure,470,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:894,performance,time,time,894,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:470,reliability,fail,failure,470,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:813,testability,understand,understand,813,"> I see... but as it's always `adata.uns['paga']` what would happen if I have an old object and then run a new `sc.tl.paga()` with `key` set to something. Then you'll have it under both `adata.uns['paga']` and `adata.uns['paga'][key]`. That's not backwards compatibility though. BC is running the old code (so no key='key') with an old object (where paga is under `adata.uns['paga']`) with new scanpy and getting the old result, which is satisfied here. There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. Actually this is related to the versioning of AnnData specification. We should keep some sort of version like `/attrs/LOOM_SPEC_VERSION` in loom. Then it would be easier to understand what to expect from an anndata object that is created at any point in time.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:18,availability,failur,failure,18,"> There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. this is exactly what i was worried about. 'groups' is probably not such a rare case as a key. But good to take care of that. I guess in the old & new case, you just have a bit of a messy `adata.uns['paga']` dictionary, but it will still work (in most cases).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:18,deployability,fail,failure,18,"> There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. this is exactly what i was worried about. 'groups' is probably not such a rare case as a key. But good to take care of that. I guess in the old & new case, you just have a bit of a messy `adata.uns['paga']` dictionary, but it will still work (in most cases).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:18,performance,failur,failure,18,"> There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. this is exactly what i was worried about. 'groups' is probably not such a rare case as a key. But good to take care of that. I guess in the old & new case, you just have a bit of a messy `adata.uns['paga']` dictionary, but it will still work (in most cases).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:18,reliability,fail,failure,18,"> There are weird failure modes though, like using `key='groups'` or `key='connectivities'` might override some parts of an existing, old-style paga result. We can forbid keys like these. this is exactly what i was worried about. 'groups' is probably not such a rare case as a key. But good to take care of that. I guess in the old & new case, you just have a bit of a messy `adata.uns['paga']` dictionary, but it will still work (in most cases).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:118,deployability,releas,release,118,"We'll have 1.5.0 in a couple of days, and so it's fine to make a few behavior changes. We should put a warning in the release notes, though.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:22,integrability,coupl,couple,22,"We'll have 1.5.0 in a couple of days, and so it's fine to make a few behavior changes. We should put a warning in the release notes, though.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:22,modifiability,coupl,couple,22,"We'll have 1.5.0 in a couple of days, and so it's fine to make a few behavior changes. We should put a warning in the release notes, though.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:22,testability,coupl,couple,22,"We'll have 1.5.0 in a couple of days, and so it's fine to make a few behavior changes. We should put a warning in the release notes, though.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/957:69,usability,behavi,behavior,69,"We'll have 1.5.0 in a couple of days, and so it's fine to make a few behavior changes. We should put a warning in the release notes, though.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/957
https://github.com/scverse/scanpy/pull/959:175,deployability,API,API,175,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:175,integrability,API,API,175,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:175,interoperability,API,API,175,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:63,modifiability,layer,layer,63,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:188,safety,test,test,188,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:188,testability,test,test,188,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:193,usability,help,helpers,193,@gokceneraslan I've been thinking we should have options like `layer` and `obsm` in many more places. I've started trying to implement this in a systemic way with an internal API and some test helpers in: #1173. What would you think of using that here?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:93,energy efficiency,current,current,93,"@ivirshup is there an elegant way to get subset of genes with `_get_obs_rep`? because in the current code there are things like:. ```python. _adata = adata.raw if use_raw else adata. _adata_subset = _adata[:, gene_pool]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/959:41,integrability,sub,subset,41,"@ivirshup is there an elegant way to get subset of genes with `_get_obs_rep`? because in the current code there are things like:. ```python. _adata = adata.raw if use_raw else adata. _adata_subset = _adata[:, gene_pool]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/959
https://github.com/scverse/scanpy/pull/960:88,availability,state,state,88,"There were some outstanding, unresolved conversations and I didn’t approve this PR yet (state of the review is still “changes requested”)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/960
https://github.com/scverse/scanpy/pull/960:88,integrability,state,state,88,"There were some outstanding, unresolved conversations and I didn’t approve this PR yet (state of the review is still “changes requested”)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/960
https://github.com/scverse/scanpy/pull/960:40,interoperability,convers,conversations,40,"There were some outstanding, unresolved conversations and I didn’t approve this PR yet (state of the review is still “changes requested”)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/960
https://github.com/scverse/scanpy/pull/960:101,safety,review,review,101,"There were some outstanding, unresolved conversations and I didn’t approve this PR yet (state of the review is still “changes requested”)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/960
https://github.com/scverse/scanpy/pull/960:101,testability,review,review,101,"There were some outstanding, unresolved conversations and I didn’t approve this PR yet (state of the review is still “changes requested”)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/960
https://github.com/scverse/scanpy/issues/961:96,availability,error,error,96,"I meet this problem last days, I uninstall the python-igraph package and reinstall it. then the error disappear.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:61,modifiability,pac,package,61,"I meet this problem last days, I uninstall the python-igraph package and reinstall it. then the error disappear.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:96,performance,error,error,96,"I meet this problem last days, I uninstall the python-igraph package and reinstall it. then the error disappear.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:96,safety,error,error,96,"I meet this problem last days, I uninstall the python-igraph package and reinstall it. then the error disappear.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:96,usability,error,error,96,"I meet this problem last days, I uninstall the python-igraph package and reinstall it. then the error disappear.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:15,reliability,doe,does,15,"@SiyuSiyuYang, does @yuxiaokang-source's solution solve your issue?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:231,reliability,doe,doesn,231,"I know this is an old post, but I'm hoping someone is still keeping tabs on it since it is open. I have the same issue importing scanpy whenever I need to jump between python notebooks and R notebooks. yuxiaokang-source's solution doesn't help, unfortunately. Does anyone have a solution for dealing with the python vs R igraph problem?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:260,reliability,Doe,Does,260,"I know this is an old post, but I'm hoping someone is still keeping tabs on it since it is open. I have the same issue importing scanpy whenever I need to jump between python notebooks and R notebooks. yuxiaokang-source's solution doesn't help, unfortunately. Does anyone have a solution for dealing with the python vs R igraph problem?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:239,usability,help,help,239,"I know this is an old post, but I'm hoping someone is still keeping tabs on it since it is open. I have the same issue importing scanpy whenever I need to jump between python notebooks and R notebooks. yuxiaokang-source's solution doesn't help, unfortunately. Does anyone have a solution for dealing with the python vs R igraph problem?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:263,deployability,instal,install,263,The following fix worked for me (informed by this issue: https://github.com/HumanCellAtlas/data-consumer-vignettes/issues/78). ```bash. # uninstall packages (most important one is igraph). pip uninstall igraph python-igraph leiden scanpy. # reinstall scanpy. pip install 'scanpy[leiden]'. # check to see that you can import scanpy and print the version. python -c 'import scanpy as sc; print(sc.__version__)'. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:345,deployability,version,version,345,The following fix worked for me (informed by this issue: https://github.com/HumanCellAtlas/data-consumer-vignettes/issues/78). ```bash. # uninstall packages (most important one is igraph). pip uninstall igraph python-igraph leiden scanpy. # reinstall scanpy. pip install 'scanpy[leiden]'. # check to see that you can import scanpy and print the version. python -c 'import scanpy as sc; print(sc.__version__)'. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:345,integrability,version,version,345,The following fix worked for me (informed by this issue: https://github.com/HumanCellAtlas/data-consumer-vignettes/issues/78). ```bash. # uninstall packages (most important one is igraph). pip uninstall igraph python-igraph leiden scanpy. # reinstall scanpy. pip install 'scanpy[leiden]'. # check to see that you can import scanpy and print the version. python -c 'import scanpy as sc; print(sc.__version__)'. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:148,modifiability,pac,packages,148,The following fix worked for me (informed by this issue: https://github.com/HumanCellAtlas/data-consumer-vignettes/issues/78). ```bash. # uninstall packages (most important one is igraph). pip uninstall igraph python-igraph leiden scanpy. # reinstall scanpy. pip install 'scanpy[leiden]'. # check to see that you can import scanpy and print the version. python -c 'import scanpy as sc; print(sc.__version__)'. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/961:345,modifiability,version,version,345,The following fix worked for me (informed by this issue: https://github.com/HumanCellAtlas/data-consumer-vignettes/issues/78). ```bash. # uninstall packages (most important one is igraph). pip uninstall igraph python-igraph leiden scanpy. # reinstall scanpy. pip install 'scanpy[leiden]'. # check to see that you can import scanpy and print the version. python -c 'import scanpy as sc; print(sc.__version__)'. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/961
https://github.com/scverse/scanpy/issues/967:292,integrability,coupl,coupled,292,"> I was totally unaware of this (been using scanpy for quite a while), especially since I usually store the plain raw counts in the adata.raw field, which is used by default in rank_genes_groups. I think this is what most people do. . I feel this could be a bug: having `raw=True` by default coupled with this: . ```python. foldchanges = (np.expm1(mean_group) + 1e-9) / (np.expm1(mean_rest) + 1e-9). ```. @Koncopd what's your take?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:292,modifiability,coupl,coupled,292,"> I was totally unaware of this (been using scanpy for quite a while), especially since I usually store the plain raw counts in the adata.raw field, which is used by default in rank_genes_groups. I think this is what most people do. . I feel this could be a bug: having `raw=True` by default coupled with this: . ```python. foldchanges = (np.expm1(mean_group) + 1e-9) / (np.expm1(mean_rest) + 1e-9). ```. @Koncopd what's your take?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:292,testability,coupl,coupled,292,"> I was totally unaware of this (been using scanpy for quite a while), especially since I usually store the plain raw counts in the adata.raw field, which is used by default in rank_genes_groups. I think this is what most people do. . I feel this could be a bug: having `raw=True` by default coupled with this: . ```python. foldchanges = (np.expm1(mean_group) + 1e-9) / (np.expm1(mean_rest) + 1e-9). ```. @Koncopd what's your take?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:68,usability,behavi,behaviour,68,@Koncopd kind reminders. I can quickly fix the docs if it's desired behaviour.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:53,deployability,log,logarithmized,53,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:231,deployability,log,logarithmized,231,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:376,deployability,contain,container,376,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:433,integrability,filter,filtered,433,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:53,safety,log,logarithmized,53,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:231,safety,log,logarithmized,231,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:53,security,log,logarithmized,53,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:231,security,log,logarithmized,231,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:53,testability,log,logarithmized,53,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:231,testability,log,logarithmized,231,"@giovp . In the docs it is mentioned that it expects logarithmized data. As for `raw=True` i am not sure it is a problem. For example, in [the tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html) normalized and logarithmized data is saved to `raw` to be used further in `rank_genes_groups`. Do you think it is a problem? I don't actually consider raw as a container only for raw counts, i think it is a matter of filtered genes vs unfiltered and so on.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:59,reliability,doe,doesn,59,"ok yes I get it now. Still if they are integers, than this doesn't make sense right? `foldchanges = (np.expm1(mean_group) + 1e-9) / (np.expm1(mean_rest) + 1e-9)`. I think it makes sense to mention it in the docstrings and also use the check_nonnegative_integers from _utils as it's done in highvar genes seurat_v3. . What do you think?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:148,usability,close,closed,148,"amazing, thank you @Koncopd ! @redst4r I think this should be fixed, the docs explicitly mention this and now there is a check for integers values, closed with #1750",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:5,usability,behavi,behavior,5,This behavior was not what I expected: . https://github.com/scverse/scanpy/blob/2e98705347ea484c36caa9ba10de1987b09081bf/scanpy/tools/_rank_genes_groups.py#L536-L537. What is the motivation to use raw by default if it exists? Shouldn't that be documented here? https://scanpy.readthedocs.io/en/stable/generated/scanpy.tl.rank_genes_groups.html,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:128,usability,tool,tools,128,This behavior was not what I expected: . https://github.com/scverse/scanpy/blob/2e98705347ea484c36caa9ba10de1987b09081bf/scanpy/tools/_rank_genes_groups.py#L536-L537. What is the motivation to use raw by default if it exists? Shouldn't that be documented here? https://scanpy.readthedocs.io/en/stable/generated/scanpy.tl.rank_genes_groups.html,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/967:244,usability,document,documented,244,This behavior was not what I expected: . https://github.com/scverse/scanpy/blob/2e98705347ea484c36caa9ba10de1987b09081bf/scanpy/tools/_rank_genes_groups.py#L536-L537. What is the motivation to use raw by default if it exists? Shouldn't that be documented here? https://scanpy.readthedocs.io/en/stable/generated/scanpy.tl.rank_genes_groups.html,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967
https://github.com/scverse/scanpy/issues/969:169,deployability,log,log,169,Just a follow up here. I found the code from the Zheng et al. paper:. It appears they do calculate dispersion as var/mean but on the library size normalized counts (not log). https://github.com/10XGenomics/single-cell-3prime-paper/blob/265433ebf858c7fdcab759ca9f36b5e0241ceece/pbmc68k_analysis/util.R#L122-L135,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/969
https://github.com/scverse/scanpy/issues/969:169,safety,log,log,169,Just a follow up here. I found the code from the Zheng et al. paper:. It appears they do calculate dispersion as var/mean but on the library size normalized counts (not log). https://github.com/10XGenomics/single-cell-3prime-paper/blob/265433ebf858c7fdcab759ca9f36b5e0241ceece/pbmc68k_analysis/util.R#L122-L135,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/969
https://github.com/scverse/scanpy/issues/969:169,security,log,log,169,Just a follow up here. I found the code from the Zheng et al. paper:. It appears they do calculate dispersion as var/mean but on the library size normalized counts (not log). https://github.com/10XGenomics/single-cell-3prime-paper/blob/265433ebf858c7fdcab759ca9f36b5e0241ceece/pbmc68k_analysis/util.R#L122-L135,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/969
https://github.com/scverse/scanpy/issues/969:169,testability,log,log,169,Just a follow up here. I found the code from the Zheng et al. paper:. It appears they do calculate dispersion as var/mean but on the library size normalized counts (not log). https://github.com/10XGenomics/single-cell-3prime-paper/blob/265433ebf858c7fdcab759ca9f36b5e0241ceece/pbmc68k_analysis/util.R#L122-L135,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/969
https://github.com/scverse/scanpy/issues/970:255,deployability,api,api,255,"Hi @shendong124,. This is a usage question that should probably be asked on the discourse server here: https://scanpy.discourse.group/ . Just a quick answer:. Check out the function `sc.tl.rank_genes_groups()` here https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.rank_genes_groups.html#scanpy.tl.rank_genes_groups. If you have any further questions, let's continue that on the discourse.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/970
https://github.com/scverse/scanpy/issues/970:362,deployability,continu,continue,362,"Hi @shendong124,. This is a usage question that should probably be asked on the discourse server here: https://scanpy.discourse.group/ . Just a quick answer:. Check out the function `sc.tl.rank_genes_groups()` here https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.rank_genes_groups.html#scanpy.tl.rank_genes_groups. If you have any further questions, let's continue that on the discourse.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/970
https://github.com/scverse/scanpy/issues/970:255,integrability,api,api,255,"Hi @shendong124,. This is a usage question that should probably be asked on the discourse server here: https://scanpy.discourse.group/ . Just a quick answer:. Check out the function `sc.tl.rank_genes_groups()` here https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.rank_genes_groups.html#scanpy.tl.rank_genes_groups. If you have any further questions, let's continue that on the discourse.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/970
https://github.com/scverse/scanpy/issues/970:255,interoperability,api,api,255,"Hi @shendong124,. This is a usage question that should probably be asked on the discourse server here: https://scanpy.discourse.group/ . Just a quick answer:. Check out the function `sc.tl.rank_genes_groups()` here https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.rank_genes_groups.html#scanpy.tl.rank_genes_groups. If you have any further questions, let's continue that on the discourse.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/970
https://github.com/scverse/scanpy/pull/971:124,interoperability,conflict,conflicts,124,I guess there is no interest to merge this so I close it now (it's probably easier to re-run `pyupgrade` than deal with the conflicts anyway),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/971
https://github.com/scverse/scanpy/pull/971:48,usability,close,close,48,I guess there is no interest to merge this so I close it now (it's probably easier to re-run `pyupgrade` than deal with the conflicts anyway),MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/971
https://github.com/scverse/scanpy/pull/971:28,interoperability,conflict,conflict,28,Thank you for resolving the conflict and merging!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/971
https://github.com/scverse/scanpy/issues/972:146,deployability,contain,contains,146,"Yes, it maps the code location of classes/functions to their documented locations. Hmm, I thought you use a newer anndata? `scanpydoc` by default contains a mapping for the old location of AnnData, which is why this fails with a new location.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/972
https://github.com/scverse/scanpy/issues/972:216,deployability,fail,fails,216,"Yes, it maps the code location of classes/functions to their documented locations. Hmm, I thought you use a newer anndata? `scanpydoc` by default contains a mapping for the old location of AnnData, which is why this fails with a new location.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/972
https://github.com/scverse/scanpy/issues/972:216,reliability,fail,fails,216,"Yes, it maps the code location of classes/functions to their documented locations. Hmm, I thought you use a newer anndata? `scanpydoc` by default contains a mapping for the old location of AnnData, which is why this fails with a new location.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/972
https://github.com/scverse/scanpy/issues/972:61,usability,document,documented,61,"Yes, it maps the code location of classes/functions to their documented locations. Hmm, I thought you use a newer anndata? `scanpydoc` by default contains a mapping for the old location of AnnData, which is why this fails with a new location.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/972
https://github.com/scverse/scanpy/issues/974:48,deployability,version,version,48,I believe there are some issues with the newest version of llvmlite. . https://github.com/chriscainx/mnnpy/issues/30.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:48,integrability,version,version,48,I believe there are some issues with the newest version of llvmlite. . https://github.com/chriscainx/mnnpy/issues/30.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:48,modifiability,version,version,48,I believe there are some issues with the newest version of llvmlite. . https://github.com/chriscainx/mnnpy/issues/30.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:50,deployability,version,version,50,> I believe there are some issues with the newest version of llvmlite. > . > [chriscainx/mnnpy#30](https://github.com/chriscainx/mnnpy/issues/30). I solved the problem according to your suggestion. Thank you very much!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:50,integrability,version,version,50,> I believe there are some issues with the newest version of llvmlite. > . > [chriscainx/mnnpy#30](https://github.com/chriscainx/mnnpy/issues/30). I solved the problem according to your suggestion. Thank you very much!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:50,modifiability,version,version,50,> I believe there are some issues with the newest version of llvmlite. > . > [chriscainx/mnnpy#30](https://github.com/chriscainx/mnnpy/issues/30). I solved the problem according to your suggestion. Thank you very much!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:140,deployability,updat,updated,140,"Hi, please give me a reproducible example that uses only public data or better manually typed data. (`np.array([...])`). Also make sure you updated to numpy 0.47 (not 0.46) and llvmlite 0.31 before trying to reproduce the bug.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:57,integrability,pub,public,57,"Hi, please give me a reproducible example that uses only public data or better manually typed data. (`np.array([...])`). Also make sure you updated to numpy 0.47 (not 0.46) and llvmlite 0.31 before trying to reproduce the bug.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:140,safety,updat,updated,140,"Hi, please give me a reproducible example that uses only public data or better manually typed data. (`np.array([...])`). Also make sure you updated to numpy 0.47 (not 0.46) and llvmlite 0.31 before trying to reproduce the bug.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:140,security,updat,updated,140,"Hi, please give me a reproducible example that uses only public data or better manually typed data. (`np.array([...])`). Also make sure you updated to numpy 0.47 (not 0.46) and llvmlite 0.31 before trying to reproduce the bug.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1885,availability,state,state,1885,"/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2658,availability,state,state,2658,"ils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_conc",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:535,deployability,version,versions,535,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:741,deployability,fail,failed,741,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:869,deployability,version,versions,869,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:965,deployability,version,versions,965,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1390,deployability,version,versions,1390,"eference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1592,deployability,version,versions,1592,"mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1943,deployability,version,versions,1943,"07). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/version",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2365,deployability,version,versions,2365,"rs/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2852,deployability,modul,module,2852,"x, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2940,deployability,version,versions,2940,"ersions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3408,deployability,version,versions,3408,"site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, m",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3998,deployability,version,versions,3998,"vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 if not same_set:. 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:403,integrability,batch,batch,403,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:437,integrability,batch,batch,437,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:535,integrability,version,versions,535,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:869,integrability,version,versions,869,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:965,integrability,version,versions,965,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1390,integrability,version,versions,1390,"eference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1592,integrability,version,versions,1592,"mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1885,integrability,state,state,1885,"/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1943,integrability,version,versions,1943,"07). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/version",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2365,integrability,version,versions,2365,"rs/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2658,integrability,state,state,2658,"ils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_conc",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2940,integrability,version,versions,2940,"ersions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3408,integrability,version,versions,3408,"site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, m",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3998,integrability,version,versions,3998,"vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 if not same_set:. 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:535,modifiability,version,versions,535,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:587,modifiability,pac,packages,587,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:869,modifiability,version,versions,869,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:921,modifiability,pac,packages,921,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:965,modifiability,version,versions,965,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1017,modifiability,pac,packages,1017,"h the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1390,modifiability,version,versions,1390,"eference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1442,modifiability,pac,packages,1442,"Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", lin",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1592,modifiability,version,versions,1592,"mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1644,modifiability,pac,packages,1644,"alling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, v",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1943,modifiability,version,versions,1943,"07). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/version",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1995,modifiability,pac,packages,1995,"ib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-package",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2365,modifiability,version,versions,2365,"rs/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2417,modifiability,pac,packages,2417,"t/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2852,modifiability,modul,module,2852,"x, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2940,modifiability,version,versions,2940,"ersions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2992,modifiability,pac,packages,2992,"ackages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyen",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3408,modifiability,version,versions,3408,"site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, m",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3460,modifiability,pac,packages,3460,"e_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3908,modifiability,Pac,Packing,3908,"vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 if not same_set:. 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3998,modifiability,version,versions,3998,"vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 if not same_set:. 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:4050,modifiability,pac,packages,4050,"vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 if not same_set:. 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:326,performance,Perform,Performing,326,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:403,performance,batch,batch,403,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:437,performance,batch,batch,437,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:193,reliability,poisson,poisson,193,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:252,reliability,poisson,poisson,252,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:741,reliability,fail,failed,741,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2154,safety,detect,detected,2154," np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2825,safety,input,input-,2825,"dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2852,safety,modul,module,2852,"x, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2154,security,detect,detected,2154," np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2781,testability,Trace,Traceback,2781,"np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_a",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:326,usability,Perform,Performing,326,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:511,usability,user,users,511,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:845,usability,user,users,845,"Here's an example with the newest numba and llvmlite. . I noticed with fewer cells it works. . ```python. import scanpy as sc. import anndata. import numpy as np. a = anndata.AnnData(np.random.poisson(size=(4000, 5000))). b = anndata.AnnData(np.random.poisson(size=(10000, 5000))). sc.external.pp.mnn_correct(a, b). ```. ```. Performing cosine normalization... Starting MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1366,usability,user,users,1366," MNN correct iteration. Reference batch: 0. Step 1 of 1: processing batch 1. Looking for MNNs... Computing correction vectors... /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py:102: NumbaWarning: . Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""compute_correction"" failed type inference due to: non-precise type pyobject. [1] During: typing of argument at /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/vers",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:1919,usability,user,users,1919,"ackages/mnnpy/utils.py (107). File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2183,usability,behavi,behaviour,2183,"t.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, m",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2326,usability,behavi,behaviour-when-using-jit,2326,":], float32)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 ret",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2825,usability,input,input-,2825,"dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:2916,usability,user,users,2916,"users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: . Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File "".pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing Ann",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3384,usability,user,users,3384,"ndata_test/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:. def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):. <source elided>. vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32). for index, ve in zip(mnn2, vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:3974,usability,user,users,3974,"vect):. ^. state.func_ir.loc)). ```. ```pytb. ---------------------------------------------------------------------------. IndexError Traceback (most recent call last). <ipython-input-16-0bc362244a72> in <module>. ----> 1 sc.external.pp.mnn_correct(a, b). /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 152 save_raw=save_raw,. 153 n_jobs=n_jobs,. --> 154 **kwargs,. 155 ). 156 return datas, mnn_list, angle_list. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,. 125 compute_angle=compute_angle, mnn_order=mnn_order,. --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs). 127 print('Packing AnnData object...'). 128 if do_concatenate:. /data/yosef2/users/adamgayoso/.pyenv/versions/3.7.3/envs/anndata_test/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs). 180 print(' Computing correction vectors...'). 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,. --> 182 new_batch_in, sigma). 183 if not same_set:. 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:62,integrability,wrap,wrapper,62,"Since the bug happens in mnnpy and isn’t caused by the scanpy wrapper, this is not a scanpy bug: chriscainx/mnnpy#30",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/issues/974:62,interoperability,wrapper,wrapper,62,"Since the bug happens in mnnpy and isn’t caused by the scanpy wrapper, this is not a scanpy bug: chriscainx/mnnpy#30",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/974
https://github.com/scverse/scanpy/pull/976:24,safety,test,tests,24,"Actually this broke our tests (you probably missed it because numba broke them before) and has no type annotations. I’d also like to see a few changes, please fix and resubmit.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/976
https://github.com/scverse/scanpy/pull/976:24,testability,test,tests,24,"Actually this broke our tests (you probably missed it because numba broke them before) and has no type annotations. I’d also like to see a few changes, please fix and resubmit.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/976
https://github.com/scverse/scanpy/pull/976:79,integrability,sub,submitted,79,"@flying-sheep and @falexwolf ,. I have resolved all issues mentioned above and submitted a new pull request #994 . Please review and let me know if there is anything else to be done. Thank you,. Awni",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/976
https://github.com/scverse/scanpy/pull/976:122,safety,review,review,122,"@flying-sheep and @falexwolf ,. I have resolved all issues mentioned above and submitted a new pull request #994 . Please review and let me know if there is anything else to be done. Thank you,. Awni",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/976
https://github.com/scverse/scanpy/pull/976:122,testability,review,review,122,"@flying-sheep and @falexwolf ,. I have resolved all issues mentioned above and submitted a new pull request #994 . Please review and let me know if there is anything else to be done. Thank you,. Awni",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/976
https://github.com/scverse/scanpy/issues/977:303,energy efficiency,load,load,303,"Hi,. I don't think the data is actually different. Only the jitter in the violin plot places the dots in different places (this is an inherent stochastic effect). The underlying value of `n_genes` (and others) is still the same. You can check if `adata.obs['n_counts']` is the same in the 4 objects you load.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977
https://github.com/scverse/scanpy/issues/977:303,performance,load,load,303,"Hi,. I don't think the data is actually different. Only the jitter in the violin plot places the dots in different places (this is an inherent stochastic effect). The underlying value of `n_genes` (and others) is still the same. You can check if `adata.obs['n_counts']` is the same in the 4 objects you load.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977
https://github.com/scverse/scanpy/issues/977:140,safety,test,tests,140,"Hi,. Thank you for your prompt reply and suggestions. I checked the `adata.obs[""n_counts]` and `adata.X` comparing them among the different tests and they are actually identical. I also identified why there was a stochastic effect in the jitter plots inside the violin plots. It is due to the `numpy` random seed; indeed, if you call `numpy.random.seed(N)` before calling the `scanpy.pl.violin` function, you obtain the same violin plots. Notice that you have to call it before every call of `scanpy.pl.violin`. It seems that the seed is reset somewhere in the code. Best wishes,. Simone",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977
https://github.com/scverse/scanpy/issues/977:168,security,ident,identical,168,"Hi,. Thank you for your prompt reply and suggestions. I checked the `adata.obs[""n_counts]` and `adata.X` comparing them among the different tests and they are actually identical. I also identified why there was a stochastic effect in the jitter plots inside the violin plots. It is due to the `numpy` random seed; indeed, if you call `numpy.random.seed(N)` before calling the `scanpy.pl.violin` function, you obtain the same violin plots. Notice that you have to call it before every call of `scanpy.pl.violin`. It seems that the seed is reset somewhere in the code. Best wishes,. Simone",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977
https://github.com/scverse/scanpy/issues/977:186,security,ident,identified,186,"Hi,. Thank you for your prompt reply and suggestions. I checked the `adata.obs[""n_counts]` and `adata.X` comparing them among the different tests and they are actually identical. I also identified why there was a stochastic effect in the jitter plots inside the violin plots. It is due to the `numpy` random seed; indeed, if you call `numpy.random.seed(N)` before calling the `scanpy.pl.violin` function, you obtain the same violin plots. Notice that you have to call it before every call of `scanpy.pl.violin`. It seems that the seed is reset somewhere in the code. Best wishes,. Simone",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977
https://github.com/scverse/scanpy/issues/977:140,testability,test,tests,140,"Hi,. Thank you for your prompt reply and suggestions. I checked the `adata.obs[""n_counts]` and `adata.X` comparing them among the different tests and they are actually identical. I also identified why there was a stochastic effect in the jitter plots inside the violin plots. It is due to the `numpy` random seed; indeed, if you call `numpy.random.seed(N)` before calling the `scanpy.pl.violin` function, you obtain the same violin plots. Notice that you have to call it before every call of `scanpy.pl.violin`. It seems that the seed is reset somewhere in the code. Best wishes,. Simone",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977
https://github.com/scverse/scanpy/issues/978:377,availability,error,errors,377,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:273,deployability,fail,fail,273,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:399,deployability,Fail,Failed,399,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:423,deployability,pipelin,pipeline,423,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:423,integrability,pipelin,pipeline,423,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:377,performance,error,errors,377,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:273,reliability,fail,fail,273,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:399,reliability,Fail,Failed,399,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:377,safety,error,errors,377,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:340,testability,UniT,UniTuple,340,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:490,testability,UniT,UniTuple,490,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:377,usability,error,errors,377,"Are you sure about numba 0.43? This very much looks like a bug in numba. > It seems that `top_segment_proportions_sparse_csr` is new for scanpy 1.4.5. What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. A second way for this to fail is:. ```pytb. NotImplementedError: No definition for lowering UniTuple(int64 x 2).shape. ... numba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend). No definition for lowering UniTuple(int64 x 2).shape. File ""_qc_.py"", line 390:. def top_segment_proportions_sparse_csr(data, indptr, ns):. <source elided>. prev = 0. for j, n in enumerate(ns):. ^. [1] During: lowering ""$phi382.1_shape.158 = getattr(value=$380for_iter.2, attr=shape)"" at _qc.py (408). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1928,availability,error,errors,1928,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:629,deployability,modul,module,629,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2664,deployability,version,version,2664,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2664,integrability,version,version,2664,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:629,modifiability,modul,module,629,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:697,modifiability,pac,packages,697,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:754,modifiability,pac,packages,754,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:865,modifiability,layer,layer,865,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1009,modifiability,pac,packages,1009,"e about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user cod",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1066,modifiability,pac,packages,1066,"mba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1169,modifiability,layer,layer,1169,"s you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 els",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1437,modifiability,pac,packages,1437,"inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1494,modifiability,pac,packages,1494,"-----------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since th",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1721,modifiability,pac,packages,1721,"scanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1778,modifiability,pac,packages,1778,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2033,modifiability,pac,packages,2033,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2090,modifiability,pac,packages,2090,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2238,modifiability,pac,packages,2238,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2295,modifiability,pac,packages,2295,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2664,modifiability,version,version,2664,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:890,performance,parallel,parallel,890,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1197,performance,parallel,parallel,1197,"here since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1928,performance,error,errors,1928,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2595,performance,time,time,2595,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:603,safety,input,input-,603,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:629,safety,modul,module,629,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1921,safety,except,except,1921,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1928,safety,error,errors,1928,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:559,testability,Trace,Traceback,559,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:603,usability,input,input-,603,"> Are you sure about numba 0.43? This very much looks like a bug in numba. > . > > It seems that top_segment_proportions_sparse_csr is new for scanpy 1.4.5. > . > What makes you think that? It’s been there since @ivirshup added `calculate_qc_metrics` in #316. Yes. see. ```py. print(sc.__version__). import numba. print(numba.__version__). ```. ```. 1.4.5. 0.43.1. ```. ```py. adata = sc.datasets.pbmc3k(). sc.pp.calculate_qc_metrics(adata, inplace=True). ```. ```pytb. ---------------------------------------------------------------------------. TypingError Traceback (most recent call last). <ipython-input-4-c3b3d6ea75c2> in <module>. ----> 1 sc.pp.calculate_qc_metrics(adata, inplace=True). ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:1928,usability,error,errors,1928,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2005,usability,user,user,2005,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:2020,usability,help,help,2020,"rocessing/_qc.py in calculate_qc_metrics(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, parallel). 281 percent_top=percent_top,. 282 inplace=inplace,. --> 283 X=X,. 284 ). 285 var_metrics = describe_var(. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in describe_obs(adata, expr_type, var_type, qc_vars, percent_top, layer, use_raw, inplace, X, parallel). 107 if percent_top:. 108 percent_top = sorted(percent_top). --> 109 proportions = top_segment_proportions(X, percent_top). 110 for i, n in enumerate(percent_top):. 111 obs_metrics[f""pct_{expr_type}_in_top_{n}_{var_type}""] = (. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/scanpy/preprocessing/_qc.py in top_segment_proportions(mtx, ns). 364 mtx = csr_matrix(mtx). 365 return top_segment_proportions_sparse_csr(. --> 366 mtx.data, mtx.indptr, np.array(ns, dtype=np.int). 367 ). 368 else:. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws). 348 e.patch_message(msg). 349 . --> 350 error_rewrite(e, 'typing'). 351 except errors.UnsupportedError as e:. 352 # Something unsupported is present in the user code, add help info. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type). 315 raise e. 316 else:. --> 317 reraise(type(e), e, None). 318 . 319 argtypes = []. ~/packages/anaconda3/envs/testscanpy145/lib/python3.6/site-packages/numba/six.py in reraise(tp, value, tb). 656 value = tp(). 657 if value.__traceback__ is not tb:. --> 658 raise value.with_traceback(tb). 659 raise value. 660 . ```. I was also surprised since this should be the first few functions people run. ```calculate_qc_metrics``` was there for a long time. But ```top_segment_proportions_sparse_csr``` seems to be a new version since 1.4.5- I checked the _qc.py in the tar.gz files. Sorry my previous description was not accurate.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:54,usability,close,close,54,Looks like numba/numba#2625 is involved. Why did they close it?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:5,availability,error,error,5,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:321,availability,error,error,321,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:5,performance,error,error,5,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:74,performance,parallel,parallel,74,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:155,performance,parallel,parallel,155,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:200,performance,parallel,parallel,200,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:285,performance,parallel,parallel,285,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:321,performance,error,error,321,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:5,safety,error,error,5,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:321,safety,error,error,321,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:5,usability,error,error,5,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/978:321,usability,error,error,321,"same error in 1.4.4. ```. sc.pp.calculate_qc_metrics(adata, inplace=True, parallel=True). ```. Maybe because sc.pp.calculate_qc_metrics was running in non parallel by default in 1.4.4 and before. the parallel= option has been removed since 1.4.5 and calculate_qc_metrics is running in parallel by default. That's why the error wasn't reported. I don't know enough about numba.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/978
https://github.com/scverse/scanpy/issues/979:281,safety,test,test,281,"Just opened a PR to fix this. Quoting from the PR (#1069):. > Note that if you wish to modify the figure in the same jupyter notebook cell in which the plotting function is called, you should set show=False:. ```. fig,ax = sc.pl.dotplot(adata,var_names,show=False). ax.set_xlabel('test'). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/979
https://github.com/scverse/scanpy/issues/979:87,security,modif,modify,87,"Just opened a PR to fix this. Quoting from the PR (#1069):. > Note that if you wish to modify the figure in the same jupyter notebook cell in which the plotting function is called, you should set show=False:. ```. fig,ax = sc.pl.dotplot(adata,var_names,show=False). ax.set_xlabel('test'). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/979
https://github.com/scverse/scanpy/issues/979:281,testability,test,test,281,"Just opened a PR to fix this. Quoting from the PR (#1069):. > Note that if you wish to modify the figure in the same jupyter notebook cell in which the plotting function is called, you should set show=False:. ```. fig,ax = sc.pl.dotplot(adata,var_names,show=False). ax.set_xlabel('test'). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/979
https://github.com/scverse/scanpy/issues/981:81,deployability,version,versions,81,"Thank you! The bug you linked is about 0.4**6** + 0.31, though, while the newest versions (where the bugs happened for us) are 0.47 + 0.31. Anyway, I circumvented them already in #980",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/981
https://github.com/scverse/scanpy/issues/981:81,integrability,version,versions,81,"Thank you! The bug you linked is about 0.4**6** + 0.31, though, while the newest versions (where the bugs happened for us) are 0.47 + 0.31. Anyway, I circumvented them already in #980",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/981
https://github.com/scverse/scanpy/issues/981:81,modifiability,version,versions,81,"Thank you! The bug you linked is about 0.4**6** + 0.31, though, while the newest versions (where the bugs happened for us) are 0.47 + 0.31. Anyway, I circumvented them already in #980",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/981
https://github.com/scverse/scanpy/issues/984:17,deployability,updat,update,17,Will there be an update on this issue? It would be really helpful!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:17,safety,updat,update,17,Will there be an update on this issue? It would be really helpful!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:17,security,updat,update,17,Will there be an update on this issue? It would be really helpful!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:58,usability,help,helpful,58,Will there be an update on this issue? It would be really helpful!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:36,integrability,sub,subsetting,36,"Looking at #842 this is possible by subsetting the data on the groups of interest and then perform the analysis (one-vs-rest). If the reference group is an aggregate of other groups, then one has to define the new labels in the subset.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:228,integrability,sub,subset,228,"Looking at #842 this is possible by subsetting the data on the groups of interest and then perform the analysis (one-vs-rest). If the reference group is an aggregate of other groups, then one has to define the new labels in the subset.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:91,performance,perform,perform,91,"Looking at #842 this is possible by subsetting the data on the groups of interest and then perform the analysis (one-vs-rest). If the reference group is an aggregate of other groups, then one has to define the new labels in the subset.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:91,usability,perform,perform,91,"Looking at #842 this is possible by subsetting the data on the groups of interest and then perform the analysis (one-vs-rest). If the reference group is an aggregate of other groups, then one has to define the new labels in the subset.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/984:43,energy efficiency,current,current,43,@Koncopd is this sth you could add in your current work on `rank_genes_groups()`?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984
https://github.com/scverse/scanpy/issues/985:4,deployability,updat,updating,4,"Hi, updating anndata should fix the problem.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/985
https://github.com/scverse/scanpy/issues/985:4,safety,updat,updating,4,"Hi, updating anndata should fix the problem.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/985
https://github.com/scverse/scanpy/issues/985:4,security,updat,updating,4,"Hi, updating anndata should fix the problem.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/985
https://github.com/scverse/scanpy/issues/987:250,integrability,sub,subsample,250,"Something like this should work. Note, this is not tested. ```pytb. target_cells = 5000. adatas = [adata[adata.obs[cluster_key].isin(clust)] for clust in adata.obs[cluster_key].cat.categories]. for dat in adatas:. if dat.n_obs > target_cells:. sc.pp.subsample(dat, n_obs=target_cells). adata_downsampled = adatas[0].concatenate(*adatas[1:]). ```. Hope that helps.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:51,safety,test,tested,51,"Something like this should work. Note, this is not tested. ```pytb. target_cells = 5000. adatas = [adata[adata.obs[cluster_key].isin(clust)] for clust in adata.obs[cluster_key].cat.categories]. for dat in adatas:. if dat.n_obs > target_cells:. sc.pp.subsample(dat, n_obs=target_cells). adata_downsampled = adatas[0].concatenate(*adatas[1:]). ```. Hope that helps.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:51,testability,test,tested,51,"Something like this should work. Note, this is not tested. ```pytb. target_cells = 5000. adatas = [adata[adata.obs[cluster_key].isin(clust)] for clust in adata.obs[cluster_key].cat.categories]. for dat in adatas:. if dat.n_obs > target_cells:. sc.pp.subsample(dat, n_obs=target_cells). adata_downsampled = adatas[0].concatenate(*adatas[1:]). ```. Hope that helps.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:357,usability,help,helps,357,"Something like this should work. Note, this is not tested. ```pytb. target_cells = 5000. adatas = [adata[adata.obs[cluster_key].isin(clust)] for clust in adata.obs[cluster_key].cat.categories]. for dat in adatas:. if dat.n_obs > target_cells:. sc.pp.subsample(dat, n_obs=target_cells). adata_downsampled = adatas[0].concatenate(*adatas[1:]). ```. Hope that helps.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:160,deployability,modul,modules,160,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:245,integrability,sub,subsampling,245,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:160,modifiability,modul,modules,160,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:233,modifiability,pac,package,233,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:160,safety,modul,modules,160,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:143,usability,learn,learn,143,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:328,usability,learn,learn-contrib,328,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:353,usability,learn,learn,353,"I'll reopen this cause I think it's quite relevant still and could be very straightforward to implement with [sklearn resample](https://scikit-learn.org/stable/modules/generated/sklearn.utils.resample.html). also, there is an entire package for subsampling strategies which is probably quite relevant: https://github.com/scikit-learn-contrib/imbalanced-learn. line here for reference: https://github.com/theislab/scanpy/blob/48cc7b38f1f31a78902a892041902cc810ddfcd3/scanpy/preprocessing/_simple.py#L857",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:43,availability,down,downsampling,43,"So assuming that we are only interested in downsampling, then I'd say `NearMiss` and related are straightforward and scalable (just need to compute a kmeans whcih is really fast)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:117,modifiability,scal,scalable,117,"So assuming that we are only interested in downsampling, then I'd say `NearMiss` and related are straightforward and scalable (just need to compute a kmeans whcih is really fast)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:117,performance,scalab,scalable,117,"So assuming that we are only interested in downsampling, then I'd say `NearMiss` and related are straightforward and scalable (just need to compute a kmeans whcih is really fast)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:35,performance,perform,performed,35,"also, the fact that reshuflling is performed is not in docs and should be documented. @bio-la do you plan to work on this?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:101,testability,plan,plan,101,"also, the fact that reshuflling is performed is not in docs and should be documented. @bio-la do you plan to work on this?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:35,usability,perform,performed,35,"also, the fact that reshuflling is performed is not in docs and should be documented. @bio-la do you plan to work on this?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:74,usability,document,documented,74,"also, the fact that reshuflling is performed is not in docs and should be documented. @bio-la do you plan to work on this?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:299,availability,down,downsample,299,"> then I'd say NearMiss and related are straightforward and scalable (just need to compute a kmeans whcih is really fast). For sampling from datasets, I would want to go with either extremely straightforward or something that has been shown to work. Maybe we could start with use provided labels to downsample by? > reshuflling is performed. Reshuffling meaning that the order is changed?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:60,modifiability,scal,scalable,60,"> then I'd say NearMiss and related are straightforward and scalable (just need to compute a kmeans whcih is really fast). For sampling from datasets, I would want to go with either extremely straightforward or something that has been shown to work. Maybe we could start with use provided labels to downsample by? > reshuflling is performed. Reshuffling meaning that the order is changed?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:60,performance,scalab,scalable,60,"> then I'd say NearMiss and related are straightforward and scalable (just need to compute a kmeans whcih is really fast). For sampling from datasets, I would want to go with either extremely straightforward or something that has been shown to work. Maybe we could start with use provided labels to downsample by? > reshuflling is performed. Reshuffling meaning that the order is changed?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:331,performance,perform,performed,331,"> then I'd say NearMiss and related are straightforward and scalable (just need to compute a kmeans whcih is really fast). For sampling from datasets, I would want to go with either extremely straightforward or something that has been shown to work. Maybe we could start with use provided labels to downsample by? > reshuflling is performed. Reshuffling meaning that the order is changed?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:331,usability,perform,performed,331,"> then I'd say NearMiss and related are straightforward and scalable (just need to compute a kmeans whcih is really fast). For sampling from datasets, I would want to go with either extremely straightforward or something that has been shown to work. Maybe we could start with use provided labels to downsample by? > reshuflling is performed. Reshuffling meaning that the order is changed?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:253,integrability,sub,subsample,253,"> ```. > clust. > ```. in scanpy1.8 , this works. `target_cells = 3000. adatas = [adata_train[adata_train.obs[cluster_key].isin([clust])] for clust in adata_train.obs[cluster_key].cat.categories]. for dat in adatas:. if dat.n_obs > target_cells:. sc.pp.subsample(dat, n_obs=target_cells, random_state=0). adata_train_downsampled1 = adatas[0].concatenate(*adatas[1:])`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:23,integrability,sub,subsamples,23,"This function at least subsamples all classes in an obs column to the same number of cells. Would be straightforward to modify to what you probably think of. ```py. def obs_key_wise_subsampling(adata, obs_key, N):. '''. Subsample each class to same cell numbers (N). Classes are given by obs_key pointing to categorical in adata.obs. '''. counts = adata.obs[obs_key].value_counts(). # subsample indices per group defined by obs_key. indices = [np.random.choice(adata.obs_names[adata.obs[obs_key]==group], size=N, replace=False) for group in counts.index]. selection = np.hstack(np.array(indices)). return adata[selection].copy(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:220,integrability,Sub,Subsample,220,"This function at least subsamples all classes in an obs column to the same number of cells. Would be straightforward to modify to what you probably think of. ```py. def obs_key_wise_subsampling(adata, obs_key, N):. '''. Subsample each class to same cell numbers (N). Classes are given by obs_key pointing to categorical in adata.obs. '''. counts = adata.obs[obs_key].value_counts(). # subsample indices per group defined by obs_key. indices = [np.random.choice(adata.obs_names[adata.obs[obs_key]==group], size=N, replace=False) for group in counts.index]. selection = np.hstack(np.array(indices)). return adata[selection].copy(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:385,integrability,sub,subsample,385,"This function at least subsamples all classes in an obs column to the same number of cells. Would be straightforward to modify to what you probably think of. ```py. def obs_key_wise_subsampling(adata, obs_key, N):. '''. Subsample each class to same cell numbers (N). Classes are given by obs_key pointing to categorical in adata.obs. '''. counts = adata.obs[obs_key].value_counts(). # subsample indices per group defined by obs_key. indices = [np.random.choice(adata.obs_names[adata.obs[obs_key]==group], size=N, replace=False) for group in counts.index]. selection = np.hstack(np.array(indices)). return adata[selection].copy(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:120,security,modif,modify,120,"This function at least subsamples all classes in an obs column to the same number of cells. Would be straightforward to modify to what you probably think of. ```py. def obs_key_wise_subsampling(adata, obs_key, N):. '''. Subsample each class to same cell numbers (N). Classes are given by obs_key pointing to categorical in adata.obs. '''. counts = adata.obs[obs_key].value_counts(). # subsample indices per group defined by obs_key. indices = [np.random.choice(adata.obs_names[adata.obs[obs_key]==group], size=N, replace=False) for group in counts.index]. selection = np.hstack(np.array(indices)). return adata[selection].copy(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:32,availability,error,error,32,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:160,deployability,observ,observations,160,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:187,integrability,sub,subsample,187,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:402,modifiability,exten,extend,402,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:471,modifiability,exten,extend,471,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:32,performance,error,error,32,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:32,safety,error,error,32,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:160,testability,observ,observations,160,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/issues/987:32,usability,error,error,32,"@stefanpeidli's code gives this error. `ValueError: Cannot take a larger sample than population when 'replace=False'`. If a group has less than required number observations, it shouldn't subsample. ```python. target_cells = 1000. cluster_key = ""cell_type"". grouped = adata.obs.groupby(cluster_key). downsampled_indices = []. for _, group in grouped:. if len(group) > target_cells:. downsampled_indices.extend(group.sample(target_cells).index). else:. downsampled_indices.extend(group.index). adata_downsampled = adata[downsampled_indices]. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/987
https://github.com/scverse/scanpy/pull/988:242,availability,error,error,242,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:114,deployability,fail,fails,114,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:66,integrability,interfac,interfaces,66,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:66,interoperability,interfac,interfaces,66,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:66,modifiability,interfac,interfaces,66,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:242,performance,error,error,242,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:114,reliability,fail,fails,114,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:4,safety,test,testing,4,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:50,safety,test,test,50,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:157,safety,test,tests,157,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:242,safety,error,error,242,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:4,testability,test,testing,4,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:50,testability,test,test,50,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:157,testability,test,tests,157,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/988:242,usability,error,error,242,"Re: testing externals, I've tried my best to just test the way it interfaces with scanpy. i.e., if MAGIC silently fails to return the correct output, scanpy tests would pass so long as the output is the right type / shape. If MAGIC throws an error when run from scanpy, this might be something you would like to address (i.e. by contacting the relevant external developer) regardless.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988
https://github.com/scverse/scanpy/pull/989:49,availability,error,error,49,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:69,availability,fault,fault,69,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:110,availability,fault,fault,110,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:69,energy efficiency,fault,fault,69,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:110,energy efficiency,fault,fault,110,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:49,performance,error,error,49,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:69,performance,fault,fault,69,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:110,performance,fault,fault,110,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:69,reliability,fault,fault,69,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:110,reliability,fault,fault,110,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:49,safety,error,error,49,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:69,safety,fault,fault,69,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:110,safety,fault,fault,110,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:49,usability,error,error,49,"@flying-sheep, any idea what's up with the black error here? Am I at fault, are all the other listed files at fault, some combination of the two?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:24,integrability,messag,message,24,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:24,interoperability,messag,message,24,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:127,interoperability,format,formatting,127,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:152,interoperability,format,format,152,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:307,interoperability,format,format,307,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:42,safety,test,tests,42,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:42,testability,test,tests,42,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:193,usability,tool,tool,193,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/pull/989:270,usability,tool,tool,270,"Didn’t you rephrase the message? > scanpy/tests/test_read_10x.py: +3 -1. > . > This above file has < {thresh} changes to black formatting. Please black format it and afterwards remove it from “tool.black.exclude"" in pyproject.toml. Anyway, it should be “remove it from ‘tool.black.exclude’ *and then* black-format it”, as black won’t run on it if it’s excluded.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989
https://github.com/scverse/scanpy/issues/990:21,availability,error,error,21,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:652,availability,avail,available,652,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1168,availability,Error,Error,1168,"done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1222,availability,error,error,1222,"equested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:251,deployability,instal,installed,251,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:370,deployability,fail,failed,370,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:534,deployability,fail,failed,534,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1203,deployability,fail,failed,1203,"ng... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement alread",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1213,deployability,instal,install,1213," # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1312,deployability,instal,install,1312,"..working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2226,deployability,api,api-wrap,2226,"de 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4747,deployability,api,api-wrap,4747,"doku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4823,deployability,version,version,4823,"nt already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4907,deployability,api,api-wrap,4907,"ite-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6058,deployability,resourc,resources,6058,"anpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6078,deployability,instal,install,6078,"uirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7647,deployability,api,api-wrap,7647,"te-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10191,deployability,version,version,10191,"e-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10275,deployability,api,api-wrap,10275," in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatibl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10411,deployability,api,api-wrap,10411,"ment already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10786,deployability,instal,install,10786,"doku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn c",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10904,deployability,fail,failed,10904,"ycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10989,deployability,fail,failed,10989,"=3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package jobl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11148,deployability,fail,failed,11148,".3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[versi",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11345,deployability,fail,failed,11345,"me/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng confl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11498,deployability,version,version,11498,"home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package n",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11826,deployability,version,version,11826,"ting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11955,deployability,version,version,11955,"e solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12146,deployability,version,version,12146,"iled with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflic",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12238,deployability,version,version,12238,"nd conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy ->",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12386,deployability,version,version,12386,"cifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12466,deployability,version,version,12466,"icts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12547,deployability,version,version,12547,"y -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12624,deployability,version,version,12624,"atsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12879,deployability,version,version,12879,"py -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12951,deployability,version,version,12951,"version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13176,deployability,version,version,13176,"<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> impo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13249,deployability,version,version,13249,".0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13330,deployability,version,version,13330,"tdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/h",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13408,deployability,version,version,13408,". Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13497,deployability,version,version,13497,"ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. B",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13581,deployability,version,version,13581,"e conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13707,deployability,version,version,13707,"0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13893,deployability,version,version,13893,"c2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip'",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14507,deployability,fail,fails,14507,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14643,deployability,Modul,ModuleNotFoundError,14643,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14667,deployability,modul,module,14667,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:15246,deployability,instal,installed,15246,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:667,energy efficiency,current,current,667,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:696,energy efficiency,Current,Current,696,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6058,energy efficiency,resourc,resources,6058,"anpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14516,energy efficiency,load,load,14516,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2226,integrability,api,api-wrap,2226,"de 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4747,integrability,api,api-wrap,4747,"doku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4823,integrability,version,version,4823,"nt already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4907,integrability,api,api-wrap,4907,"ite-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7647,integrability,api,api-wrap,7647,"te-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10191,integrability,version,version,10191,"e-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10275,integrability,api,api-wrap,10275," in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatibl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10411,integrability,api,api-wrap,10411,"ment already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11498,integrability,version,version,11498,"home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package n",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11826,integrability,version,version,11826,"ting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11955,integrability,version,version,11955,"e solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12146,integrability,version,version,12146,"iled with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflic",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12238,integrability,version,version,12238,"nd conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy ->",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12386,integrability,version,version,12386,"cifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12466,integrability,version,version,12466,"icts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12547,integrability,version,version,12547,"y -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12624,integrability,version,version,12624,"atsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12879,integrability,version,version,12879,"py -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12951,integrability,version,version,12951,"version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13176,integrability,version,version,13176,"<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> impo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13249,integrability,version,version,13249,".0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13330,integrability,version,version,13330,"tdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/h",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13408,integrability,version,version,13408,". Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13497,integrability,version,version,13497,"ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. B",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13581,integrability,version,version,13581,"e conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13707,integrability,version,version,13707,"0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13893,integrability,version,version,13893,"c2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip'",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2226,interoperability,api,api-wrap,2226,"de 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4747,interoperability,api,api-wrap,4747,"doku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4907,interoperability,api,api-wrap,4907,"ite-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7647,interoperability,api,api-wrap,7647,"te-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10275,interoperability,api,api-wrap,10275," in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatibl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10411,interoperability,api,api-wrap,10411,"ment already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11245,interoperability,conflict,conflicts,11245,"te-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11268,interoperability,incompatib,incompatible,11268,"-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11387,interoperability,specif,specifications,11387,"ges (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11419,interoperability,incompatib,incompatible,11419,"py) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package lib",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11465,interoperability,conflict,conflicts,11465,"y satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[vers",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11530,interoperability,conflict,conflicts,11530,"n3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11581,interoperability,conflict,conflicts,11581,"equirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11633,interoperability,conflict,conflicts,11633,"e/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.2",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11682,interoperability,conflict,conflicts,11682,"(from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11734,interoperability,conflict,conflicts,11734,"sion < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11789,interoperability,conflict,conflicts,11789,"-c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. pytho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11863,interoperability,conflict,conflicts,11863,"a.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11916,interoperability,conflict,conflicts,11916,"al frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib confl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11995,interoperability,conflict,conflicts,11995," repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain con",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12056,interoperability,conflict,conflicts,12056,"podata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. p",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12113,interoperability,conflict,conflicts,12113,"): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12206,interoperability,conflict,conflicts,12206," Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12281,interoperability,conflict,conflicts,12281,"ges. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12343,interoperability,conflict,conflicts,12343,"led. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12429,interoperability,conflict,conflicts,12429,"th each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12509,interoperability,conflict,conflicts,12509,"]. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12587,interoperability,conflict,conflicts,12587,"or:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12773,interoperability,conflict,conflicts,12773,"umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12841,interoperability,conflict,conflicts,12841,"Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadat",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12916,interoperability,conflict,conflicts,12916,"icts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12997,interoperability,conflict,conflicts,12997,"ts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `py",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13044,interoperability,conflict,conflicts,13044,"tadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019,",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13092,interoperability,conflict,conflicts,13092,"ata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on lin",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13143,interoperability,conflict,conflicts,13143,"rsion='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13217,interoperability,conflict,conflicts,13217,"scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13290,interoperability,conflict,conflicts,13290,". scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13374,interoperability,conflict,conflicts,13374,"cxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13460,interoperability,conflict,conflicts,13460,"[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/l",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13542,interoperability,conflict,conflicts,13542,"version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. li",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13618,interoperability,conflict,conflicts,13618,"[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scan",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13669,interoperability,conflict,conflicts,13669,"<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13848,interoperability,conflict,conflicts,13848,"r:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-m",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14779,interoperability,share,share,14779,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14844,interoperability,share,share,14844,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14922,interoperability,share,share,14922,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14997,interoperability,share,share,14997,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:15084,interoperability,share,share,15084,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:115,modifiability,pac,package,115,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:234,modifiability,pac,packages,234,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:273,modifiability,pac,package,273,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:445,modifiability,pac,package,445,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:598,modifiability,Pac,PackagesNotFoundError,598,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:635,modifiability,pac,packages,635,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1057,modifiability,pac,package,1057,"m the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Require",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1194,modifiability,pac,packages,1194,"...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requiremen",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1423,modifiability,pac,packages,1423,"solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1540,modifiability,pac,packages,1540,"h initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1661,modifiability,pac,packages,1661,"m current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packag",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1784,modifiability,pac,packages,1784,"da.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1848,modifiability,pac,packaging,1848,"linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /ho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1905,modifiability,pac,packages,1905,"- https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2022,modifiability,pac,packages,2022,"els that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/ana",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2155,modifiability,pac,packages,2155,"he page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2282,modifiability,pac,packages,2282," `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2412,modifiability,pac,packages,2412,"7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2534,modifiability,pac,packages,2534,"e-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-package",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2659,modifiability,pac,packages,2659,"ckages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2777,modifiability,pac,packages,2777,"te-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2894,modifiability,pac,packages,2894,"7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/li",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3052,modifiability,pac,packages,3052,"quirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from p",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3168,modifiability,pac,packages,3168,"anpy) (0.10.1). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3286,modifiability,pac,packages,3286," (from scanpy) (1.2). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3405,modifiability,pac,packages,3405,"te-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pypars",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3531,modifiability,pac,packages,3531,"ackages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satis",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3654,modifiability,pac,packages,3654,"-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already sa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3785,modifiability,pac,packages,3785,"om scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). R",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3915,modifiability,pac,packages,3915,".5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->sc",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4040,modifiability,pac,packages,4040,.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (fro,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4178,modifiability,pac,packages,4178, scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from ,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4326,modifiability,pac,packages,4326,"already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/pyth",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4467,modifiability,pac,packages,4467,"otlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4482,modifiability,pac,packaging,4482,"/home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4592,modifiability,pac,packages,4592,"py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/l",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4607,modifiability,pac,packaging,4607,"ome/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/sit",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4725,modifiability,pac,packages,4725,">=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/an",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4823,modifiability,version,version,4823,"nt already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:4885,modifiability,pac,packages,4885,"conda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/pyt",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5031,modifiability,pac,packages,5031,"site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networka",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5167,modifiability,pac,packages,5167,"7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5341,modifiability,pac,packages,5341,"as>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisf",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5412,modifiability,deco,decorator,5412,".2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packag",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5476,modifiability,pac,packages,5476,"m packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: netwo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5614,modifiability,pac,packages,5614,"scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5756,modifiability,pac,packages,5756,"npy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < """,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5901,modifiability,pac,packages,5901,"y-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6179,modifiability,pac,packages,6179,"mportlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/sit",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6287,modifiability,pac,packages,6287,".2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/an",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6411,modifiability,pac,packages,6411,"orator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6531,modifiability,pac,packages,6531,"dy satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /ho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6654,modifiability,pac,packages,6654,".1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6812,modifiability,pac,packages,6812,"ent already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/si",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6934,modifiability,pac,packages,6934,"etadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-pa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7052,modifiability,pac,packages,7052,"p/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7185,modifiability,pac,packages,7185,"1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packag",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7318,modifiability,pac,packages,7318,"uirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7453,modifiability,pac,packages,7453,"lready satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7576,modifiability,pac,packages,7576," satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirem",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7703,modifiability,pac,packages,7703,"atisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Req",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7819,modifiability,pac,packages,7819,rom scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:7936,modifiability,pac,packages,7936,es (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->sca,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8053,modifiability,pac,packages,8053,ges (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-pac,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8183,modifiability,pac,packages,8183,ckages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/pytho,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8299,modifiability,pac,packages,8299,python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaco,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8421,modifiability,pac,packages,8421,"naconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement alrea",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8484,modifiability,pac,packaging,8484,"irement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8541,modifiability,pac,packages,8541,"u/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8671,modifiability,pac,packages,8671,"naconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8786,modifiability,pac,packages,8786,"anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsun",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8915,modifiability,pac,packages,8915,"b/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9054,modifiability,pac,packages,9054,"ges (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=201",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9133,modifiability,deco,decorator,9133," /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9197,modifiability,pac,packages,9197,"npy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9327,modifiability,pac,packages,9327," Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9504,modifiability,pac,packages,9504,"oku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9654,modifiability,pac,packages,9654,"thon3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9824,modifiability,pac,packages,9824,"quirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Coll",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9966,modifiability,pac,packages,9966,"eady satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. So",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10109,modifiability,pac,packages,10109," already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10191,modifiability,version,version,10191,"e-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10253,modifiability,pac,packages,10253,"y satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! L",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10389,modifiability,pac,packages,10389,"anpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specif",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10545,modifiability,pac,packages,10545,"1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. sca",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10678,modifiability,pac,packages,10678,".0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10835,modifiability,pac,package,10835,"matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11087,modifiability,pac,package,11087,"ib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11281,modifiability,pac,packages,11281,"scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conf",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11450,modifiability,Pac,Package,11450,"quirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11498,modifiability,version,version,11498,"home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package n",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11517,modifiability,Pac,Package,11517,"nda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts fo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11562,modifiability,Pac,Package,11562,"->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11619,modifiability,Pac,Package,11619,"ertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11666,modifiability,Pac,Package,11666,".7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.2",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11717,modifiability,Pac,Package,11717,"a>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11770,modifiability,Pac,Package,11770," ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 c",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11826,modifiability,version,version,11826,"ting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11846,modifiability,Pac,Package,11846,"a (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11899,modifiability,Pac,Package,11899," failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11955,modifiability,version,version,11955,"e solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11980,modifiability,Pac,Package,11980,"ent: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12029,modifiability,Pac,Package,12029,"son, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. P",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12102,modifiability,Pac,Package,12102,"epodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12146,modifiability,version,version,12146,"iled with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflic",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12192,modifiability,Pac,Package,12192,"flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12238,modifiability,version,version,12238,"nd conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy ->",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12259,modifiability,Pac,Package,12259," for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12322,modifiability,Pac,Package,12322,"s CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12386,modifiability,version,version,12386,"cifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12414,modifiability,Pac,Package,12414," incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12466,modifiability,version,version,12466,"icts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12493,modifiability,Pac,Package,12493,"[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12547,modifiability,version,version,12547,"y -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12572,modifiability,Pac,Package,12572,"ools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-l",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12624,modifiability,version,version,12624,"atsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12748,modifiability,Pac,Package,12748,"anpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12821,modifiability,Pac,Package,12821,"[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Pack",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12879,modifiability,version,version,12879,"py -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12903,modifiability,Pac,Package,12903,"readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12951,modifiability,version,version,12951,"version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:12981,modifiability,Pac,Package,12981,"ge joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the termin",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13032,modifiability,Pac,Package,13032," importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default,",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13079,modifiability,Pac,Package,13079,"mportlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13132,modifiability,Pac,Package,13132,"3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits""",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13176,modifiability,version,version,13176,"<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> impo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13203,modifiability,Pac,Package,13203,"onflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this work",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13249,modifiability,version,version,13249,".0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13272,modifiability,Pac,Package,13272,"raph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/py",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13330,modifiability,version,version,13330,"tdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/h",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13358,modifiability,Pac,Package,13358,"hon=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/p",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13408,modifiability,version,version,13408,". Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13441,modifiability,Pac,Package,13441,"python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13497,modifiability,version,version,13497,"ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. B",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13521,modifiability,Pac,Package,13521,"python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13581,modifiability,version,version,13581,"e conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13602,modifiability,Pac,Package,13602,"hon=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas a",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13653,modifiability,Pac,Package,13653,",<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFound",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13707,modifiability,version,version,13707,"0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13821,modifiability,Pac,Package,13821,"age statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/ho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13893,modifiability,version,version,13893,"c2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip'",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14427,modifiability,pac,packages,14427,".22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to d",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14483,modifiability,pac,packages,14483,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14643,modifiability,Modul,ModuleNotFoundError,14643,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14667,modifiability,modul,module,14667,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:15139,modifiability,pac,packages,15139,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:21,performance,error,error,21,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1168,performance,Error,Error,1168,"done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1222,performance,error,error,1222,"equested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3349,performance,network,networkx,3349,".6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5491,performance,network,networkx,5491,"anpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6027,performance,network,networkanalyst,6027,"kages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/l",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6058,performance,resourc,resources,6058,"anpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6475,performance,network,networkx,6475,"kages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9212,performance,network,networkx,9212,"Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11854,performance,network,networkx,11854,"nt_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11889,performance,network,networkx,11889,"vironment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14516,performance,load,load,14516,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:370,reliability,fail,failed,370,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:534,reliability,fail,failed,534,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:652,reliability,availab,available,652,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1203,reliability,fail,failed,1203,"ng... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement alread",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10904,reliability,fail,failed,10904,"ycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:10989,reliability,fail,failed,10989,"=3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package jobl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11148,reliability,fail,failed,11148,".3). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[versi",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11345,reliability,fail,failed,11345,"me/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). ```. ```. conda install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng confl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14507,reliability,fail,fails,14507,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:15314,reliability,doe,doesn,15314,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:21,safety,error,error,21,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:652,safety,avail,available,652,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1168,safety,Error,Error,1168,"done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1222,safety,error,error,1222,"equested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6058,safety,resourc,resources,6058,"anpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14643,safety,Modul,ModuleNotFoundError,14643,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14667,safety,modul,module,14667,"]. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/site-packages', '/home/tsundoku/R/x86_64-pc-linux-gnu-library/3.6/reticulate/python']. ```. Okay so `scanpy` is installed but the `PATH` are different. Not sure why `py_install()` doesn't work. I guess the alternative is including the those paths for reticulate but not sure at the moment how to do that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:652,security,availab,available,652,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3349,security,network,networkx,3349,".6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:5491,security,network,networkx,5491,"anpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (2.1). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/ts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6027,security,network,networkanalyst,6027,"kages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/l",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6475,security,network,networkx,6475,"kages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:9212,security,network,networkx,9212,"Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.8.1). Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (2.4.5). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: get-version>=2.0.4 in /home/t",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11854,security,network,networkx,11854,"nt_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11889,security,network,networkx,11889,"vironment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:6058,testability,resourc,resources,6058,"anpy) (0.30.0). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: numexpr>=2.6.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from tables->scanpy) (2.7.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: cycler>=0.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (0.10.0). Requirement already satisfied: more-itertools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (7.2.0). tsundoku@tsundoku-OptiPlex-7070:~/networkanalyst/src/main/webapp/resources/data$ pip install scanpy. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: numba>=0.41.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.46.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:21,usability,error,error,21,"I'm getting the same error from RStudio with reticulate:. From the console:. ```. py_install('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anacond",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1086,usability,navigat,navigate,1086,"ll('scanpy'). Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: stats",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1168,usability,Error,Error,1168,"done. Solving environment: ...working... done. # All requested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1222,usability,error,error,1222,"equested packages already installed. Collecting package metadata (current_repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): ...working... done. Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - scanpy. Current channels:. - https://conda.anaconda.org/conda-forge/linux-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/linux-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/linux-64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Error: one or more Python packages failed to install [error code 1]. ```. If I switch to the terminal and try `pip` or `conda` I get:. ```. pip install scanpy. ```. ```. Requirement already satisfied: scanpy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (1.4.5.post2). Requirement already satisfied: setuptools-scm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.3.3). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: statsmodels>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: legacy",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3724,usability,learn,learn,3724,"ib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: patsy in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-pa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:3854,usability,learn,learn,3854,"sundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.5.1). Requirement already satisfied: importlib-metadata>=0.7; python_version < ""3.8"" in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy)(1.1.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: seaborn in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.9.0). Requirement already satisfied: networkx in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.4). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: h5py!=2.10.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (2.9.0). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: numpy>=1.13.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (1.17.4). Requirement already satisfied: pytz>=2017.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2019.3). Requirement already satisfied: python-dateutil>=2.6.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from pandas>=0.21->scanpy) (2.8.1). Requirement already satisfied: pyparsing>=2.0.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (2.4.5). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from packaging->scanpy) (1.13.0). Requirement already satisfied: setuptools in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from legacy-api-wrap->scanpy) (42.0.2.post20191203). Requirement already satisfied: get-version>=2.0.4 in /home/tsundoku/a",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8122,usability,learn,learn,8122,s>=0.10.0rc2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.10.1). Requirement already satisfied: anndata>=0.6.22.post1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.6.22.post1). Requirement already satisfied: matplotlib==3.0.* in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.0.3). Requirement already satisfied: pandas>=0.21 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.25.3). Requirement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already sat,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:8610,usability,learn,learn,8610,"irement already satisfied: legacy-api-wrap in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.2). Requirement already satisfied: natsort in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (7.0.0). Requirement already satisfied: tables in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (3.6.1). Requirement already satisfied: joblib in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.14.0). Requirement already satisfied: umap-learn>=0.3.10 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.3.10). Requirement already satisfied: tqdm in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (4.40.0). Requirement already satisfied: scipy>=1.3 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (1.3.2). Requirement already satisfied: packaging in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (19.2). Requirement already satisfied: scikit-learn>=0.21.2 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from scanpy) (0.21.3). Requirement already satisfied: six in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.13.0). Requirement already satisfied: numpy>=1.4 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from patsy->scanpy) (1.17.4). Requirement already satisfied: llvmlite>=0.30.0dev0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from numba>=0.41.0->scanpy) (0.30.0). Requirement already satisfied: decorator>=4.3.0 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from networkx->scanpy) (4.4.1). Requirement already satisfied: zipp>=0.5 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from importlib-metadata>=0.7; python_version < ""3.8""->scanpy) (0.6.0). Requirement already satisfied: kiwisolver>=1.0.1 in /home/tsundoku/anaconda3/lib/python3.7/site-packages (from matplotlib==3.0.*->scanpy) (1.1.0). Requirement already satisfied: python-dateutil>=2.1 in /ho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11783,usability,learn,learn,11783,"install -c bioconda scanpy. ```. ```. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:11820,usability,learn,learn,11820," Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package tqdm conflicts for:. scanpy -> tqdm. Package setuptools conflicts for:. scanpy -> setuptools. Package patsy conflicts for:. scanpy -> patsy. Package seaborn conflicts for:. scanpy -> seaborn. Package pytables conflicts for:. scanpy -> pytables. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package networkx conflicts for:. scanpy -> networkx. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package joblib conflicts for:. scanpy -> joblib. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package libstdcxx-ng conflicts for:. python=3.7 -> libstdcxx-ng[version='>=7.2.0|>=7.3.0']. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Pa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13536,usability,learn,learn,13536,"ncurses[version='>=6.1,<7.0a0']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:13575,usability,learn,learn,13575,"e sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ld_impl_linux-64 conflicts for:. python=3.7 -> ld_impl_linux-64. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package louvain conflicts for:. scanpy -> louvain. Package pip conflicts for:. python=3.7 -> pip. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:14107,usability,help,help,14107,"canpy -> h5py!=2.10.0. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package libgcc-ng conflicts for:. python=3.7 -> libgcc-ng[version='>=7.2.0|>=7.3.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package natsort conflicts for:. scanpy -> natsort. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.0.2p,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. ```. I can import `scanpy` by opening Python 3 interpreter from the terminal by running `python`. ```. Python 3.7.5 (default, Oct 25 2019, 15:51:11). [GCC 7.3.0] :: Anaconda, Inc. on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import scanpy as sc # this works. ```. Check the `PATH`:. ```. ['', '/home/tsundoku/anaconda3/lib/python37.zip', '/home/tsundoku/anaconda3/lib/python3.7', '/home/tsundoku/anaconda3/lib/python3.7/lib-dynload', '/home/tsundoku/.local/lib/python3.7/site-packages', '/home/tsundoku/anaconda3/lib/python3.7/site-packages']. ```. But it fails to load from `reticulate`. ```. library(reticulate). repl_python(). ```. ```. import pandas as pd. import scanpy as sc. ```. ```. ModuleNotFoundError: No module named 'scanpy'. ```. Check the `PATH`:. ```. import sys. sys.path. ```. ```. ['', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/bin', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python36.zip', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6', '/home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/python3.6/lib-dynload', '/home/tsundoku/.local/share/r-miniconda/envs/r-",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:407,deployability,version,version,407,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:282,energy efficiency,load,load,282,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1065,energy efficiency,load,loaded,1065,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:407,integrability,version,version,407,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:435,interoperability,Platform,Platform,435,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:621,interoperability,share,share,621,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:407,modifiability,version,version,407,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:948,modifiability,pac,packages,948,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1033,modifiability,pac,packages,1033,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:282,performance,load,load,282,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1065,performance,load,loaded,1065,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:359,security,session,sessionInfo,359,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:91,usability,document,documentation,91,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:312,usability,close,close,312,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:385,usability,help,helps,385,"There is a function called `reticulate::install_miniconda()` which [isn't mentioned in the documentation ](https://rstudio.github.io/reticulate/articles/python_packages.html) that solves this problem. ```. install_miniconda(""scanpy""). repl_python(). ```. ```. import scanpy as sc # load successfully now. exit # close the Python interpreter . ```. Here's my `sessionInfo()` in-case it helps anyone:. ```. R version 3.6.2 (2019-12-12). Platform: x86_64-pc-linux-gnu (64-bit). Running under: Ubuntu 18.04.3 LTS. Matrix products: default. BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1. LAPACK: /home/tsundoku/.local/share/r-miniconda/envs/r-reticulate/lib/libmkl_rt.so. locale:. [1] LC_CTYPE=en_CA.UTF-8 LC_NUMERIC=C LC_TIME=en_CA.UTF-8 LC_COLLATE=en_CA.UTF-8 LC_MONETARY=en_CA.UTF-8 . [6] LC_MESSAGES=en_CA.UTF-8 LC_PAPER=en_CA.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C . [11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C . attached base packages:. [1] stats graphics grDevices utils datasets methods base . other attached packages:. [1] reticulate_1.14. loaded via a namespace (and not attached):. [1] BiocManager_1.30.10 compiler_3.6.2 tools_3.6.2 rappdirs_0.3.1 Rcpp_1.0.3 jsonlite_1.6 packrat_0.5.0 . [8] png_0.1-7 . ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:73,deployability,instal,install,73,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:110,deployability,instal,installed,110,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:315,deployability,instal,install,315,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:423,deployability,fail,failed,423,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:508,deployability,fail,failed,508,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:667,deployability,fail,failed,667,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:861,deployability,fail,failed,861,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1067,deployability,version,version,1067,"o install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1142,deployability,version,version,1142," other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Pack",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1308,deployability,version,version,1308,"da install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels c",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1379,deployability,version,version,1379,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1568,deployability,version,version,1568,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1731,deployability,version,version,1731,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1809,deployability,version,version,1809,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2198,deployability,version,version,2198,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2268,deployability,version,version,2268,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2349,deployability,version,version,2349,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1067,integrability,version,version,1067,"o install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1142,integrability,version,version,1142," other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Pack",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1308,integrability,version,version,1308,"da install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels c",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1379,integrability,version,version,1379,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1568,integrability,version,version,1568,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1731,integrability,version,version,1731,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1809,integrability,version,version,1809,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2198,integrability,version,version,2198,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2268,integrability,version,version,2268,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2349,integrability,version,version,2349,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:761,interoperability,conflict,conflicts,761,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:784,interoperability,incompatib,incompatible,784,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:903,interoperability,specif,specifications,903,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:935,interoperability,incompatib,incompatible,935,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:983,interoperability,conflict,conflicts,983,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1034,interoperability,conflict,conflicts,1034,"machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqd",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1105,interoperability,conflict,conflicts,1105,"installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort con",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1175,interoperability,conflict,conflicts,1175,"omputer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. sca",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1229,interoperability,conflict,conflicts,1229," Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scip",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1276,interoperability,conflict,conflicts,1276," having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1345,interoperability,conflict,conflicts,1345,"ing package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[v",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1428,interoperability,conflict,conflicts,1428,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1482,interoperability,conflict,conflicts,1482,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1535,interoperability,conflict,conflicts,1535,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1613,interoperability,conflict,conflicts,1613,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1686,interoperability,conflict,conflicts,1686,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1770,interoperability,conflict,conflicts,1770,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1847,interoperability,conflict,conflicts,1847,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1905,interoperability,conflict,conflicts,1905,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1962,interoperability,conflict,conflicts,1962,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2010,interoperability,conflict,conflicts,2010,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2057,interoperability,conflict,conflicts,2057,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2107,interoperability,conflict,conflicts,2107,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2161,interoperability,conflict,conflicts,2161,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2236,interoperability,conflict,conflicts,2236,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2311,interoperability,conflict,conflicts,2311,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:354,modifiability,pac,package,354,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:606,modifiability,pac,package,606,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:797,modifiability,pac,packages,797,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:966,modifiability,Pac,Package,966,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1019,modifiability,Pac,Package,1019,"roblem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1067,modifiability,version,version,1067,"o install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1086,modifiability,Pac,Package,1086,"conda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1142,modifiability,version,version,1142," other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Pack",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1162,modifiability,Pac,Package,1162,"nes (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib confl",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1215,modifiability,Pac,Package,1215,"st three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2'",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1262,modifiability,Pac,Package,1262,"n my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scip",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1308,modifiability,version,version,1308,"da install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels c",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1329,modifiability,Pac,Package,1329,"a scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1379,modifiability,version,version,1379,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1412,modifiability,Pac,Package,1412,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1463,modifiability,Pac,Package,1463,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1520,modifiability,Pac,Package,1520,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1568,modifiability,version,version,1568,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1586,modifiability,Pac,Package,1586,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1659,modifiability,Pac,Package,1659,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1731,modifiability,version,version,1731,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1749,modifiability,Pac,Package,1749,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1809,modifiability,version,version,1809,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1830,modifiability,Pac,Package,1830,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1883,modifiability,Pac,Package,1883,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1946,modifiability,Pac,Package,1946,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1997,modifiability,Pac,Package,1997,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2042,modifiability,Pac,Package,2042,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2091,modifiability,Pac,Package,2091,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2142,modifiability,Pac,Package,2142,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2198,modifiability,version,version,2198,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2222,modifiability,Pac,Package,2222,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2268,modifiability,version,version,2268,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2291,modifiability,Pac,Package,2291,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2349,modifiability,version,version,2349,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1838,performance,network,networkx,1838,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1873,performance,network,networkx,1873,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:423,reliability,fail,failed,423,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:508,reliability,fail,failed,508,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:667,reliability,fail,failed,667,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:861,reliability,fail,failed,861,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:249,security,ident,identical,249,"Having the exact same problem. Windows machine, win10, 64 bit. Trying to install from miniconda. FWIW, I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Pac",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1838,security,network,networkx,1838,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1873,security,network,networkx,1873,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1099,usability,learn,learn,1099," I have installed scanpy successfully on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package nat",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1136,usability,learn,learn,1136," on two other windows machines (my home computer and my work computer) in the last three weeks. Now following identical steps on my laptop and having this tissue. . ```. conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsor",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1764,usability,learn,learn,1764,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1803,usability,learn,learn,1803,"ent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: /. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package pytables conflicts for:. scanpy -> pytables. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package patsy conflicts for:. scanpy -> patsy. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package seaborn conflicts for:. scanpy -> seaborn. Package setuptools conflicts for:. scanpy -> setuptools. Package python conflicts for:. scanpy -> python[version='>=3.6']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package networkx conflicts for:. scanpy -> networkx. Package python-igraph conflicts for:. scanpy -> python-igraph. Package louvain conflicts for:. scanpy -> louvain. Package tqdm conflicts for:. scanpy -> tqdm. Package joblib conflicts for:. scanpy -> joblib. Package natsort conflicts for:. scanpy -> natsort. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:174,deployability,version,version,174,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:244,deployability,version,version,244,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:323,deployability,version,version,323,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:468,deployability,version,version,468,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:648,deployability,version,version,648,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:842,deployability,version,version,842,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1033,deployability,version,version,1033,": The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1107,deployability,version,version,1107,"er:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvai",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1360,deployability,version,version,1360,"s for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1496,deployability,version,version,1496,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1581,deployability,version,version,1581,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1653,deployability,version,version,1653,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1791,deployability,version,version,1791,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1889,deployability,version,version,1889,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2235,deployability,version,version,2235,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2300,deployability,version,version,2300,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2365,deployability,version,version,2365,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2463,deployability,version,version,2463,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:174,integrability,version,version,174,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:244,integrability,version,version,244,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:323,integrability,version,version,323,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:468,integrability,version,version,468,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:648,integrability,version,version,648,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:842,integrability,version,version,842,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1033,integrability,version,version,1033,": The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1107,integrability,version,version,1107,"er:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvai",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1360,integrability,version,version,1360,"s for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1496,integrability,version,version,1496,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1581,integrability,version,version,1581,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1653,integrability,version,version,1653,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1791,integrability,version,version,1791,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1889,integrability,version,version,1889,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2235,integrability,version,version,2235,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2300,integrability,version,version,2300,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2365,integrability,version,version,2365,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2463,integrability,version,version,2463,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:53,interoperability,specif,specifications,53,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:85,interoperability,incompatib,incompatible,85,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:136,interoperability,conflict,conflicts,136,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:212,interoperability,conflict,conflicts,212,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:286,interoperability,conflict,conflicts,286,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:356,interoperability,conflict,conflicts,356,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:423,interoperability,conflict,conflicts,423,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:498,interoperability,conflict,conflicts,498,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:555,interoperability,conflict,conflicts,555,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:611,interoperability,conflict,conflicts,611,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:804,interoperability,conflict,conflicts,804,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:998,interoperability,conflict,conflicts,998,"e issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> n",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1074,interoperability,conflict,conflicts,1074,"to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1176,interoperability,conflict,conflicts,1176,"='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-meta",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1225,interoperability,conflict,conflicts,1225,"anpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1271,interoperability,conflict,conflicts,1271,"map-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflict",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1321,interoperability,conflict,conflicts,1321,"sion='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1408,interoperability,conflict,conflicts,1408,"_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Packag",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1462,interoperability,conflict,conflicts,1462,"[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[vers",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1544,interoperability,conflict,conflicts,1544,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1616,interoperability,conflict,conflicts,1616,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1702,interoperability,conflict,conflicts,1702,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1753,interoperability,conflict,conflicts,1753,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1850,interoperability,conflict,conflicts,1850,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1925,interoperability,conflict,conflicts,1925,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1976,interoperability,conflict,conflicts,1976,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2028,interoperability,conflict,conflicts,2028,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2079,interoperability,conflict,conflicts,2079,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2141,interoperability,conflict,conflicts,2141,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2202,interoperability,conflict,conflicts,2202,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2268,interoperability,conflict,conflicts,2268,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2332,interoperability,conflict,conflicts,2332,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2426,interoperability,conflict,conflicts,2426,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:116,modifiability,Pac,Package,116,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:174,modifiability,version,version,174,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:198,modifiability,Pac,Package,198,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:244,modifiability,version,version,244,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:267,modifiability,Pac,Package,267,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:323,modifiability,version,version,323,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:343,modifiability,Pac,Package,343,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:396,modifiability,Pac,Package,396,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:468,modifiability,version,version,468,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:486,modifiability,Pac,Package,486,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:533,modifiability,Pac,Package,533,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:596,modifiability,Pac,Package,596,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:648,modifiability,version,version,648,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:788,modifiability,Pac,Package,788,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:842,modifiability,version,version,842,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:985,modifiability,Pac,Package,985,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1033,modifiability,version,version,1033,": The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1063,modifiability,Pac,Package,1063," were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Pack",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1107,modifiability,version,version,1107,"er:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvai",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1159,modifiability,Pac,Package,1159,"tatsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1212,modifiability,Pac,Package,1212,"licts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1257,modifiability,Pac,Package,1257,".3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1304,modifiability,Pac,Package,1304," -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1360,modifiability,version,version,1360,"s for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1389,modifiability,Pac,Package,1389,"0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1446,modifiability,Pac,Package,1446,"mportlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1496,modifiability,version,version,1496,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1529,modifiability,Pac,Package,1529,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1581,modifiability,version,version,1581,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1601,modifiability,Pac,Package,1601,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1653,modifiability,version,version,1653,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1686,modifiability,Pac,Package,1686,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1737,modifiability,Pac,Package,1737,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1791,modifiability,version,version,1791,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1829,modifiability,Pac,Package,1829,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1889,modifiability,version,version,1889,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1910,modifiability,Pac,Package,1910,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1959,modifiability,Pac,Package,1959,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2012,modifiability,Pac,Package,2012,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2063,modifiability,Pac,Package,2063,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2114,modifiability,Pac,Package,2114,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2187,modifiability,Pac,Package,2187,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2235,modifiability,version,version,2235,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2254,modifiability,Pac,Package,2254,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2300,modifiability,version,version,2300,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2321,modifiability,Pac,Package,2321,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2365,modifiability,version,version,2365,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2407,modifiability,Pac,Package,2407,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2463,modifiability,version,version,2463,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1967,performance,network,networkx,1967,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2002,performance,network,networkx,2002,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1967,security,network,networkx,1967,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2002,security,network,networkx,2002,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:280,usability,learn,learn,280,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:317,usability,learn,learn,317,"Same issue: . ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1844,usability,learn,learn,1844,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1883,usability,learn,learn,1883,"age pip conflicts for:. python=3.6 -> pip. Package python-igraph conflicts for:. scanpy -> python-igraph. Package sqlite conflicts for:. python=3.6 -> sqlite[version='>=3.20.1,<4.0a0|>=3.22.0,<4.0a0|>=3.23.1,<4.0a0|>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.26.0,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package openssl conflicts for:. python=3.6 -> openssl[version='1.0.*|1.0.*,>=1.0.2l,<1.0.3a|>=1.0.2m,<1.0.3a|>=1.0.2n,<1.0.3a|>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package zlib conflicts for:. python=3.6 -> zlib[version='>=1.2.11,<1.3.0a0']. Package tk conflicts for:. python=3.6 -> tk[version='8.6.*|>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package pytables conflicts for:. scanpy -> pytables. Package tqdm conflicts for:. scanpy -> tqdm. Package patsy conflicts for:. scanpy -> patsy. Package readline conflicts for:. python=3.6 -> readline[version='7.*|>=7.0,<8.0a0']. Package setuptools conflicts for:. scanpy -> setuptools. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package libcxx conflicts for:. python=3.6 -> libcxx[version='>=4.0.1']. Package libffi conflicts for:. python=3.6 -> libffi[version='3.2.*|>=3.2.1,<4.0a0']. Package seaborn conflicts for:. scanpy -> seaborn. Package ncurses conflicts for:. python=3.6 -> ncurses[version='>=6.0,<7.0a0|>=6.1,<7.0a0']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package xz conflicts for:. python=3.6 -> xz[version='>=5.2.3,<6.0a0|>=5.2.4,<6.0a0']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:216,deployability,instal,install,216,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:228,modifiability,pac,package,228,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:305,modifiability,pac,packrat,305,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:342,modifiability,pac,packrat,342,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:174,usability,help,helps,174,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:371,usability,user,user-images,371,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:492,usability,user,user-images,492,"I was recently directed to the [RStudio tutorial for setting up Python/R with {reticulate}](https://t.co/DjbnfZmjQn?amp=1). After this it worked successfully for me; hope it helps. First, source the `virtualenv` and install the package only to the directory/project your working on ([similar concept to `{packrat}`](https://rstudio.github.io/packrat/)). ![image](https://user-images.githubusercontent.com/5749465/73144449-d0663f80-4073-11ea-85d2-2277fb049342.png). *Voila!*. ![image](https://user-images.githubusercontent.com/5749465/73144482-20450680-4074-11ea-9374-6dac81968f89.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:68,deployability,instal,install,68,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:176,deployability,fail,failed,176,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:261,deployability,fail,failed,261,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:420,deployability,fail,failed,420,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:615,deployability,fail,failed,615,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:942,deployability,version,version,942,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1008,deployability,version,version,1008,"ame problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1090,deployability,version,version,1090,". Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package pytho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1170,deployability,version,version,1170,": failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1247,deployability,version,version,1247,"ironment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1329,deployability,version,version,1329,"podata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. py",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1399,deployability,version,version,1399,"ing environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1476,deployability,version,version,1476,"ve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. pyt",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1728,deployability,version,version,1728,"sort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[ve",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1801,deployability,version,version,1801,"canpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1874,deployability,version,version,1874,"importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflict",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2061,deployability,version,version,2061,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2353,deployability,version,version,2353,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2494,deployability,version,version,2494,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2584,deployability,version,version,2584,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2659,deployability,version,version,2659,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2730,deployability,version,version,2730,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2908,deployability,version,version,2908,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:942,integrability,version,version,942,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1008,integrability,version,version,1008,"ame problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1090,integrability,version,version,1090,". Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package pytho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1170,integrability,version,version,1170,": failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1247,integrability,version,version,1247,"ironment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1329,integrability,version,version,1329,"podata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. py",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1399,integrability,version,version,1399,"ing environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1476,integrability,version,version,1476,"ve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. pyt",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1728,integrability,version,version,1728,"sort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[ve",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1801,integrability,version,version,1801,"canpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1874,integrability,version,version,1874,"importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflict",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2061,integrability,version,version,2061,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2353,integrability,version,version,2353,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2494,integrability,version,version,2494,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2584,integrability,version,version,2584,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2659,integrability,version,version,2659,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2730,integrability,version,version,2730,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2908,integrability,version,version,2908,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:515,interoperability,conflict,conflicts,515,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:538,interoperability,incompatib,incompatible,538,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:658,interoperability,specif,specifications,658,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:690,interoperability,incompatib,incompatible,690,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:737,interoperability,conflict,conflicts,737,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:788,interoperability,conflict,conflicts,788,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:837,interoperability,conflict,conflicts,837,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:897,interoperability,conflict,conflicts,897,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:973,interoperability,conflict,conflicts,973,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1053,interoperability,conflict,conflicts,1053,". $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-lea",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1131,interoperability,conflict,conflicts,1131,"odata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1210,interoperability,conflict,conflicts,1210,"ing with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib con",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1291,interoperability,conflict,conflicts,1291,"epodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> network",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1367,interoperability,conflict,conflicts,1367,"ata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1437,interoperability,conflict,conflicts,1437,"ozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1528,interoperability,conflict,conflicts,1528," for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1593,interoperability,conflict,conflicts,1593,"CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1644,interoperability,conflict,conflicts,1644,"ollowing specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1691,interoperability,conflict,conflicts,1691,"atible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite con",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1769,interoperability,conflict,conflicts,1769,"ckage louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1840,interoperability,conflict,conflicts,1840,"s for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1919,interoperability,conflict,conflicts,1919,"mportlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1970,interoperability,conflict,conflicts,1970,"nflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy ->",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2024,interoperability,conflict,conflicts,2024,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2103,interoperability,conflict,conflicts,2103,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2157,interoperability,conflict,conflicts,2157,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2212,interoperability,conflict,conflicts,2212,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2263,interoperability,conflict,conflicts,2263,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2315,interoperability,conflict,conflicts,2315,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2461,interoperability,conflict,conflicts,2461,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2551,interoperability,conflict,conflicts,2551,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2626,interoperability,conflict,conflicts,2626,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2693,interoperability,conflict,conflicts,2693,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2870,interoperability,conflict,conflicts,2870,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2950,interoperability,conflict,conflicts,2950,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:107,modifiability,pac,package,107,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:359,modifiability,pac,package,359,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:551,modifiability,pac,packages,551,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:721,modifiability,Pac,Package,721,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:772,modifiability,Pac,Package,772,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:823,modifiability,Pac,Package,823,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:870,modifiability,Pac,Package,870,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:942,modifiability,version,version,942,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:960,modifiability,Pac,Package,960,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1008,modifiability,version,version,1008,"ame problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1038,modifiability,Pac,Package,1038,"catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. sc",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1090,modifiability,version,version,1090,". Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package pytho",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1110,modifiability,Pac,Package,1110," metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts f",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1170,modifiability,version,version,1170,": failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. s",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1191,modifiability,Pac,Package,1191," frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1247,modifiability,version,version,1247,"ironment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Packa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1271,modifiability,Pac,Package,1271,"podata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts fo",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1329,modifiability,version,version,1329,"podata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. py",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1353,modifiability,Pac,Package,1353,"g package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[vers",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1399,modifiability,version,version,1399,"ing environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1420,modifiability,Pac,Package,1420,"ed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1476,modifiability,version,version,1476,"ve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. pyt",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1501,modifiability,Pac,Package,1501,"| . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1574,modifiability,Pac,Package,1574,"eral minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1631,modifiability,Pac,Package,1631,"leError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1676,modifiability,Pac,Package,1676,"und to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Pa",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1728,modifiability,version,version,1728,"sort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[ve",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1755,modifiability,Pac,Package,1755," -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1801,modifiability,version,version,1801,"canpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1824,modifiability,Pac,Package,1824,"ge patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1874,modifiability,version,version,1874,"importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflict",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1907,modifiability,Pac,Package,1907,". scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[ver",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1954,modifiability,Pac,Package,1954,". Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflict",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2005,modifiability,Pac,Package,2005,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2061,modifiability,version,version,2061,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2081,modifiability,Pac,Package,2081,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2144,modifiability,Pac,Package,2144,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2197,modifiability,Pac,Package,2197,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2246,modifiability,Pac,Package,2246,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2299,modifiability,Pac,Package,2299,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2353,modifiability,version,version,2353,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2450,modifiability,Pac,Package,2450,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2494,modifiability,version,version,2494,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2540,modifiability,Pac,Package,2540,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2584,modifiability,version,version,2584,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2611,modifiability,Pac,Package,2611,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2659,modifiability,version,version,2659,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2678,modifiability,Pac,Package,2678,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2730,modifiability,version,version,2730,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2854,modifiability,Pac,Package,2854,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2908,modifiability,version,version,2908,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2933,modifiability,Pac,Package,2933,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2254,performance,network,networkx,2254,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2289,performance,network,networkx,2289,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:176,reliability,fail,failed,176,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:261,reliability,fail,failed,261,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:420,reliability,fail,failed,420,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:615,reliability,fail,failed,615,"I have the same problem. I am using macOS catalina 10.15.2. $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seab",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2254,security,network,networkx,2254,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2289,security,network,networkx,2289,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1125,usability,learn,learn,1125,"rent_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy ->",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:1164,usability,learn,learn,1164,"ronment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: | . Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package natsort conflicts for:. scanpy -> natsort. Package louvain conflicts for:. scanpy -> louvain. Package patsy conflicts for:. scanpy -> patsy. Package importlib_metadata conflicts for:. scanpy -> importlib_metadata[version='>=0.7']. Package zlib conflicts for:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts ",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2018,usability,learn,learn,2018,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2055,usability,learn,learn,2055,"r:. python=3.7 -> zlib[version='>=1.2.11,<1.3.0a0']. Package libcxx conflicts for:. python=3.7 -> libcxx[version='>=4.0.1']. Package scikit-learn conflicts for:. scanpy -> scikit-learn[version='>=0.21.2']. Package matplotlib conflicts for:. scanpy -> matplotlib[version='3.0.*|>=2.2']. Package statsmodels conflicts for:. scanpy -> statsmodels[version='>=0.10.0rc2']. Package numba conflicts for:. scanpy -> numba[version='>=0.41.0']. Package readline conflicts for:. python=3.7 -> readline[version='>=7.0,<8.0a0']. Package importlib-metadata conflicts for:. scanpy -> importlib-metadata. Package setuptools conflicts for:. scanpy -> setuptools. Package tqdm conflicts for:. scanpy -> tqdm. Package libffi conflicts for:. python=3.7 -> libffi[version='>=3.2.1,<4.0a0']. Package scipy conflicts for:. scanpy -> scipy[version='<1.3|>=1.3']. Package anndata conflicts for:. scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']. Package pip conflicts for:. python=3.7 -> pip. Package seaborn conflicts for:. scanpy -> seaborn. Package umap-learn conflicts for:. scanpy -> umap-learn[version='>=0.3.0']. Package python-igraph conflicts for:. scanpy -> python-igraph. Package h5py conflicts for:. scanpy -> h5py!=2.10.0. Package joblib conflicts for:. scanpy -> joblib. Package networkx conflicts for:. scanpy -> networkx. Package openssl conflicts for:. python=3.7 -> openssl[version='>=1.0.2o,<1.0.3a|>=1.1.1a,<1.1.2a|>=1.1.1b,<1.1.2a|>=1.1.1c,<1.1.2a|>=1.1.1d,<1.1.2a']. Package tk conflicts for:. python=3.7 -> tk[version='>=8.6.7,<8.7.0a0|>=8.6.8,<8.7.0a0']. Package xz conflicts for:. python=3.7 -> xz[version='>=5.2.4,<6.0a0']. Package pandas conflicts for:. scanpy -> pandas[version='>=0.21']. Package sqlite conflicts for:. python=3.7 -> sqlite[version='>=3.24.0,<4.0a0|>=3.25.2,<4.0a0|>=3.25.3,<4.0a0|>=3.26.0,<4.0a0|>=3.27.2,<4.0a0|>=3.29.0,<4.0a0|>=3.30.1,<4.0a0']. Package ncurses conflicts for:. python=3.7 -> ncurses[version='>=6.1,<7.0a0']. Package pytables conflicts for:. scanpy -> pytables.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:72,deployability,instal,install,72,Facing the same issue! Any guidance would be appreciated. Was trying to install using Anaconda Navigator for Windows but i guess I will try the Miniconda route,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:154,integrability,rout,route,154,Facing the same issue! Any guidance would be appreciated. Was trying to install using Anaconda Navigator for Windows but i guess I will try the Miniconda route,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:27,usability,guidanc,guidance,27,Facing the same issue! Any guidance would be appreciated. Was trying to install using Anaconda Navigator for Windows but i guess I will try the Miniconda route,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:95,usability,Navigat,Navigator,95,Facing the same issue! Any guidance would be appreciated. Was trying to install using Anaconda Navigator for Windows but i guess I will try the Miniconda route,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:66,deployability,instal,install,66,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:189,deployability,fail,failed,189,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:274,deployability,fail,failed,274,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:433,deployability,fail,failed,433,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:627,deployability,fail,failed,627,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:742,deployability,instal,installation,742,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:817,deployability,version,version,817,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:817,integrability,version,version,817,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:527,interoperability,conflict,conflicts,527,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:550,interoperability,incompatib,incompatible,550,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:671,interoperability,specif,specifications,671,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:704,interoperability,incompatib,incompatible,704,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:779,interoperability,Specif,Specifications,779,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:120,modifiability,pac,package,120,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:372,modifiability,pac,package,372,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:563,modifiability,pac,packages,563,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:817,modifiability,version,version,817,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:189,reliability,fail,failed,189,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:274,reliability,fail,failed,274,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:433,reliability,fail,failed,433,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:627,reliability,fail,failed,627,"Have the same issue. Windows, Ubuntu for WSL, miniconda:. > conda install -c bioconda/label/cf201901 scanpy. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Solving environment: |. Found conflicts! Looking for incompatible packages. This can take several minutes. Press CTRL-C to abort. failed. > UnsatisfiableError: The following specifications were found. to be incompatible with the existing python installation in your environment:. > Specifications:. > - scanpy -> python[version='>=3.6,<3.7.0a0']. > Your python: python=3.7",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:312,deployability,instal,install,312,"I had the same issue, and it turns out setting up channels solves the problem as follows:. ```. conda config --add channels defaults. conda config --add channels bioconda. conda config --add channels conda-forge. ```. Ref: . https://bioconda.github.io/recipes/scanpy/README.html. https://bioconda.github.io/user/install.html#set-up-channels",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:307,usability,user,user,307,"I had the same issue, and it turns out setting up channels solves the problem as follows:. ```. conda config --add channels defaults. conda config --add channels bioconda. conda config --add channels conda-forge. ```. Ref: . https://bioconda.github.io/recipes/scanpy/README.html. https://bioconda.github.io/user/install.html#set-up-channels",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:371,deployability,instal,install,371,"Thank you! worked for me. > . > . > I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:366,usability,user,user,366,"Thank you! worked for me. > . > . > I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:360,deployability,instal,install,360,"Thanks, worked for me. > I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:355,usability,user,user,355,"Thanks, worked for me. > I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:86,deployability,instal,installed,86,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:572,deployability,instal,install,572,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:654,deployability,version,version,654,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:718,deployability,instal,install,718,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:70,integrability,Event,Eventually,70,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:654,integrability,version,version,654,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:654,modifiability,version,version,654,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:640,performance,time,time,640,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:2,usability,experien,experienced,2,"I experienced the same issue, but none of fixes proposed here worked. Eventually I re-installed Anaconda, immediately set up the channels, and made a new environment:. ```. conda config --add channels default. conda config --add channels bioconda. conda config --add channels bioconda. #create a new environment. conda create --name <environment name>. #activate your environment . conda activate <environment name>. ```. Now that I had a new environment (which is easier to work with if you're working on multiple projects; easy switch between environments!), I tried to install scanpy again. Did not work, but then I tried it again, this time with the version number of Python, and that did the trick for me! `conda install -c bioconda scanpy python=3.7`",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:81,deployability,instal,install,81,I am not sure what --add does or -c . The following is probably a cleaner way to install. It should not have any unforeseen 'channels' related side effects. . This worked for me on MacOS Catalina. ```. $ conda create --name SCA python=3.8.2. (base) $ conda activate SCA. (SCA) $ conda install scanpy --channel conda-forge --channel bioconda. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:285,deployability,instal,install,285,I am not sure what --add does or -c . The following is probably a cleaner way to install. It should not have any unforeseen 'channels' related side effects. . This worked for me on MacOS Catalina. ```. $ conda create --name SCA python=3.8.2. (base) $ conda activate SCA. (SCA) $ conda install scanpy --channel conda-forge --channel bioconda. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:25,reliability,doe,does,25,I am not sure what --add does or -c . The following is probably a cleaner way to install. It should not have any unforeseen 'channels' related side effects. . This worked for me on MacOS Catalina. ```. $ conda create --name SCA python=3.8.2. (base) $ conda activate SCA. (SCA) $ conda install scanpy --channel conda-forge --channel bioconda. ```,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:381,deployability,instal,install,381,"This worked for me as well. Amazing thanks! > I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:376,usability,user,user,376,"This worked for me as well. Amazing thanks! > I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:83,deployability,instal,install,83,> I am not sure what --add does or -c . The following is probably a cleaner way to install. It should not have any unforeseen 'channels' related side effects. > . > This worked for me on MacOS Catalina. > . > ```. > $ conda create --name SCA python=3.8.2. > (base) $ conda activate SCA. > (SCA) $ conda install scanpy --channel conda-forge --channel bioconda. > ```. That's the only way it worked for me. Thanks! Without creating a virtualenv it just did not move forward.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:303,deployability,instal,install,303,> I am not sure what --add does or -c . The following is probably a cleaner way to install. It should not have any unforeseen 'channels' related side effects. > . > This worked for me on MacOS Catalina. > . > ```. > $ conda create --name SCA python=3.8.2. > (base) $ conda activate SCA. > (SCA) $ conda install scanpy --channel conda-forge --channel bioconda. > ```. That's the only way it worked for me. Thanks! Without creating a virtualenv it just did not move forward.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:27,reliability,doe,does,27,> I am not sure what --add does or -c . The following is probably a cleaner way to install. It should not have any unforeseen 'channels' related side effects. > . > This worked for me on MacOS Catalina. > . > ```. > $ conda create --name SCA python=3.8.2. > (base) $ conda activate SCA. > (SCA) $ conda install scanpy --channel conda-forge --channel bioconda. > ```. That's the only way it worked for me. Thanks! Without creating a virtualenv it just did not move forward.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:52,usability,help,help,52,"This solution worked for me as well, thanks for the help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:0,deployability,upgrad,upgrade,0,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:52,deployability,upgrad,upgrade,52,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:66,deployability,instal,install,66,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:0,modifiability,upgrad,upgrade,0,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:52,modifiability,upgrad,upgrade,52,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:48,security,apt,apt,48,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:33,usability,command,command,33,upgrade your kali linux with the command . sudo apt upgrade. pip3 install scanpy,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:337,deployability,instal,install,337,"> I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels. Thanks, this also worked for me!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/990:332,usability,user,user,332,"> I had the same issue, and it turns out setting up channels solves the problem as follows:. > . > ```. > conda config --add channels defaults. > conda config --add channels bioconda. > conda config --add channels conda-forge. > ```. > . > Ref:. > https://bioconda.github.io/recipes/scanpy/README.html. > https://bioconda.github.io/user/install.html#set-up-channels. Thanks, this also worked for me!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990
https://github.com/scverse/scanpy/issues/991:95,deployability,releas,release,95,"Just to clarify, are you referring to 3 plots in the middle (PCA loading plots)? In new scanpy release, we render both positive and negative genes.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/991
https://github.com/scverse/scanpy/issues/991:65,energy efficiency,load,loading,65,"Just to clarify, are you referring to 3 plots in the middle (PCA loading plots)? In new scanpy release, we render both positive and negative genes.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/991
https://github.com/scverse/scanpy/issues/991:65,performance,load,loading,65,"Just to clarify, are you referring to 3 plots in the middle (PCA loading plots)? In new scanpy release, we render both positive and negative genes.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/991
https://github.com/scverse/scanpy/issues/991:104,deployability,version,versions,104,"@aopisco, I'm having some trouble reproducing your plots. Could you show us some more details (software versions mainly) about your environment?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/991
https://github.com/scverse/scanpy/issues/991:104,integrability,version,versions,104,"@aopisco, I'm having some trouble reproducing your plots. Could you show us some more details (software versions mainly) about your environment?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/991
https://github.com/scverse/scanpy/issues/991:104,modifiability,version,versions,104,"@aopisco, I'm having some trouble reproducing your plots. Could you show us some more details (software versions mainly) about your environment?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/991
https://github.com/scverse/scanpy/issues/992:51,integrability,batch,batch,51,"Would this be ""genes where minimum counts in every batch is greater than `min_counts`""?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:51,performance,batch,batch,51,"Would this be ""genes where minimum counts in every batch is greater than `min_counts`""?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:27,usability,minim,minimum,27,"Would this be ""genes where minimum counts in every batch is greater than `min_counts`""?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:117,integrability,batch,batch,117,"Yes! I can't recall exactly but I think now what can happen is that after `filter_genes` and hvg selection using the batch key, you might end up with genes that have 0 counts in a particular batch, especially if picking the top G genes in hvg selection.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:191,integrability,batch,batch,191,"Yes! I can't recall exactly but I think now what can happen is that after `filter_genes` and hvg selection using the batch key, you might end up with genes that have 0 counts in a particular batch, especially if picking the top G genes in hvg selection.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:117,performance,batch,batch,117,"Yes! I can't recall exactly but I think now what can happen is that after `filter_genes` and hvg selection using the batch key, you might end up with genes that have 0 counts in a particular batch, especially if picking the top G genes in hvg selection.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:191,performance,batch,batch,191,"Yes! I can't recall exactly but I think now what can happen is that after `filter_genes` and hvg selection using the batch key, you might end up with genes that have 0 counts in a particular batch, especially if picking the top G genes in hvg selection.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/992:71,security,sign,signature,71,I've started working on this. I was wondering if it's ok to change the signature of filter_genes so that it only accepts and returns anndata objects like hvg method?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/992
https://github.com/scverse/scanpy/issues/993:163,usability,document,documentation,163,"@LuckyMD @gokceneraslan, I think would be nice to have. What do you think? I think it would be fine that it works on counts as long as that's very explicit in the documentation.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:86,deployability,scale,scaled,86,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:30,energy efficiency,current,currently,30,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:86,energy efficiency,scale,scaled,86,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:86,modifiability,scal,scaled,86,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:86,performance,scale,scaled,86,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:192,security,intercept,intercept,192,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:93,testability,regress,regressed,93,"Agreed! . On another note, we currently lack a method for HVG selection that works on scaled/regressed out data. Could rewrite `regress_out` to not just output the residuals, but also add the intercept again.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:48,deployability,updat,updated,48,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:541,deployability,contain,contains,541,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:223,energy efficiency,adapt,adapted,223,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:1794,energy efficiency,power,power,1794," = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_norm_gene_vars >= (adata.X.shape[1] - n_top_genes), axis=0. ). df = pd.DataFrame(index=np.array(adata.var_names)). df[""highly_variable_nbatches""] = num_batches_high_var. df[""highly_variable_median_rank""] = median_ranked. df[""highly_variable_median_variance""] = median_norm_gene_vars. df.sort",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:204,integrability,batch,batch,204,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:223,integrability,adapt,adapted,223,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:550,integrability,batch,batch,550,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:582,integrability,batch,batch,582,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:820,integrability,batch,batch,820,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:1504,integrability,batch,batch,1504," batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_n",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:3126,integrability,batch,batches,3126,"(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_norm_gene_vars >= (adata.X.shape[1] - n_top_genes), axis=0. ). df = pd.DataFrame(index=np.array(adata.var_names)). df[""highly_variable_nbatches""] = num_batches_high_var. df[""highly_variable_median_rank""] = median_ranked. df[""highly_variable_median_variance""] = median_norm_gene_vars. df.sort_values(. [""highly_variable_nbatches"", ""highly_variable_median_rank""],. ascending=False,. na_position=""last"",. inplace=True,. ). df[""highly_variable""] = False. df.loc[:n_top_genes, ""highly_variable""] = True. df = df.loc[adata.var_names]. adata.var[""highly_variable""] = df[""highly_variable""].values. if batch_correction is True:. batches = adata.obs[batch_key].cat.categories. adata.var[""highly_variable_nbatches""] = df[""highly_variable_nbatches""].values. adata.var[""highly_variable_intersection""] = df[. ""highly_variable_nbatches"". ] == len(batches). adata.var[""highly_variable_median_rank""] = df[""highly_variable_median_rank""].values. adata.var[""highly_variable_median_variance""] = df[. ""highly_variable_median_variance"". ].values. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:3338,integrability,batch,batches,3338,"(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_norm_gene_vars >= (adata.X.shape[1] - n_top_genes), axis=0. ). df = pd.DataFrame(index=np.array(adata.var_names)). df[""highly_variable_nbatches""] = num_batches_high_var. df[""highly_variable_median_rank""] = median_ranked. df[""highly_variable_median_variance""] = median_norm_gene_vars. df.sort_values(. [""highly_variable_nbatches"", ""highly_variable_median_rank""],. ascending=False,. na_position=""last"",. inplace=True,. ). df[""highly_variable""] = False. df.loc[:n_top_genes, ""highly_variable""] = True. df = df.loc[adata.var_names]. adata.var[""highly_variable""] = df[""highly_variable""].values. if batch_correction is True:. batches = adata.obs[batch_key].cat.categories. adata.var[""highly_variable_nbatches""] = df[""highly_variable_nbatches""].values. adata.var[""highly_variable_intersection""] = df[. ""highly_variable_nbatches"". ] == len(batches). adata.var[""highly_variable_median_rank""] = df[""highly_variable_median_rank""].values. adata.var[""highly_variable_median_variance""] = df[. ""highly_variable_median_variance"". ].values. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:223,interoperability,adapt,adapted,223,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:223,modifiability,adapt,adapted,223,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:475,modifiability,variab,variable,475,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:204,performance,batch,batch,204,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:550,performance,batch,batch,550,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:582,performance,batch,batch,582,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:820,performance,batch,batch,820,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:1504,performance,batch,batch,1504," batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_n",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:3126,performance,batch,batches,3126,"(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_norm_gene_vars >= (adata.X.shape[1] - n_top_genes), axis=0. ). df = pd.DataFrame(index=np.array(adata.var_names)). df[""highly_variable_nbatches""] = num_batches_high_var. df[""highly_variable_median_rank""] = median_ranked. df[""highly_variable_median_variance""] = median_norm_gene_vars. df.sort_values(. [""highly_variable_nbatches"", ""highly_variable_median_rank""],. ascending=False,. na_position=""last"",. inplace=True,. ). df[""highly_variable""] = False. df.loc[:n_top_genes, ""highly_variable""] = True. df = df.loc[adata.var_names]. adata.var[""highly_variable""] = df[""highly_variable""].values. if batch_correction is True:. batches = adata.obs[batch_key].cat.categories. adata.var[""highly_variable_nbatches""] = df[""highly_variable_nbatches""].values. adata.var[""highly_variable_intersection""] = df[. ""highly_variable_nbatches"". ] == len(batches). adata.var[""highly_variable_median_rank""] = df[""highly_variable_median_rank""].values. adata.var[""highly_variable_median_variance""] = df[. ""highly_variable_median_variance"". ].values. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:3338,performance,batch,batches,3338,"(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_var = (1 / ((N - 1) * np.square(reg_std))) * (. (N * np.square(mean)). + squared_batch_counts_sum. - 2 * batch_counts_sum * mean. ). norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0). # argsort twice gives ranks. ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1). median_norm_gene_vars = np.median(norm_gene_vars, axis=0). median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(. ranked_norm_gene_vars >= (adata.X.shape[1] - n_top_genes), axis=0. ). df = pd.DataFrame(index=np.array(adata.var_names)). df[""highly_variable_nbatches""] = num_batches_high_var. df[""highly_variable_median_rank""] = median_ranked. df[""highly_variable_median_variance""] = median_norm_gene_vars. df.sort_values(. [""highly_variable_nbatches"", ""highly_variable_median_rank""],. ascending=False,. na_position=""last"",. inplace=True,. ). df[""highly_variable""] = False. df.loc[:n_top_genes, ""highly_variable""] = True. df = df.loc[adata.var_names]. adata.var[""highly_variable""] = df[""highly_variable""].values. if batch_correction is True:. batches = adata.obs[batch_key].cat.categories. adata.var[""highly_variable_nbatches""] = df[""highly_variable_nbatches""].values. adata.var[""highly_variable_intersection""] = df[. ""highly_variable_nbatches"". ] == len(batches). adata.var[""highly_variable_median_rank""] = df[""highly_variable_median_rank""].values. adata.var[""highly_variable_median_variance""] = df[. ""highly_variable_median_variance"". ].values. ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:48,safety,updat,updated,48,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:48,security,updat,updated,48,"I'm glad you all are considering adding this. I updated the implementation to work with sparse counts. . ```python. def seurat_v3_highly_variable_genes(. adata, n_top_genes: int = 4000, batch_key: str = ""batch"". ):. """""" An adapted implementation of the ""vst"" feature selection in Seurat v3. The major differences are that we use lowess insted of loess. For further details of the sparse arithmetic see https://www.overleaf.com/read/ckptrbgzzzpg. :param n_top_genes: How many variable genes to return. :param batch_key: key in adata.obs that contains batch info. If None, do not use batch info. """""". from scanpy.preprocessing._utils import _get_mean_var. from scanpy.preprocessing._distributed import materialize_as_ndarray. lowess = sm.nonparametric.lowess. if batch_key is None:. batch_correction = False. batch_key = ""batch"". adata.obs[batch_key] = pd.Categorical(np.zeros((adata.X.shape[0])).astype(int)). else:. batch_correction = True. norm_gene_vars = []. for b in np.unique(adata.obs[batch_key]):. mean, var = materialize_as_ndarray(. _get_mean_var(adata[adata.obs[batch_key] == b].X). ). not_const = var > 0. estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var[not_const]). x = np.log10(mean[not_const]). # output is sorted by x. v = lowess(y, x, frac=0.15). estimat_var[not_const][np.argsort(x)] = v[:, 1]. # get normalized variance. reg_std = np.sqrt(10 ** estimat_var). batch_counts = adata[adata.obs[batch_key] == b].X.copy(). # clip large values as in Seurat. N = np.sum(adata.obs[""batch""] == b). vmax = np.sqrt(N). clip_val = reg_std * vmax + mean. # could be something faster here. for g in range(batch_counts.shape[1]):. batch_counts[:, g][batch_counts[:, g] > vmax] = clip_val[g]. if sp_sparse.issparse(batch_counts):. squared_batch_counts_sum = np.array(batch_counts.power(2).sum(axis=0)). batch_counts_sum = np.array(batch_counts.sum(axis=0)). else:. squared_batch_counts_sum = np.square(batch_counts).sum(axis=0). batch_counts_sum = batch_counts.sum(axis=0). norm_gene_va",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,deployability,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,integrability,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:134,integrability,filter,filtering,134,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,interoperability,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,modifiability,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,reliability,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,security,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:81,testability,integr,integrate,81,"yes, I'll get to it next week. It didn't seem there was a straightforward way to integrate with the existing implementation given the filtering criterion is different, but I'll try my best.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:391,integrability,transform,transformed,391,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:537,integrability,transform,transformed,537,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:615,integrability,transform,transformed,615,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:391,interoperability,transform,transformed,391,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:537,interoperability,transform,transformed,537,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:615,interoperability,transform,transformed,615,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:602,performance,perform,perform,602,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:808,performance,perform,perform,808,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:602,usability,perform,perform,602,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:789,usability,clear,clear,789,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:808,usability,perform,perform,808,"@adamgayoso, I have a question regarding the implementation of Seurat v3 HVG and am not sure if this is the correct thread (it's probably not). My question is regarding the final step where the function reports, variances_norm or norm_gene_var. Based on the description here, https://www.overleaf.com/project/5e7e320564f7d4000175d082, the norm_gene_var function computes the variance of the transformed values assuming that the mean of the zscores is 0. I guess my question is, post clipping values to a maximum, I think the mean of the transformed values might not be 0 anymore so if you were just to perform, var(transformed values), it will not equal the same value as variances_norm equation for the sparse approach. Reading through the referenced paper provided (Stuart 2019) its not clear whether they perform the variance of zscores post clipping, or with the assumption that mean zscore is 0 preclipping. . If this is not relevant, please feel free to ask me to delete this comment.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:156,integrability,batch,batch,156,"@cchrysostomou Indeed the mean will no longer be zero, I was merely reimplementing exactly what was done in Seurat, and we have tests to show in the single batch case that we get the same exact genes. No need to delete this comment. . I suppose you can think of it as the second moment instead of the variance.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:156,performance,batch,batch,156,"@cchrysostomou Indeed the mean will no longer be zero, I was merely reimplementing exactly what was done in Seurat, and we have tests to show in the single batch case that we get the same exact genes. No need to delete this comment. . I suppose you can think of it as the second moment instead of the variance.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:128,safety,test,tests,128,"@cchrysostomou Indeed the mean will no longer be zero, I was merely reimplementing exactly what was done in Seurat, and we have tests to show in the single batch case that we get the same exact genes. No need to delete this comment. . I suppose you can think of it as the second moment instead of the variance.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/993:128,testability,test,tests,128,"@cchrysostomou Indeed the mean will no longer be zero, I was merely reimplementing exactly what was done in Seurat, and we have tests to show in the single batch case that we get the same exact genes. No need to delete this comment. . I suppose you can think of it as the second moment instead of the variance.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993
https://github.com/scverse/scanpy/issues/995:47,interoperability,distribut,distribution,47,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:147,modifiability,pac,package,147,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:23,safety,test,tests,23,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:71,safety,test,test,71,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:129,safety,test,tests,129,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:23,testability,test,tests,23,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:71,testability,test,test,71,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:129,testability,test,tests,129,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:181,usability,user,users,181,"On the other hand, the tests are in the source distribution, including test data, blowing up scanpy’s size to 6MB. I usually put tests next to the package and don’t deliver them to users. We should probably start doing that.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:129,availability,restor,restored,129,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:72,deployability,instal,installed,72,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:151,deployability,instal,install,151,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:24,modifiability,pac,package,24,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:175,modifiability,pac,package,175,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:60,reliability,doe,doesn,60,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/995:129,reliability,restor,restored,129,"Hmm, it’s in the source package and the wheel, but maybe it doesn’t get installed? Maybe `include_package_data=True` needs to be restored. How did you install from the source package anyway? Pip always uses wheels if possible, right?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/995
https://github.com/scverse/scanpy/issues/996:133,security,polic,policar,133,"I think it's a good idea to have a good tsne implementation, something that also respects sc.pp.neighbors. https://github.com/pavlin-policar/openTSNE might also worth a look.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/996
https://github.com/scverse/scanpy/issues/996:26,security,polic,policar,26,https://github.com/pavlin-policar/openTSNE/issues/102,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/996
https://github.com/scverse/scanpy/issues/998:102,availability,down,downgrade,102,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:43,deployability,version,version,43,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:85,deployability,version,version,85,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:166,deployability,version,version,166,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:43,integrability,version,version,43,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:85,integrability,version,version,85,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:166,integrability,version,version,166,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:43,modifiability,version,version,43,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:85,modifiability,version,version,85,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:166,modifiability,version,version,166,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:245,modifiability,paramet,parameters,245,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:116,safety,test,test,116,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:116,testability,test,test,116,"For me is working properly with an earlier version of scanpy and the same matplotlib version. Can you downgrade and test if the problem is only happening in the last version. Also, you can try to see if the problem is related to some matplotlib parameters by resetting them. ```PYTHON. matplotlib.rcdefaults(). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:138,testability,context,context,138,"Resetting the matplotlib rc seemed to fix the problem. Perhaps the issue has something to do with me importing seaborn and doing `sns.set(context=""notebook"", font_scale=1.15, style=""ticks"")`? . I'm not doing anything else special.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:87,deployability,patch,patch,87,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:190,deployability,patch,patch,190,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:63,modifiability,paramet,parameter,63,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:87,safety,patch,patch,87,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:190,safety,patch,patch,190,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:87,security,patch,patch,87,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/998:190,security,patch,patch,190,"Just want to leave a comment here that the relevant matplotlib parameter to change is ""patch.edgecolor"". The following should fix the missing grouping lines. ```python. matplotlib.rcParams['patch.edgecolor'] = 'black'. ```.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/998
https://github.com/scverse/scanpy/issues/999:132,integrability,filter,filtered,132,"Hi @shendong124,. My guess is that 'NCAM1' is in your `adata.raw.var_names` but not in `adata.var_names`. Could it be that you have filtered your `adata` after assigning `adata.raw`? When you plot gene expression, `adata.raw` is used to plot expression values by default.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/999
https://github.com/scverse/scanpy/issues/999:14,usability,help,helpful,14,This was very helpful! thank you!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/999
https://github.com/scverse/scanpy/pull/1003:33,deployability,version,version,33,"Thanks, I hadn't seen `packaging.version` before. Much better!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:33,integrability,version,version,33,"Thanks, I hadn't seen `packaging.version` before. Much better!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:23,modifiability,pac,packaging,23,"Thanks, I hadn't seen `packaging.version` before. Much better!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:33,modifiability,version,version,33,"Thanks, I hadn't seen `packaging.version` before. Much better!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:72,deployability,version,versions,72,"It’s a recent change, driven by the complex stuff people did to compare versions :wink:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:72,integrability,version,versions,72,"It’s a recent change, driven by the complex stuff people did to compare versions :wink:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:72,modifiability,version,versions,72,"It’s a recent change, driven by the complex stuff people did to compare versions :wink:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:36,safety,compl,complex,36,"It’s a recent change, driven by the complex stuff people did to compare versions :wink:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:36,security,compl,complex,36,"It’s a recent change, driven by the complex stuff people did to compare versions :wink:",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:52,deployability,fail,failing,52,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:52,reliability,fail,failing,52,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:42,safety,test,tests,42,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:146,safety,test,tests,146,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:42,testability,test,tests,42,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:146,testability,test,tests,146,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:9,usability,clear,clear,9,It's not clear to me why these `test_10x` tests are failing here and not on master -- there shouldn't be anything in this diff that affects those tests.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:28,deployability,fail,failing,28,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:94,deployability,releas,released,94,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:28,reliability,fail,failing,28,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:65,safety,test,tested,65,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:147,safety,test,tests,147,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:65,testability,test,tested,65,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1003:147,testability,test,tests,147,"You’re right: They would be failing on master if master had been tested since anndata 0.7 was released earlier today. We have to merge #989 to get tests to pass again before we can merge this. /edit: done, should work now",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003
https://github.com/scverse/scanpy/pull/1004:38,reliability,Doe,Does,38,. > @awnimo can you please test this? Does the plot look like you want it to? @flying-sheep The plots look the same as expected. Compared plots using methods from Scanpy and Harmony,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1004
https://github.com/scverse/scanpy/pull/1004:27,safety,test,test,27,. > @awnimo can you please test this? Does the plot look like you want it to? @flying-sheep The plots look the same as expected. Compared plots using methods from Scanpy and Harmony,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1004
https://github.com/scverse/scanpy/pull/1004:27,testability,test,test,27,. > @awnimo can you please test this? Does the plot look like you want it to? @flying-sheep The plots look the same as expected. Compared plots using methods from Scanpy and Harmony,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1004
https://github.com/scverse/scanpy/pull/1005:44,performance,time,time,44,"Huh, it’s commit 3064268, this is the first time I saw a commit ID prefix without letters.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1005
https://github.com/scverse/scanpy/issues/1009:176,availability,consist,consistently,176,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:496,availability,operat,operating,496,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:653,availability,fault,fault,653,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:327,deployability,version,version,327,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:403,deployability,version,version,403,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:653,energy efficiency,fault,fault,653,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:327,integrability,version,version,327,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:403,integrability,version,version,403,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:309,modifiability,pac,packages,309,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:327,modifiability,version,version,327,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:337,modifiability,Pac,Packages,337,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:403,modifiability,version,version,403,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:451,modifiability,variab,variability,451,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:33,performance,time,times,33,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:81,performance,time,time,81,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:194,performance,time,time,194,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:653,performance,fault,fault,653,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:653,reliability,fault,fault,653,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:653,safety,fault,fault,653,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:176,usability,consist,consistently,176,"I ran your code snippet multiple times on my end and I got the same results each time. Is this true for you as well? If both you and your partner can generate the same results consistently each time, then it is strange that your results disagree with each other... Some followup questions I have:. 1) Are ALL packages the same version? (Packages like Numba, scipy, sklearn, etc. should also be the same version to remove that as a potential source of variability). 2) Are you guys using the same operating system? . 3) Can you run UMAP directly on the randomly generated matrix to see if your embeddings are the same? If they are, UMAP is likely not at fault. 4) If you perturb your nearest neighbor matrix by adding noise to the edges such that the total edge weight differs by ~0.001 between perturbations, can you recreate the big differences in the UMAP projection? Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure (which should be the case for randomly generated data).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:251,availability,cluster,clustering,251,"> 4\. Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure. Exactly this! We have come across the difficulty of exactly reproducing the umap and clustering results in our [single-cell tutorial/best practices](www.github.com/theislab/single-cell-tutorial), however it was always due to the difficulty of defining boundaries in a continuous phenotype. Essentially, that means that the biological interpretations should not rely on this moving boundary anyway. On another note, you may have more luck with reproducibility by setting `PYTHONHASHSEED` as well. Check out the discussion here: #313.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:251,deployability,cluster,clustering,251,"> 4\. Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure. Exactly this! We have come across the difficulty of exactly reproducing the umap and clustering results in our [single-cell tutorial/best practices](www.github.com/theislab/single-cell-tutorial), however it was always due to the difficulty of defining boundaries in a continuous phenotype. Essentially, that means that the biological interpretations should not rely on this moving boundary anyway. On another note, you may have more luck with reproducibility by setting `PYTHONHASHSEED` as well. Check out the discussion here: #313.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:434,deployability,continu,continuous,434,"> 4\. Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure. Exactly this! We have come across the difficulty of exactly reproducing the umap and clustering results in our [single-cell tutorial/best practices](www.github.com/theislab/single-cell-tutorial), however it was always due to the difficulty of defining boundaries in a continuous phenotype. Essentially, that means that the biological interpretations should not rely on this moving boundary anyway. On another note, you may have more luck with reproducibility by setting `PYTHONHASHSEED` as well. Check out the discussion here: #313.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:304,reliability,pra,practices,304,"> 4\. Small differences in the edge weights of the nearest neighbor graph CAN lead to huge differences in the UMAP projection if the graph has no inherent structure. Exactly this! We have come across the difficulty of exactly reproducing the umap and clustering results in our [single-cell tutorial/best practices](www.github.com/theislab/single-cell-tutorial), however it was always due to the difficulty of defining boundaries in a continuous phenotype. Essentially, that means that the biological interpretations should not rely on this moving boundary anyway. On another note, you may have more luck with reproducibility by setting `PYTHONHASHSEED` as well. Check out the discussion here: #313.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1344,availability,cluster,clustering,1344,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1344,deployability,cluster,clustering,1344,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1410,deployability,depend,depending,1410,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1410,integrability,depend,depending,1410,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:128,interoperability,distribut,distribution,128,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1410,modifiability,depend,depending,1410,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1410,safety,depend,depending,1410,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1410,testability,depend,depending,1410,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1028,usability,user,user-images,1028,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1009:1147,usability,user,user-images,1147,"Hi! I've tried first the 4th point from @atarashansky and yeah, multiplying the distance, connectivities, or both with a normal distribution with std 0.0001 (which makes roughly a 0.008% of absolute difference in the matrix) and the results are different. . Python code:. ```python. c0 = adata.uns['neighbors']['connectivities']. connect = adata.uns['neighbors']['connectivities'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['connectivities'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. ```python. c0 = adata.uns['neighbors']['distances']. csum = adata.uns['neighbors']['distances'].todense().sum(). connect = adata.uns['neighbors']['distances'].todense(). connect = np.multiply(connect, np.random.normal(1, 0.0001, connect.shape)). adata.uns['neighbors']['distances'] = spr.csr_matrix(connect). print(100*np.sum(np.abs(c0 - connect))/min(np.sum(c0), np.sum(connect))). ```. Before. ![image](https://user-images.githubusercontent.com/35657291/73247960-52f51900-41b2-11ea-937c-c09e301c5e7a.png). After. ![image](https://user-images.githubusercontent.com/35657291/73247968-55f00980-41b2-11ea-9d44-8e4cef0149d5.png). I mean, the results (hopefully) are not drastically different, but there are minor rearrangements and clustering assignments that might make the analysis be rearranged depending on the computer. . I've realized that, for some reason, the differences between points are not associated to different random seeds, that is, after setting the seed, the PCA look equal but are different in less than 0.001 when doing a pairwise comparison. This happens as well to the neighbors graph, so I believe that randomness is not really an issue. However I am puzzled as to why the differences in PCA / neighbour graphs is so small. Shouldn't two different computers do calculations equally at least at 3 or 4 decimals? .",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1009
https://github.com/scverse/scanpy/issues/1010:31,availability,error,error,31,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:77,deployability,instal,installed,77,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:113,deployability,instal,installing,113,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:37,integrability,messag,message,37,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:37,interoperability,messag,message,37,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:31,performance,error,error,31,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:31,safety,error,error,31,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:31,usability,error,error,31,"I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:33,availability,error,error,33,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:79,deployability,instal,installed,79,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:115,deployability,instal,installing,115,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:294,deployability,updat,updating,294,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:322,deployability,version,version,322,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:39,integrability,messag,message,39,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:322,integrability,version,version,322,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:39,interoperability,messag,message,39,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:322,modifiability,version,version,322,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:33,performance,error,error,33,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:33,safety,error,error,33,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:250,safety,prevent,prevents,250,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:294,safety,updat,updating,294,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:250,security,preven,prevents,250,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:294,security,updat,updating,294,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:33,usability,error,error,33,"> I had the exact same issue and error message at that step in the tutorial. I installed scanpy using pip, because installing with conda was not working. Same here. I assume there is some issue with the implementation of the setter of adata.X, which prevents `adata.X = adata.X.toarray()` from updating X to its densified version.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:63,availability,sli,sliced,63,It looks like this is connected to the way anndata objects are sliced. An explicit `adata = adata.copy()` before calling `sc.pp.regress_out()` solves the problem.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:63,reliability,sli,sliced,63,It looks like this is connected to the way anndata objects are sliced. An explicit `adata = adata.copy()` before calling `sc.pp.regress_out()` solves the problem.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:65,availability,sli,sliced,65,> It looks like this is connected to the way anndata objects are sliced. An explicit `adata = adata.copy()` before calling `sc.pp.regress_out()` solves the problem. Thank you!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1010:65,reliability,sli,sliced,65,> It looks like this is connected to the way anndata objects are sliced. An explicit `adata = adata.copy()` before calling `sc.pp.regress_out()` solves the problem. Thank you!,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010
https://github.com/scverse/scanpy/issues/1011:44,deployability,updat,update,44,"@flying-sheep, was this fixed by the recent update?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:44,safety,updat,update,44,"@flying-sheep, was this fixed by the recent update?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:44,security,updat,update,44,"@flying-sheep, was this fixed by the recent update?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:38,integrability,transform,transformer,38,"It sure was! One just has to specify `transformer=""pynndescent""` to make it happen.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:29,interoperability,specif,specify,29,"It sure was! One just has to specify `transformer=""pynndescent""` to make it happen.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:38,interoperability,transform,transformer,38,"It sure was! One just has to specify `transformer=""pynndescent""` to make it happen.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:32,safety,test,test,32,"The only thing missing from the test in #1413 is `ll_dirichlet`, which seems to be a metric that’s implemented in `umap` but not PyNNDescent.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/issues/1011:32,testability,test,test,32,"The only thing missing from the test in #1413 is `ll_dirichlet`, which seems to be a metric that’s implemented in `umap` but not PyNNDescent.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1011
https://github.com/scverse/scanpy/pull/1012:356,availability,sli,slicing,356,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:246,deployability,contain,contain,246,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:503,interoperability,coordinat,coordinates,503,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:280,modifiability,paramet,parameters,280,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:407,modifiability,paramet,parameter,407,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:524,modifiability,paramet,parameter,524,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:807,modifiability,exten,extend,807,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:831,modifiability,paramet,parameter,831,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:356,reliability,sli,slicing,356,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1024,safety,test,test,1024,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1040,safety,test,test,1040,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:634,security,control,control,634,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:684,security,control,control,684,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:40,testability,plan,plan,40,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:634,testability,control,control,634,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:684,testability,control,control,684,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1024,testability,test,test,1024,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1040,testability,test,test,1040,"Looks good! Remaining questions:. - The plan is to add the Visium reading function to `anndata`, right? - You’re repeating yourself with the docs: `doc_scatter_basic` (and therefore `doc_scatter_embedding`) and the docstring of `pl.spatial` both contain similar text for the same parameters. If you want to reorder them, you could do something fancy (like slicing doc_scatter_embedding) or just mention the parameter names in the free text, something like:. ```restructuredtext. Scatter plot in spatial coordinates. Use the parameter `img_key` to see the microscopy image in the background. Use `crop_coord`, `alpha_img`, and `bw` to control how it is displayed,. and `scale_spot` to control the size of the Visium spots plotted on top. ```. - Is it possible to derive the amount of cropping? Then we could extend the `crop_coord` parameter to this:. ```py. Union[. Iterable[Literal['left', 'l', 'right', 'r', 'top', 't', 'bottom', 'b']],. Tuple[int, int, int, int], # l, r, t, b. ]. ```. - Maybe it makes sense to add some test data and a test plot? (very low res of course)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:63,interoperability,coordinat,coordinates,63,@davidsebfischer this is a good convention for storing spatial coordinates in AnnData I think. You have spatial code that might want to use it.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:25,deployability,scale,scale,25,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:25,energy efficiency,scale,scale,25,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:25,modifiability,scal,scale,25,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:25,performance,scale,scale,25,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:335,safety,compl,complete,335,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:122,security,modif,modify,122,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:335,security,compl,complete,335,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:166,testability,simpl,simply,166,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:58,usability,user,users,58,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:166,usability,simpl,simply,166,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:177,usability,visual,visualization,177,"scale_spot is a float to scale the size of the spots from users. We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Regarding examples, I've made a tutorial that I will push to scanpy-tutorial. I'm waiting for @Mirkazemi read function that I need to complete the notebook",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1095,availability,sli,slightly,1095,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1134,availability,sli,slightly,1134,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:559,deployability,stack,stackoverflow,559,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1044,deployability,scale,scale,1044,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:675,energy efficiency,adapt,adapt,675,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1044,energy efficiency,scale,scale,1044,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:675,integrability,adapt,adapt,675,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:675,interoperability,adapt,adapt,675,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:675,modifiability,adapt,adapt,675,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1044,modifiability,scal,scale,1044,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1044,performance,scale,scale,1044,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:532,reliability,doe,does,532,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1095,reliability,sli,slightly,1095,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:1134,reliability,sli,slightly,1134,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:59,security,modif,modify,59,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:103,testability,simpl,simply,103,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:103,usability,simpl,simply,103,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:114,usability,visual,visualization,114,"> We have original radius dimension but it can be handy to modify it according to cropping/zooming, or simply for visualization purposes. Cropping/zooming won’t make a difference if you plot circles in data space. So there’s our problem: We have the original radius in data space, but you’re plotting markers, whose size is in figure space (i.e. their center position in the final figure is determined and then they’re plotted as circles right into the graphic). So you need to switch from `ax.scatter` to a `circles` function that does what we need: https://stackoverflow.com/questions/9081553/python-scatter-plot-size-and-style-of-the-marker/24567352#24567352. We can just adapt that one (throw out what we don’t need), make it so the `scatter(...)` calls in “embedding” work with it, and do `scatter = ax.scatter if img_key is None else partial(circles, ax=ax)`. This means that we don’t have to do difficult math when cropping/zooming, as the spots will always just be the correct size. We can also get rid of `spot_size` and make `size` a scale factor in the image case (1=normal size, 0.8=slightly smaller than in the data, 1.2=slightly larger than in the data)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:22,deployability,fail,fail,22,I think that specific fail should be fixed with last commit.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:13,interoperability,specif,specific,13,I think that specific fail should be fixed with last commit.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1012:22,reliability,fail,fail,22,I think that specific fail should be fixed with last commit.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1012
https://github.com/scverse/scanpy/pull/1013:60,deployability,version,version,60,"For me it's good, I would just merge so we have a prototype version for the vignette, then we can extend for other data type/modify it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1013
https://github.com/scverse/scanpy/pull/1013:60,integrability,version,version,60,"For me it's good, I would just merge so we have a prototype version for the vignette, then we can extend for other data type/modify it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1013
https://github.com/scverse/scanpy/pull/1013:60,modifiability,version,version,60,"For me it's good, I would just merge so we have a prototype version for the vignette, then we can extend for other data type/modify it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1013
https://github.com/scverse/scanpy/pull/1013:98,modifiability,exten,extend,98,"For me it's good, I would just merge so we have a prototype version for the vignette, then we can extend for other data type/modify it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1013
https://github.com/scverse/scanpy/pull/1013:125,security,modif,modify,125,"For me it's good, I would just merge so we have a prototype version for the vignette, then we can extend for other data type/modify it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1013
https://github.com/scverse/scanpy/pull/1013:50,usability,prototyp,prototype,50,"For me it's good, I would just merge so we have a prototype version for the vignette, then we can extend for other data type/modify it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1013
https://github.com/scverse/scanpy/pull/1014:55,safety,test,tests,55,"Should probably figure out what's happening with these tests. @flying-sheep, has this been happening for other PRs?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1014
https://github.com/scverse/scanpy/pull/1014:55,testability,test,tests,55,"Should probably figure out what's happening with these tests. @flying-sheep, has this been happening for other PRs?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1014
https://github.com/scverse/scanpy/pull/1014:35,safety,test,tests,35,"What the heck is going on with the tests? Sorry, didn't see this before.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1014
https://github.com/scverse/scanpy/pull/1014:35,testability,test,tests,35,"What the heck is going on with the tests? Sorry, didn't see this before.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1014
https://github.com/scverse/scanpy/pull/1014:6,performance,Time,Time,6,Yeah. Time to fix that first. Time to merge this comes after :wink:,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1014
https://github.com/scverse/scanpy/pull/1014:30,performance,Time,Time,30,Yeah. Time to fix that first. Time to merge this comes after :wink:,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1014
https://github.com/scverse/scanpy/pull/1015:117,availability,Sli,Slightly,117,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:192,availability,cluster,clustermap,192,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:192,deployability,cluster,clustermap,192,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:117,reliability,Sli,Slightly,117,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:203,safety,test,test,203,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:402,safety,test,test,402,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:553,safety,test,test,553,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:203,testability,test,test,203,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:402,testability,test,test,402,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:553,testability,test,test,553,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:218,usability,clear,clear,218,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:607,usability,user,user-images,607,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:741,usability,user,user-images,741,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:1007,usability,user,user-images,1007,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:1151,usability,user,user-images,1151,"@flying-sheep, I made two small changes:. * The 10x readers should no longer return views, fixing `test_read_10x`. * Slightly cleaner providing of categories for leiden/ louvain code. For the clustermap test, it's not clear to me that the problems are even related to pandas, though the cause might be: https://github.com/pandas-dev/pandas/issues/18720. There are two images which are compared in this test. I'll post the comparisons here:. # `master_clustermap.png`. I believe the difference is just the margin, so we should be good to just change the test image. ## Expected. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589759-d73af980-452e-11ea-9a77-89ecf9e752dc.png). ## Actual. ![master_clustermap](https://user-images.githubusercontent.com/8238804/73589766-e5891580-452e-11ea-9762-aa483399c8b3.png). # `master_clustermap_withcolor.png`. This one looks worse, but I'm not sure how to fix it. @fidelram might know better? ## Expected. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589782-123d2d00-452f-11ea-828c-5e6fdc0b6091.png). ## Actual. ![master_clustermap_withcolor](https://user-images.githubusercontent.com/8238804/73589788-21bc7600-452f-11ea-9661-ec55aeee07de.png).",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:72,deployability,depend,dependency,72,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:352,energy efficiency,heat,heatmap,352,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:72,integrability,depend,dependency,72,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:96,interoperability,mismatch,mismatches,96,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:72,modifiability,depend,dependency,72,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:72,safety,depend,dependency,72,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:288,safety,test,test,288,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:72,testability,depend,dependency,72,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:288,testability,test,test,288,"Sorry yeah, the branch name might not be accurate when we’re done. What dependency causes those mismatches? Locally the image comparisons succeed unless I create a venv …. > master_clustermap.png. > . > I believe the difference is just the margin, so we should be good to just change the test image. nah, it also has an ugly white gap between tree and heatmap, probably caused by the same reason as the other one …. /edit: the space seems exactly enough to hold the color bar’s x tick labels, that might be the cause. /edit2: also appears without scanpy’s style or anything: mwaskom/seaborn#1953",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:90,availability,down,downgrade,90,Whats the timeline here? When will there be a release that includes this fix? Or should I downgrade pandas in the meantime?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:46,deployability,releas,release,46,Whats the timeline here? When will there be a release that includes this fix? Or should I downgrade pandas in the meantime?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:10,performance,time,timeline,10,Whats the timeline here? When will there be a release that includes this fix? Or should I downgrade pandas in the meantime?,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:86,deployability,releas,release,86,You can just use scanpy master if you need this fix ASAP. Otherwise I think we should release a new version pretty soon after merging #1038.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:100,deployability,version,version,100,You can just use scanpy master if you need this fix ASAP. Otherwise I think we should release a new version pretty soon after merging #1038.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:100,integrability,version,version,100,You can just use scanpy master if you need this fix ASAP. Otherwise I think we should release a new version pretty soon after merging #1038.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/pull/1015:100,modifiability,version,version,100,You can just use scanpy master if you need this fix ASAP. Otherwise I think we should release a new version pretty soon after merging #1038.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015
https://github.com/scverse/scanpy/issues/1016:109,deployability,pipelin,pipeline,109,"Could you give examples of how you'd like scanpy to work with MetaCell? It looks like a pretty comprehensive pipeline, so I'm a little unsure of at what point in an analysis you'd want to use scanpy with it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:109,integrability,pipelin,pipeline,109,"Could you give examples of how you'd like scanpy to work with MetaCell? It looks like a pretty comprehensive pipeline, so I'm a little unsure of at what point in an analysis you'd want to use scanpy with it.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:250,deployability,api,api,250,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:250,integrability,api,api,250,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:381,integrability,sub,submitting,381,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:250,interoperability,api,api,250,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:64,performance,overhead,overhead,64,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:83,usability,tool,tools,83,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1016:439,usability,help,help,439,"Hi @olgabot ,. to expand on @ivirshup remark, there is a bit of overhead to port R tools to Scanpy. Also, I'm not sure what's the purpose of metacell for your analysis, but I suggest you to have a look at PAGA https://scanpy.readthedocs.io/en/stable/api/scanpy.tl.paga.html#scanpy.tl.paga. which is quite similar in scope and can have potential overlap. Of course if you feel like submitting a PR to `scanpy.external` we are very happy to help!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1016
https://github.com/scverse/scanpy/issues/1017:47,deployability,version,version,47,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:80,deployability,updat,update,80,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:99,deployability,version,version,99,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:47,integrability,version,version,47,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:99,integrability,version,version,99,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:47,modifiability,version,version,47,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:99,modifiability,version,version,99,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:80,safety,updat,update,80,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/issues/1017:80,security,updat,update,80,@salwanbutrus This should be fixed from Scanpy version 1.4.5.1. You may need to update your Scanpy version.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1017
https://github.com/scverse/scanpy/pull/1020:32,deployability,fail,fail,32,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/pull/1020:267,deployability,stack,stack,267,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/pull/1020:14,reliability,doe,does,14,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/pull/1020:32,reliability,fail,fail,32,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/pull/1020:23,safety,test,test,23,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/pull/1020:23,testability,test,test,23,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/pull/1020:141,testability,assert,assert,141,"Yeah, but why does the test not fail on master then? The following works:. ```py. import scanpy as sc. pbmc = sc.datasets.pbmc68k_reduced(). assert pbmc.uns['louvain_colors'].tolist() == sc.pl.palettes.zeileis_28[:11]. ```. and the Zeileis palette is:. ![](https://i.stack.imgur.com/9d15A.png)",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020
https://github.com/scverse/scanpy/issues/1021:288,reliability,doe,doesn,288,"I think concatenating `obsm` makes sense for default behavior. But we should probably make it easy to skip elements when concatenating. We should probably also have options for reconciling entries in `uns`. Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:53,usability,behavi,behavior,53,"I think concatenating `obsm` makes sense for default behavior. But we should probably make it easy to skip elements when concatenating. We should probably also have options for reconciling entries in `uns`. Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:759,availability,state,state,759,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:759,integrability,state,state,759,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:545,reliability,doe,doesn,545,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:55,usability,behavi,behavior,55,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:95,usability,experien,experienced,95,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:107,usability,user,users,107,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:277,usability,user,users,277,"> I think concatenating `obsm` makes sense for default behavior. . I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. We should never assume that ALL users know how exactly sc.tl.umap, adata.obsm and AnnData.concatenate work. The decisions about the defaults are always more than what we want to see in scanpy for our own convenience. > Would `sc.pp.neighbors` do anything different if diffmap had been run before? It doesn't look to me like it would. If this is the case, the bug here is that `neighbors` is checking expectations unrelated to what it's doing. Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view, since it has obsm X_diffmap but not uns diff_evals :) I don't know why ""neighbors"" needs diffmap_evals...",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:194,energy efficiency,cool,cool,194,"> I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. . > . It'd be cool to print a warning in such cases somehow, that concatenated `obsm`s are not compatible or so.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:275,interoperability,compatib,compatible,275,"> I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. . > . It'd be cool to print a warning in such cases somehow, that concatenated `obsm`s are not compatible or so.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:30,usability,experien,experienced,30,"> I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. . > . It'd be cool to print a warning in such cases somehow, that concatenated `obsm`s are not compatible or so.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:42,usability,user,users,42,"> I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. . > . It'd be cool to print a warning in such cases somehow, that concatenated `obsm`s are not compatible or so.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:83,safety,risk,risky,83,I would tend to agree with @gokceneraslan on this. Concatenating obsm seems like a risky thing to do.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:83,security,risk,risky,83,I would tend to agree with @gokceneraslan on this. Concatenating obsm seems like a risky thing to do.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:30,usability,experien,experienced,30,> I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. I agree that this can be a problem.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:42,usability,user,users,42,> I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. I agree that this can be a problem.,MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:73,availability,state,state,73,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:215,availability,state,state,215,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:276,deployability,observ,observation,276,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:288,energy efficiency,load,loadings,288,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:324,energy efficiency,load,loadings,324,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:720,energy efficiency,cool,cool,720,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:1184,energy efficiency,reduc,reducedDims,1184,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:73,integrability,state,state,73,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:215,integrability,state,state,215,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:799,interoperability,compatib,compatible,799,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:315,modifiability,variab,variable,315,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:288,performance,load,loadings,288,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:324,performance,load,loadings,324,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:276,testability,observ,observation,276,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:348,usability,user,users,348,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:516,usability,experien,experienced,516,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:528,usability,user,users,528,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:671,usability,user,users,671,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:942,usability,user,users,942,"> Concatenating obsm without touching uns puts the object in an unstable state somehow from diffmap point of view. Sure, but this should only ever effect `diffmap`. . Arguably it also puts the object in an unstable state from a PCA point of view since there's no promise that observation loadings correspond to the variable loadings. I don't think users should have the expectation that meaning is preserved by concatenation, but I'm not sure if this is something people would believe. > I'm not entirely sure. Less experienced users might concatenate things and plot a UMAP without running sc.tl.umap on the new concatenated object and see some super weird things. Have users reported that this is confusing? > It'd be cool to print a warning in such cases somehow, that concatenated obsms are not compatible or so. I think a note in the docstring for concatenation should be sufficient. My expectation is that it's much more common for our users to be familiar with what similar methods (like `np.concatenate` and `pd.concat`) do, and to have the right expectations about this. Bioconductor's `SummarizedExperiment` classes also do not warn about this, and concatenate along their `reducedDims`.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:7,usability,user,users,7,"> Have users reported that this is confusing? I think concatenating `.obsm` by default was a recent change, no? I vaguely recall reading about it in an issue recently.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:138,testability,simpl,simply,138,"Hi all! I've been using `scanpy` and ran into a similar problem. I was wondering if there's an easy / appropriate work-around, other than simply deleting `obsm[X_diffmap]`? Thank you all for developing `scanpy`, it's a really wonderful piece of software.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:138,usability,simpl,simply,138,"Hi all! I've been using `scanpy` and ran into a similar problem. I was wondering if there's an easy / appropriate work-around, other than simply deleting `obsm[X_diffmap]`? Thank you all for developing `scanpy`, it's a really wonderful piece of software.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/issues/1021:4,reliability,doe,does,4,"Hi, does anyone have a solution to deal with this issue? I came across the same problem with ""KeyError: 'diffmap_evals'"" when running ""sc.pp.neighbors()"" but don't know how to deal with it. . Many thanks!",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1021
https://github.com/scverse/scanpy/pull/1024:168,interoperability,conflict,conflicts,168,"Hi @giovp still up for adding a test dataset and tests? If so, this would be a good moment in time, as we should merge this quickly before more changes to master cause conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:94,performance,time,time,94,"Hi @giovp still up for adding a test dataset and tests? If so, this would be a good moment in time, as we should merge this quickly before more changes to master cause conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:32,safety,test,test,32,"Hi @giovp still up for adding a test dataset and tests? If so, this would be a good moment in time, as we should merge this quickly before more changes to master cause conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:49,safety,test,tests,49,"Hi @giovp still up for adding a test dataset and tests? If so, this would be a good moment in time, as we should merge this quickly before more changes to master cause conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:32,testability,test,test,32,"Hi @giovp still up for adding a test dataset and tests? If so, this would be a good moment in time, as we should merge this quickly before more changes to master cause conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:49,testability,test,tests,49,"Hi @giovp still up for adding a test dataset and tests? If so, this would be a good moment in time, as we should merge this quickly before more changes to master cause conflicts",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:25,availability,sli,slices,25,"Also, how's the multiple slices support for `anndata` @Mirkazemi ? That would also be very useful before merging this PR.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:25,reliability,sli,slices,25,"Also, how's the multiple slices support for `anndata` @Mirkazemi ? That would also be very useful before merging this PR.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:32,usability,support,support,32,"Also, how's the multiple slices support for `anndata` @Mirkazemi ? That would also be very useful before merging this PR.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:637,availability,down,download,637,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:411,energy efficiency,reduc,reduce,411,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:64,performance,time,time,64,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:15,safety,test,test,15,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:299,safety,test,test,299,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:595,safety,test,tests,595,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:615,safety,test,tests,615,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:706,safety,test,tests,706,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:15,testability,test,test,15,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:253,testability,trace,trace,253,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:299,testability,test,test,299,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:595,testability,test,tests,595,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:615,testability,test,tests,615,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:706,testability,test,tests,706,"Hi @giovp! The test data is too large, it’ll take scanpy a long time to clone once this is in `master`. The way we fix it is that we replace the data and then merge our changes into commit bb70446 (creating a new commit from the two and eliminating any trace of the big dataset). For reference, the test data `filtered_feature_bc_matrix.h5` is <100kb. I’d say you find the smallest of the 10x example datasets, reduce it so the (non-image) data is <100kb all in all, and delete the hires pic. The code should work if there’s only the lores pic anyway, right? An alternative would be to mark our tests as “internet” tests and dynamically download the data, but I think it’s better to always run the spatial tests.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:29,energy efficiency,reduc,reduce,29,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:70,interoperability,format,format,70,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:178,interoperability,format,format,178,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:107,safety,compl,complicated,107,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:225,safety,test,test,225,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:107,security,compl,complicated,107,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/pull/1024:225,testability,test,test,225,"I agree, I've been trying to reduce the dataset and save it as 10x_h5 format again but it seems to be more complicated than I thought. I think it would be best to have an 10x_h5 format so to also use it for the read function test. Also, yes will only keep the lowres image",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1024
https://github.com/scverse/scanpy/issues/1027:67,availability,error,error,67,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1027:34,integrability,wrap,wrapper,34,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1027:20,interoperability,compatib,compatibility,20,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1027:34,interoperability,wrapper,wrapper,34,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1027:67,performance,error,error,67,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1027:67,safety,error,error,67,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1027:67,usability,error,error,67,"We have a backwards compatibility wrapper, I have no idea how this error can be possible:. https://github.com/theislab/anndata/blob/41eadb2a76d91ae455faf01afd2382143b9af4b2/anndata/_core/anndata.py#L2137-L2140",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1027
https://github.com/scverse/scanpy/issues/1028:28,deployability,version,version,28,"Could you check your pandas version? I believe we've seen this being cause by pandas 1.0, and have addressed it here: https://github.com/theislab/scanpy/pull/1015.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:28,integrability,version,version,28,"Could you check your pandas version? I believe we've seen this being cause by pandas 1.0, and have addressed it here: https://github.com/theislab/scanpy/pull/1015.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:28,modifiability,version,version,28,"Could you check your pandas version? I believe we've seen this being cause by pandas 1.0, and have addressed it here: https://github.com/theislab/scanpy/pull/1015.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:53,reliability,doe,does,53,"Yes, thank you, I was on pandas 1.0 and the tutorial does work with pandas 0.25.3",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:61,deployability,depend,dependencies,61,"That being said, maybe this better be reflected in the conda dependencies, so pandas 1.0 is not pulled with scanpy?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:61,integrability,depend,dependencies,61,"That being said, maybe this better be reflected in the conda dependencies, so pandas 1.0 is not pulled with scanpy?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:61,modifiability,depend,dependencies,61,"That being said, maybe this better be reflected in the conda dependencies, so pandas 1.0 is not pulled with scanpy?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:61,safety,depend,dependencies,61,"That being said, maybe this better be reflected in the conda dependencies, so pandas 1.0 is not pulled with scanpy?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/issues/1028:61,testability,depend,dependencies,61,"That being said, maybe this better be reflected in the conda dependencies, so pandas 1.0 is not pulled with scanpy?",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028
https://github.com/scverse/scanpy/pull/1029:45,availability,error,error,45,"Thank you! I’d prefer a nicer, more explicit error that describes the problem. You could use sth like:. ```py. if not is_categorical_dtype(adata.obs[groupby].dtype):. raise ValueError(. f""The column `adata.obs[groupby]` needs to be categorical, "". f""but the {groupby!r} column is of dtype {adata.obs[groupby].dtype}."". ). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1029
https://github.com/scverse/scanpy/pull/1029:45,performance,error,error,45,"Thank you! I’d prefer a nicer, more explicit error that describes the problem. You could use sth like:. ```py. if not is_categorical_dtype(adata.obs[groupby].dtype):. raise ValueError(. f""The column `adata.obs[groupby]` needs to be categorical, "". f""but the {groupby!r} column is of dtype {adata.obs[groupby].dtype}."". ). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1029
https://github.com/scverse/scanpy/pull/1029:45,safety,error,error,45,"Thank you! I’d prefer a nicer, more explicit error that describes the problem. You could use sth like:. ```py. if not is_categorical_dtype(adata.obs[groupby].dtype):. raise ValueError(. f""The column `adata.obs[groupby]` needs to be categorical, "". f""but the {groupby!r} column is of dtype {adata.obs[groupby].dtype}."". ). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1029
https://github.com/scverse/scanpy/pull/1029:15,usability,prefer,prefer,15,"Thank you! I’d prefer a nicer, more explicit error that describes the problem. You could use sth like:. ```py. if not is_categorical_dtype(adata.obs[groupby].dtype):. raise ValueError(. f""The column `adata.obs[groupby]` needs to be categorical, "". f""but the {groupby!r} column is of dtype {adata.obs[groupby].dtype}."". ). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1029
https://github.com/scverse/scanpy/pull/1029:45,usability,error,error,45,"Thank you! I’d prefer a nicer, more explicit error that describes the problem. You could use sth like:. ```py. if not is_categorical_dtype(adata.obs[groupby].dtype):. raise ValueError(. f""The column `adata.obs[groupby]` needs to be categorical, "". f""but the {groupby!r} column is of dtype {adata.obs[groupby].dtype}."". ). ```",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1029
https://github.com/scverse/scanpy/issues/1030:313,availability,cluster,clusters,313,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:154,deployability,continu,continuous,154,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:165,deployability,scale,scale,165,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:199,deployability,continu,continuous,199,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:217,deployability,scale,scale,217,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:313,deployability,cluster,clusters,313,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:165,energy efficiency,scale,scale,165,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:217,energy efficiency,scale,scale,217,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
https://github.com/scverse/scanpy/issues/1030:364,interoperability,convers,conversion,364,"Hey! So one reason I can think of why it's important that `.obs` covariates are strings is that matplotlib will assume that numerical covariates lie on a continuous scale and thus colour this with a continuous colour scale and provide the corresponding colour bar. Typically that is not what you want for louvain clusters. These are inherently categorical, so the conversion to string is used to further convert to `pd.Categorical` via `sanitize_anndata()`. From my point of view the `.loc` and `.iloc` convention isn't particularly intuitive for new users, so I wouldn't be in favour of that setup. I'm not sure I see the issue with converting numerical values to strings if what you are using these as are labels, and thus categories (e.g. `obs_names` or other). Integers are after all values which have an inherent ordering and a defined distance, which is not a characteristic you would assign to an index.",MatchSource.ISSUE_COMMENT,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030
