id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/14267:241,energy efficiency,manag,manager,241,"Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we *have* to go this step to the new pass manager, better make progress sooner than later...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:83,performance,overhead,overhead,83,"Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we *have* to go this step to the new pass manager, better make progress sooner than later...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:51,safety,test,tests,51,"Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we *have* to go this step to the new pass manager, better make progress sooner than later...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:241,safety,manag,manager,241,"Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we *have* to go this step to the new pass manager, better make progress sooner than later...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:51,testability,test,tests,51,"Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we *have* to go this step to the new pass manager, better make progress sooner than later...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:262,usability,progress,progress,262,"Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we *have* to go this step to the new pass manager, better make progress sooner than later...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:243,deployability,manag,manager,243,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:32,energy efficiency,current,current,32,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:74,energy efficiency,measur,measurable,74,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:243,energy efficiency,manag,manager,243,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:85,performance,overhead,overhead,85,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:53,safety,test,tests,53,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:243,safety,manag,manager,243,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:309,safety,test,tests,309,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:324,safety,test,tested,324,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:338,safety,test,test,338,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:53,testability,test,tests,53,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:309,testability,test,tests,309,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:324,testability,test,tested,324,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:338,testability,test,test,338,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:264,usability,progress,progress,264,"> Correct, but I argue that the current ""real world"" tests don't show any measurable overhead. If we find problems in micro-benchmarks, these can be addressed in followup changes. My rationale is that we _have_ to go this step to the new pass manager, better make progress sooner than later... The real world tests that you tested do not test this part. How about trying to run `stressInterpreter` and probably something that enables `O2` and generates many `TClingCallFunc`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:130,deployability,releas,release,130,a run to `stressInterpreter` will not be a huge endeavour after all. It can be useful if in the end it turns out that 6.32 is the release that CMS and Alice pick up for the 2025 data taking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:141,deployability,build,builddir,141,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:215,deployability,Updat,UpdateCTestConfiguration,215,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:271,deployability,build,builddir,271,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:346,deployability,build,builddir,346,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:420,deployability,Updat,UpdateCTestConfiguration,420,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:476,deployability,build,builddir,476,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:551,deployability,build,builddir,551,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:621,deployability,build,builddir,621,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:774,deployability,Updat,Updating,774,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:865,deployability,depend,dependency,865,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:899,deployability,depend,dependency,899,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1032,deployability,build,builddir,1032,"essInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1172,deployability,build,builddir,1172," -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1241,deployability,build,builddir,1241,":/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: **********",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1282,deployability,build,builddir,1282,"nfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ***************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2479,deployability,fail,failed,2479,"*. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2545,deployability,manag,manager,2545,"*******************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stress",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2676,deployability,Updat,UpdateCTestConfiguration,2676," 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2893,deployability,Updat,UpdateCTestConfiguration,2893,"............................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3265,deployability,Updat,Updating,3265,"******************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3356,deployability,depend,dependency,3356,"erpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3390,deployability,depend,dependency,3390,"ec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4994,deployability,fail,failed,4994,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:84,energy efficiency,Current,Current,84,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2070,energy efficiency,Cpu,Cpu,2070,"/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2545,energy efficiency,manag,manager,2545,"*******************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stress",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4585,energy efficiency,Cpu,Cpu,4585,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:865,integrability,depend,dependency,865,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:899,integrability,depend,dependency,899,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3356,integrability,depend,dependency,3356,"erpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3390,integrability,depend,dependency,3390,"ec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:865,modifiability,depend,dependency,865,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:899,modifiability,depend,dependency,899,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1331,modifiability,variab,variables,1331,"work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3356,modifiability,depend,dependency,3356,"erpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3390,modifiability,depend,dependency,3390,"ec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3846,modifiability,variab,variables,3846,"Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1372,performance,time,timeout,1372,". Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2050,performance,Time,Time,2050,"Interpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartCon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2070,performance,Cpu,Cpu,2070,"/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2074,performance,Time,Time,2074,"/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2507,performance,time,time,2507,"NTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvala",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3887,performance,time,timeout,3887,". UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4565,performance,Time,Time,4565,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4585,performance,Cpu,Cpu,4585,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4589,performance,Time,Time,4589,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:5022,performance,time,time,5022,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2479,reliability,fail,failed,2479,"*. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4994,reliability,fail,failed,4994,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:180,safety,test,test-stressinterpreter,180,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:215,safety,Updat,UpdateCTestConfiguration,215,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:420,safety,Updat,UpdateCTestConfiguration,420,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:583,safety,Test,Test,583,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:654,safety,test,tests,654,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:668,safety,test,test,668,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:674,safety,test,test-stressproof,674,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:699,safety,test,test,699,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:767,safety,test,tests,767,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:774,safety,Updat,Updating,774,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:783,safety,test,test,783,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:815,safety,test,tests,815,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:860,safety,test,test,860,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:865,safety,depend,dependency,865,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:894,safety,test,test,894,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:899,safety,depend,dependency,899,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:921,safety,test,test,921,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:942,safety,test,test-stressinterpreter,942,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:971,safety,Test,Test,971,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1041,safety,test,test,1041,"rpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1120,safety,test,test,1120,"anouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: **********************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1181,safety,test,test,1181,"t-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1367,safety,Test,Test,1367,"ion.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1372,safety,timeout,timeout,1372,". Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2336,safety,Test,Test,2336,"es: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requiremen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2347,safety,test,test-stressinterpreter,2347,"=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2413,safety,test,tests,2413,"*******************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2428,safety,test,test-stressinterpreter,2428,"********************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2457,safety,test,tests,2457,"***********************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2473,safety,test,tests,2473,"*******. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2502,safety,Test,Test,2502,"ess INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2545,safety,manag,manager,2545,"*******************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stress",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2641,safety,test,test-stressinterpreter,2641,"................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2676,safety,Updat,UpdateCTestConfiguration,2676," 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2893,safety,Updat,UpdateCTestConfiguration,2893,"............................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3068,safety,Test,Test,3068,"Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ***************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3145,safety,test,tests,3145,"****************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall .............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3159,safety,test,test,3159,"***************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ..........................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3165,safety,test,test-stressproof,3165,"***. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ......................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3190,safety,test,test,3190,"KS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall .........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3258,safety,test,tests,3258,"**************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ............................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3265,safety,Updat,Updating,3265,"******************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3274,safety,test,test,3274,"***********************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ...........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3306,safety,test,tests,3306,"**. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3351,safety,test,test,3351,"tressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3356,safety,depend,dependency,3356,"erpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3385,safety,test,test,3385,"d 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3390,safety,depend,dependency,3390,"ec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3412,safety,test,test,3412,"ests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ......................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3433,safety,test,test-stressinterpreter,3433,"preter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3462,safety,Test,Test,3462,"assed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ******",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3538,safety,test,test,3538,"pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3617,safety,test,test,3617,"assmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3684,safety,test,test,3684,"tConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ***********************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3882,safety,Test,Test,3882,"essions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3887,safety,timeout,timeout,3887,". UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4851,safety,Test,Test,4851,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4862,safety,test,test-stressinterpreter,4862,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4928,safety,test,tests,4928,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4943,safety,test,test-stressinterpreter,4943,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4972,safety,test,tests,4972,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4988,safety,test,tests,4988,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:5017,safety,Test,Test,5017,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:215,security,Updat,UpdateCTestConfiguration,215,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:420,security,Updat,UpdateCTestConfiguration,420,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:774,security,Updat,Updating,774,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2676,security,Updat,UpdateCTestConfiguration,2676," 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2893,security,Updat,UpdateCTestConfiguration,2893,"............................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3265,security,Updat,Updating,3265,"******************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:180,testability,test,test-stressinterpreter,180,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:382,testability,coverag,coverage,382,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:583,testability,Test,Test,583,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:654,testability,test,tests,654,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:668,testability,test,test,668,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:674,testability,test,test-stressproof,674,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:699,testability,test,test,699,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:767,testability,test,tests,767,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:783,testability,test,test,783,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:815,testability,test,tests,815,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:860,testability,test,test,860,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:865,testability,depend,dependency,865,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:894,testability,test,test,894,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:899,testability,depend,dependency,899,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:921,testability,test,test,921,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:942,testability,test,test-stressinterpreter,942,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:971,testability,Test,Test,971,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1041,testability,test,test,1041,"rpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1120,testability,test,test,1120,"anouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: **********************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1181,testability,test,test,1181,"t-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:1367,testability,Test,Test,1367,"ion.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2336,testability,Test,Test,2336,"es: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requiremen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2347,testability,test,test-stressinterpreter,2347,"=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2413,testability,test,tests,2413,"*******************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2428,testability,test,test-stressinterpreter,2428,"********************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2457,testability,test,tests,2457,"***********************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2473,testability,test,tests,2473,"*******. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2502,testability,Test,Test,2502,"ess INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2641,testability,test,test-stressinterpreter,2641,"................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:2855,testability,coverag,coverage,2855," NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3068,testability,Test,Test,3068,"Cpu Time = 0.74 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ***************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3145,testability,test,tests,3145,"****************************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall .............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3159,testability,test,test,3159,"***************. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ..........................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3165,testability,test,test-stressproof,3165,"***. 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ......................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3190,testability,test,test,3190,"KS =12973.0 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall .........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3258,testability,test,tests,3258,"**************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ............................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3274,testability,test,test,3274,"***********************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ...........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3306,testability,test,tests,3306,"**. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3351,testability,test,test,3351,"tressinterpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3356,testability,depend,dependency,3356,"erpreter ........... Passed 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection ..........................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3385,testability,test,test,3385,"d 1.71 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3390,testability,depend,dependency,3390,"ec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3412,testability,test,test,3412,"ests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ......................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3433,testability,test,test-stressinterpreter,3433,"preter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3462,testability,Test,Test,3462,"assed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ******",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3538,testability,test,test,3538,"pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3617,testability,test,test,3617,"assmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3684,testability,test,test,3684,"tConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ***********************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3882,testability,Test,Test,3882,"essions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4851,testability,Test,Test,4851,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4862,testability,test,test-stressinterpreter,4862,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4928,testability,test,tests,4928,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4943,testability,test,test-stressinterpreter,4943,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4972,testability,test,tests,4972,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:4988,testability,test,tests,4988,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:5017,testability,Test,Test,5017,"Configuration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: ****************************************************************************. 338: stressInterpreter: Real Time = 0.58 seconds Cpu Time = 0.58 seconds. 338: ****************************************************************************. 338: * ROOTMARKS =16551.7 * Root6.31/01 20231010/0. 338: ****************************************************************************. 338: (bool) false. 1/1 Test #338: test-stressinterpreter ........... Passed 1.51 sec. The following tests passed:. test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.72 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:976,usability,command,command,976,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:. ```bash. dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl. Test project /home/dvalapar/work/root/builddir. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14267:3467,usability,command,command,3467,"0 tests failed out of 1. Total Test time (real) = 1.97 sec. ```. New pass manager:. ```bash. dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl. Test project /home/dvalapar/work/root/newpassmanager. Constructing a list of tests. Ignore test: test-stressproof. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 338. Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake"". 338: Environment variables: . 338: ROOT_HIST=0. 338: Test timeout computed to be: 1500. 338: ****************************************************************************. 338: * Starting stress INTERPRETER *. 338: ****************************************************************************. 338: FuncCall ................................................................ OK. 338: STLDict ................................................................. OK. 338: Reflection .............................................................. OK. 338: NestedStatements ........................................................ OK. 338: *************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14267
https://github.com/root-project/root/pull/14268:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:86,availability,failur,failures,86,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:86,deployability,fail,failures,86,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:86,performance,failur,failures,86,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:86,reliability,fail,failures,86,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:126,safety,test,test,126,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:126,testability,test,test,126,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:25,usability,intuit,intuition,25,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:79,availability,failur,failures,79,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:79,deployability,fail,failures,79,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:79,performance,failur,failures,79,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:79,reliability,fail,failures,79,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:117,safety,test,test,117,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:117,testability,test,test,117,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:18,usability,intuit,intuition,18,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:46,availability,servic,services,46,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:134,availability,failur,failure,134,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:46,deployability,servic,services,46,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:134,deployability,fail,failure,134,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:46,integrability,servic,services,46,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:46,modifiability,servic,services,46,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:134,performance,failur,failure,134,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:134,reliability,fail,failure,134,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:4,safety,test,test,4,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:4,testability,test,test,4,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:81,availability,failur,failures,81,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:81,deployability,fail,failures,81,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:81,performance,failur,failures,81,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:81,reliability,fail,failures,81,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:119,safety,test,test,119,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:119,testability,test,test,119,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:20,usability,intuit,intuition,20,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes? > . > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:322,availability,failur,failures,322,"> > Because the doc strings were written into the file, and since they are different the file size changed. > . > But strangely the report is about the size of the `TTree` rather than the file ... Maybe the TTree also encodes some class info? Because as you see in the CI, reverting this change in the docs fixed the test failures",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:322,deployability,fail,failures,322,"> > Because the doc strings were written into the file, and since they are different the file size changed. > . > But strangely the report is about the size of the `TTree` rather than the file ... Maybe the TTree also encodes some class info? Because as you see in the CI, reverting this change in the docs fixed the test failures",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:322,performance,failur,failures,322,"> > Because the doc strings were written into the file, and since they are different the file size changed. > . > But strangely the report is about the size of the `TTree` rather than the file ... Maybe the TTree also encodes some class info? Because as you see in the CI, reverting this change in the docs fixed the test failures",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:322,reliability,fail,failures,322,"> > Because the doc strings were written into the file, and since they are different the file size changed. > . > But strangely the report is about the size of the `TTree` rather than the file ... Maybe the TTree also encodes some class info? Because as you see in the CI, reverting this change in the docs fixed the test failures",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:317,safety,test,test,317,"> > Because the doc strings were written into the file, and since they are different the file size changed. > . > But strangely the report is about the size of the `TTree` rather than the file ... Maybe the TTree also encodes some class info? Because as you see in the CI, reverting this change in the docs fixed the test failures",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:317,testability,test,test,317,"> > Because the doc strings were written into the file, and since they are different the file size changed. > . > But strangely the report is about the size of the `TTree` rather than the file ... Maybe the TTree also encodes some class info? Because as you see in the CI, reverting this change in the docs fixed the test failures",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:225,deployability,fail,failing,225,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:445,integrability,sub,subsequent,445,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:270,performance,time,time,270,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:496,performance,content,content,496,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:579,performance,content,content,579,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:225,reliability,fail,failing,225,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:287,usability,close,closed,287,"So, you can put back in the change in the comment and (of course) create the corresponding roottest PR. The change is 'expected' for the following reasons. The class comments is part of the `TStreamerInfo` records and in the failing example the file is expanded several time after being closed out. This result in the `TStreamerInfo` record being in the 'middle' of the file and thus its increase in size affects the location in the file of the subsequent `TBaskets`. In turn this means that the content of the `TTree` has the same expected size before compression but since the content (in this case the location of the basket on the file) it is expected that the compression ratio might change a little bit. For the record one of the 2 changes is:. ```. 96c96. < ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21627, 21814, 22001, 22188, 22375, 22562, 22749, 22936, 23123, 23310, 0],. ---. > ""fBasketSeek"" : [213, 480, 747, 1014, 1281, 1548, 1815, 2002, 2189, 2376, 2563, 2750, 2937, 3124, 3311, 3498, 3685, 3952, 4219, 4486, 4753, 5020, 5287, 5554, 5821, 6088, 6355, 6622, 6889, 7076, 7263, 7450, 7637, 7824, 8011, 8198, 8385, 8572, 21637, 21824, 22011, 22198, 22385, 22572, 22759, 22946, 23133, 23320, 0],. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:62,energy efficiency,green,green,62,"Hi @pcanal, I have addressed your requests, and the old CI is green now. The new CI didn't pick up the corresponding ROOT test PR, so it's all red. What should we do? Just merge both PRs anyway?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:122,safety,test,test,122,"Hi @pcanal, I have addressed your requests, and the old CI is green now. The new CI didn't pick up the corresponding ROOT test PR, so it's all red. What should we do? Just merge both PRs anyway?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:122,testability,test,test,122,"Hi @pcanal, I have addressed your requests, and the old CI is green now. The new CI didn't pick up the corresponding ROOT test PR, so it's all red. What should we do? Just merge both PRs anyway?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:11,availability,failur,failures,11,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:11,deployability,fail,failures,11,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:11,performance,failur,failures,11,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:11,reliability,fail,failures,11,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:60,safety,review,review,60,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14268:60,testability,review,review,60,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14268
https://github.com/root-project/root/pull/14271:66,deployability,patch,patch,66,@eguiraud would you mind trying your test-script with the current patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:58,energy efficiency,current,current,58,@eguiraud would you mind trying your test-script with the current patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:37,safety,test,test-script,37,@eguiraud would you mind trying your test-script with the current patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:66,safety,patch,patch,66,@eguiraud would you mind trying your test-script with the current patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:66,security,patch,patch,66,@eguiraud would you mind trying your test-script with the current patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:37,testability,test,test-script,37,@eguiraud would you mind trying your test-script with the current patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:114,availability,error,error,114,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:120,integrability,messag,message,120,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:336,integrability,interfac,interfaces,336,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:120,interoperability,messag,message,120,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:336,interoperability,interfac,interfaces,336,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:336,modifiability,interfac,interfaces,336,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:87,performance,content,content,87,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:114,performance,error,error,114,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:138,performance,time,time,138,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:114,safety,error,error,114,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:32,usability,user,user,32,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:114,usability,error,error,114,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram? A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:89,availability,robust,robust,89,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:68,deployability,patch,patch,68,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:120,deployability,patch,patch,120,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:60,energy efficiency,current,current,60,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:89,reliability,robust,robust,89,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:39,safety,test,test-script,39,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:68,safety,patch,patch,68,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:89,safety,robust,robust,89,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:106,safety,test,test,106,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:120,safety,patch,patch,120,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:68,security,patch,patch,68,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:120,security,patch,patch,120,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:39,testability,test,test-script,39,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:106,testability,test,test,106,> @eguiraud would you mind trying your test-script with the current patch? would be more robust to have a test with the patch :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:38,deployability,fail,failing,38,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:204,performance,content,contents,204,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:38,reliability,fail,failing,38,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:32,safety,test,tests,32,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:90,safety,test,tests,90,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:32,testability,test,tests,32,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:90,testability,test,tests,90,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:121,usability,behavi,behavior,121,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:159,usability,document,documentation,159,"It seems that there already >10 tests failing because of this PR. So either we change the tests, or we do not change the behavior of TH1F but just the doxygen documentation warning that any TH1F with bin contents over 1e7 is probably 'corrupt data'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:830,availability,state,state,830,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:52,deployability,patch,patch,52,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:398,deployability,patch,patch,398,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:515,energy efficiency,Draw,Draw,515,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:712,energy efficiency,Draw,Draw,712,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:830,integrability,state,state,830,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:333,reliability,doe,does,333,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:52,safety,patch,patch,52,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:110,safety,test,test,110,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:398,safety,patch,patch,398,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:52,security,patch,patch,52,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:398,security,patch,patch,398,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:110,testability,test,test,110,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:470,usability,behavi,behavior,470,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:843,usability,document,documentation,843,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:889,usability,close,close,889,"> Unfortunately the reproducer is not fixed by this patch, see the following (which can become the seed for a test to be added to the PR). Thanks! What I was suggesting with this fix is to enforce that all TH1F converge towards a maximum value of 16,777,216, and describe it well in the description. Your picture looks like the TH1F does exactly that. Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. Now... another story is why TTree::Draw still uses TH1F. Maybe to open in a separate issue. The issue https://github.com/root-project/root/issues/6671 shows that RDataFrame uses instead a correct TH1D which 'reveals' that the TTree.Draw example was reaching the TH1F overflow. Another option would not to add any explicit checks in the code and just state in the documentation that whenever you see something close to 16e6 with TH1F, distrust and use TH1D instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:48,deployability,patch,patch,48,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:296,modifiability,interm,intermediate,296,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:256,performance,content,content,256,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:48,safety,patch,patch,48,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:48,security,patch,patch,48,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:375,security,sign,signal,375,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:120,usability,behavi,behavior,120,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:201,usability,user,user,201,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:389,usability,user,user,389,"> Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. I see. But then I must come back to @lmoneta's question . > How will a user know if the histogram has reached its maximum bin content ? Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:50,deployability,patch,patch,50,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:315,modifiability,interm,intermediate,315,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:269,performance,content,content,269,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:504,reliability,doe,doesn,504,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:50,safety,patch,patch,50,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:50,security,patch,patch,50,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:394,security,sign,signal,394,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:122,usability,behavi,behavior,122,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:214,usability,user,user,214,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:408,usability,user,user,408,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:480,usability,document,documentation,480,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/pull/14271:637,usability,user,user,637,"> > Maybe it worked already like that without the patch, but just by chance, whereas now we are defining / enforcing that behavior. > . > I see. But then I must come back to @lmoneta's question. > . > > How will a user know if the histogram has reached its maximum bin content ? > . > Maybe I've missed some of the intermediate developments of this PR. What is the verdict there? That we can't signal to the user that their histogram has reached a limit? I guess only through the documentation. To me it doesn't make sense to define a bit or limit here if there are AddBinContent with or without weights. That changes the limit, and the user can call both functions one after the other, and the limit for the first case is different than for the second. So it's an ill posed problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14271
https://github.com/root-project/root/issues/14272:158,performance,time,time,158,"Notice that to trigger the issue is enough to have an header `bar.h`:. ```. #ifndef _STRUCT_TIMESPEC. #define _STRUCT_TIMESPEC 1. /* POSIX.1b structure for a time value. This is like a `struct timeval' but. * has nanoseconds instead of microseconds. */. struct timespec. {. int tv_sec; /* Seconds. */. int tv_nsec; /* Nanoseconds. */. };. #endif. ```. and simply include it with `#include ""bar.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:193,performance,time,timeval,193,"Notice that to trigger the issue is enough to have an header `bar.h`:. ```. #ifndef _STRUCT_TIMESPEC. #define _STRUCT_TIMESPEC 1. /* POSIX.1b structure for a time value. This is like a `struct timeval' but. * has nanoseconds instead of microseconds. */. struct timespec. {. int tv_sec; /* Seconds. */. int tv_nsec; /* Nanoseconds. */. };. #endif. ```. and simply include it with `#include ""bar.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:261,performance,time,timespec,261,"Notice that to trigger the issue is enough to have an header `bar.h`:. ```. #ifndef _STRUCT_TIMESPEC. #define _STRUCT_TIMESPEC 1. /* POSIX.1b structure for a time value. This is like a `struct timeval' but. * has nanoseconds instead of microseconds. */. struct timespec. {. int tv_sec; /* Seconds. */. int tv_nsec; /* Nanoseconds. */. };. #endif. ```. and simply include it with `#include ""bar.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:356,testability,simpl,simply,356,"Notice that to trigger the issue is enough to have an header `bar.h`:. ```. #ifndef _STRUCT_TIMESPEC. #define _STRUCT_TIMESPEC 1. /* POSIX.1b structure for a time value. This is like a `struct timeval' but. * has nanoseconds instead of microseconds. */. struct timespec. {. int tv_sec; /* Seconds. */. int tv_nsec; /* Nanoseconds. */. };. #endif. ```. and simply include it with `#include ""bar.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:356,usability,simpl,simply,356,"Notice that to trigger the issue is enough to have an header `bar.h`:. ```. #ifndef _STRUCT_TIMESPEC. #define _STRUCT_TIMESPEC 1. /* POSIX.1b structure for a time value. This is like a `struct timeval' but. * has nanoseconds instead of microseconds. */. struct timespec. {. int tv_sec; /* Seconds. */. int tv_nsec; /* Nanoseconds. */. };. #endif. ```. and simply include it with `#include ""bar.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:213,deployability,version,version,213,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:236,deployability,modul,module,236,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:712,deployability,build,build,712,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:213,integrability,version,version,213,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:735,interoperability,compatib,compatible,735,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:746,interoperability,platform,platforms,746,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:213,modifiability,version,version,213,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:236,modifiability,modul,module,236,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:221,performance,cach,cached,221,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:236,safety,modul,module,236,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++. #ifdef _TIME_H. #define _STRUCT_TIMESPEC. #endif. ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/issues/14272:63,usability,user,users,63,"Dear @ktf , thanks for this change. It is great that the Alice users can benefit from all the nice features that ended up in 6.30! . We are investigating on our side now whether this issue can be fixed in ROOT upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14272
https://github.com/root-project/root/pull/14275:10,deployability,version,version,10,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:364,deployability,continu,continuous-integration-workflow,364,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:10,integrability,version,version,10,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:375,integrability,integr,integration-workflow,375,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:375,interoperability,integr,integration-workflow,375,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:10,modifiability,version,version,10,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:375,modifiability,integr,integration-workflow,375,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:375,reliability,integr,integration-workflow,375,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:230,safety,test,tests,230,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:375,security,integr,integration-workflow,375,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:230,testability,test,tests,230,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:375,testability,integr,integration-workflow,375,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:354,usability,workflow,workflows,354,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14275:387,usability,workflow,workflow,387,"> Rebased version of this PR, which already got approved:. > . > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14275
https://github.com/root-project/root/pull/14276:54,safety,test,tests,54,"thanks @vepadulano , I have already started the cmssw tests https://github.com/cms-sw/root/pull/191",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:54,testability,test,tests,54,"thanks @vepadulano , I have already started the cmssw tests https://github.com/cms-sw/root/pull/191",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:78,reliability,doe,does,78,Let’s hold off this fix since we probably need to understand why we constexpr does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:50,testability,understand,understand,50,Let’s hold off this fix since we probably need to understand why we constexpr does not work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:474,deployability,releas,release,474,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:179,modifiability,variab,variables,179,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:260,reliability,doe,doesn,260,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:355,reliability,pra,practical,355,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:147,safety,test,test,147,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:287,safety,test,tested,287,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:147,testability,test,test,147,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:287,testability,test,tested,287,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:376,testability,understand,understanding,376,"Hi @vgvassilev , I agree this is not a general fix for the root of the issue, rather it is a way to eliminate the problem highlighted in the CMSSW test. And indeed, marking those variables as `constexpr` is not enough. Also, marking them as `inline constexpr` doesn't solve the problem (tested on my machine), I was hoping that it would have had the same practical result. My understanding is that this is strictly required for CMS to adopt ROOT 6.30 in their next software release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:181,deployability,releas,release,181,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:410,deployability,manag,manage,410,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:410,energy efficiency,manag,manage,410,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:478,energy efficiency,green,green,478,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:80,reliability,doe,does,80,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:364,reliability,doe,does,364,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:410,safety,manag,manage,410,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:433,security,trust,trust,433,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:52,testability,understand,understand,52,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/pull/14276:201,usability,close,closes,201,"> Let’s hold off this fix since we probably need to understand why we constexpr does not work. We all agree that a proper fix in Cling is what is needed. However, the last open pre-release of CMSSW 14 closes on January 23rd: if this problem is not fixed, CMS will not be able to pick ROOT 6.30. Merging the changes proposed by this PR fixes known CMS problems and does not exclude a proper fix of Cling. If we manage to have a Cling trust in the next few days and CMS gives its green light, we can always revert the changes in this PR, right? (Edit: Philippe commented while I was writing. I agree with him.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14276
https://github.com/root-project/root/issues/14277:45,usability,confirm,confirmation,45,This was fixed by #14287 and we have further confirmation at #14352,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14277
https://github.com/root-project/root/issues/14283:9,availability,avail,available,9,"A fix is available in the master branch, @Om4143 can you please confirm that this works for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:9,reliability,availab,available,9,"A fix is available in the master branch, @Om4143 can you please confirm that this works for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:9,safety,avail,available,9,"A fix is available in the master branch, @Om4143 can you please confirm that this works for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:9,security,availab,available,9,"A fix is available in the master branch, @Om4143 can you please confirm that this works for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:64,usability,confirm,confirm,64,"A fix is available in the master branch, @Om4143 can you please confirm that this works for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:191,reliability,pra,pray,191,"As I have checked the root file using new development. and converter is working for root file and not seen any persistent problem so far. So In my case, its looks working fine. Thanks a lot :pray:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:41,integrability,messag,message,41,Why for a small tessellated geometry the message appears . Tile degenerated 2: Length of sides of facet are too small. ![Carbonfiber_ring](https://github.com/root-project/root/assets/62834588/136f5857-781f-44c1-a6c5-9ce2398b61e9).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/issues/14283:41,interoperability,messag,message,41,Why for a small tessellated geometry the message appears . Tile degenerated 2: Length of sides of facet are too small. ![Carbonfiber_ring](https://github.com/root-project/root/assets/62834588/136f5857-781f-44c1-a6c5-9ce2398b61e9).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14283
https://github.com/root-project/root/pull/14284:28,availability,failur,failures,28,"> For more details on these failures, see [this check](https://github.com/root-project/root/runs/19839583812). Thanks! And sure, sorry, I forgot in my previous PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14284
https://github.com/root-project/root/pull/14284:28,deployability,fail,failures,28,"> For more details on these failures, see [this check](https://github.com/root-project/root/runs/19839583812). Thanks! And sure, sorry, I forgot in my previous PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14284
https://github.com/root-project/root/pull/14284:28,performance,failur,failures,28,"> For more details on these failures, see [this check](https://github.com/root-project/root/runs/19839583812). Thanks! And sure, sorry, I forgot in my previous PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14284
https://github.com/root-project/root/pull/14284:28,reliability,fail,failures,28,"> For more details on these failures, see [this check](https://github.com/root-project/root/runs/19839583812). Thanks! And sure, sorry, I forgot in my previous PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14284
https://github.com/root-project/root/pull/14287:5,deployability,patch,patch,5,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:217,deployability,patch,patch,217,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:367,deployability,patch,patch,367,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:30,performance,perform,performance,30,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:400,reliability,doe,does,400,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:5,safety,patch,patch,5,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:217,safety,patch,patch,217,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:367,safety,patch,patch,367,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:5,security,patch,patch,5,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:217,security,patch,patch,217,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:367,security,patch,patch,367,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:30,usability,perform,performance,30,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:125,usability,help,helps,125,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing? i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:49,deployability,patch,patch,49,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:56,deployability,build,building,56,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:138,deployability,Releas,Release,138,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:354,deployability,patch,patch,354,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1572,deployability,log,log,1572,"t/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1701,deployability,log,log,1701,"ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #1427",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1778,deployability,patch,patch,1778," ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2735,deployability,log,log,2735," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2864,deployability,log,log,2864," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:630,performance,time,time,630,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:664,performance,cach,caches,664,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:680,performance,time,time,680,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1796,performance,time,time,1796,"ile python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gEr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1830,performance,cach,caches,1830,"awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1843,performance,time,time,1843,"' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:49,safety,patch,patch,49,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:354,safety,patch,patch,354,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:399,safety,hot,hotfixes,399,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:660,safety,hot,hot,660,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1572,safety,log,log,1572,"t/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1701,safety,log,log,1701,"ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #1427",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1778,safety,patch,patch,1778," ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1826,safety,hot,hot,1826,"&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kEr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2735,safety,log,log,2735," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2864,safety,log,log,2864," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:49,security,patch,patch,49,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:354,security,patch,patch,354,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:884,security,access,access,884,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1572,security,log,log,1572,"t/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1701,security,log,log,1701,"ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #1427",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1778,security,patch,patch,1778," ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2047,security,access,access,2047," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2735,security,log,log,2735," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2864,security,log,log,2864," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1572,testability,log,log,1572,"t/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1579,testability,trace,trace,1579,"b371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1701,testability,log,log,1701,"ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #1427",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2735,testability,log,log,2735," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2742,testability,trace,trace,2742," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2864,testability,log,log,2864," with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:725,usability,user,user,725,"Reporting some numbers from my machine with this patch, building ROOT with the following cmake invocation:. ```. cmake -DCMAKE_BUILD_TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME. ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time. Taken after a few runs, hot caches. ```. $: time python -c ""import ROOT"". real	0m0.791s. user	0m0.592s. sys	0m0.203s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1888,usability,user,user,1888,"(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l. 338. ```. ## After this patch. ### Import time. Taken after a few runs, hot caches. ```. time python -c ""import ROOT"". real	0m0.792s. user	0m0.600s. sys	0m0.197s. ```. ### strace file stats. ```. strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 206 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 181 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10123 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ### openat stats with the two symbols related to #14277 . ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | sed 's|.*, ""||;s|"".*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:25,deployability,patch,patch,25,Don’t spend time on this patch just yet. I have more local changes that I am going to upload soon-ish.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:12,performance,time,time,12,Don’t spend time on this patch just yet. I have more local changes that I am going to upload soon-ish.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:25,safety,patch,patch,25,Don’t spend time on this patch just yet. I have more local changes that I am going to upload soon-ish.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:25,security,patch,patch,25,Don’t spend time on this patch just yet. I have more local changes that I am going to upload soon-ish.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:52,energy efficiency,current,current,52,"@vepadulano, can you run your tests again. With the current changes we support `constexpr` and it should be fast as we do not even try to look for the symbols but we evaluate the initializer instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:30,safety,test,tests,30,"@vepadulano, can you run your tests again. With the current changes we support `constexpr` and it should be fast as we do not even try to look for the symbols but we evaluate the initializer instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:30,testability,test,tests,30,"@vepadulano, can you run your tests again. With the current changes we support `constexpr` and it should be fast as we do not even try to look for the symbols but we evaluate the initializer instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:71,usability,support,support,71,"@vepadulano, can you run your tests again. With the current changes we support `constexpr` and it should be fast as we do not even try to look for the symbols but we evaluate the initializer instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2,deployability,Updat,Updates,2,"# Updates . ## Baseline: master before #14261 and #14276 . ```. time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1121,deployability,log,log,1121,"rint(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1240,deployability,log,log,1240,"ing::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2353,deployability,log,log,2353,"Level);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2482,deployability,log,log,2482,"g::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3571,deployability,log,log,3571," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3700,deployability,log,log,3700," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:64,performance,time,time,64,"# Updates . ## Baseline: master before #14261 and #14276 . ```. time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1304,performance,time,time,1304,"c -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2522,performance,time,time,2522,"*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2,safety,Updat,Updates,2,"# Updates . ## Baseline: master before #14261 and #14276 . ```. time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1121,safety,log,log,1121,"rint(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1240,safety,log,log,1240,"ing::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1289,safety,hot,hotfixes,1289,"ep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2353,safety,log,log,2353,"Level);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2482,safety,log,log,2482,"g::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3571,safety,log,log,3571," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3700,safety,log,log,3700," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2,security,Updat,Updates,2,"# Updates . ## Baseline: master before #14261 and #14276 . ```. time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:486,security,access,access,486,"# Updates . ## Baseline: master before #14261 and #14276 . ```. time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1121,security,log,log,1121,"rint(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1240,security,log,log,1240,"ing::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1726,security,access,access,1726,"IGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2353,security,log,log,2353,"Level);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2482,security,log,log,2482,"g::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2944,security,access,access,2944," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3571,security,log,log,3571," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3700,security,log,log,3700," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1121,testability,log,log,1121,"rint(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1128,testability,trace,trace,1128,"T.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1240,testability,log,log,1240,"ing::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2353,testability,log,log,2353,"Level);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2360,testability,trace,trace,2360,"rint(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2482,testability,log,log,2482,"g::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3571,testability,log,log,3571," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3578,testability,trace,trace,3578," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3700,testability,log,log,3700," 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:168,usability,user,user,168,"# Updates . ## Baseline: master before #14261 and #14276 . ```. time python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. real	0m1.198s. user	0m0.706s. sys	0m0.475s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1408,usability,user,user,1408,"r)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 10455 newfstatat(3, . 3997 newfstatat(4, . 31461 newfstatat(AT_FDCWD, . 19903 openat(AT_FDCWD, . 28769 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11626, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11628, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=11632, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. grep openat openat.log | wc -l. 19759. ```. ## Master after the two hotfixes. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.807s. user	0m0.620s. sys	0m0.183s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 34. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:2626,usability,user,user,2626,"evel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12038, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12040, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12044, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. ## This PR. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.612s. sys	0m0.191s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 1. nm -C $ROOTSYS/lib/*.so | grep kError | wc -l. 27. ```. ```. strace -e file python -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c. 1 -1. 1 3000. 219 access(. 2 chdir(. 1 execve(. 1 +++ exited with 0 +++. 184 getcwd(. 2 newfstatat(0, . 2 newfstatat(1, . 2 newfstatat(2, . 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12243, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12245, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12249, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:466,availability,operat,operations,466,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:677,deployability,patch,patch,677,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:923,deployability,releas,release,923,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1119,deployability,build,build,1119,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1125,deployability,artifact,artifacts,1125,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1173,deployability,instal,install,1173,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1350,deployability,build,build,1350,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1448,deployability,instal,install,1448,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:85,energy efficiency,current,current,85,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:401,energy efficiency,current,current,401,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:654,energy efficiency,current,current,654,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:902,energy efficiency,reduc,reduce-symbol-search-release,902,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:66,performance,perform,performance,66,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1419,reliability,doe,doesn,1419,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:115,safety,hot,hotfixes,115,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:677,safety,patch,patch,677,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1264,safety,test,tests,1264,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:677,security,patch,patch,677,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:935,security,session,sessionviewer,935,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1369,security,hardcod,hardcoded,1369,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:762,testability,understand,understand,762,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1264,testability,test,tests,1264,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:66,usability,perform,performance,66,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:132,usability,support,supporting,132,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e. ```. 532 newfstatat(3, . 29 newfstatat(4, . 10141 newfstatat(AT_FDCWD, . 546 openat(AT_FDCWD, . 843 readlink(. ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example. ```. newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory). ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:751,deployability,build,build,751,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:87,energy efficiency,current,current,87,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:68,performance,perform,performance,68,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:117,safety,hot,hotfixes,117,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:596,testability,understand,understand,596,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:707,testability,verif,verify,707,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:68,usability,perform,performance,68,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:134,usability,support,supporting,134,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:443,usability,support,supports,443,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:204,deployability,instal,install,204,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:252,integrability,sub,substantial,252,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:212,performance,time,time,212,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:264,performance,perform,performance,264,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:157,testability,understand,understand,157,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:264,usability,perform,performance,264,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:277,energy efficiency,load,load,277,We understand how to fix them but that require reworking of rootcling to a good extent. When we have Interpreter::Declare (or similar) in rootcling we create a virtual file (input_line_N) and it gets stored in the pcms (also in the pch but we have 1 pch vs many pcms). When we load a pcm clang tries to stat the files to see if the sources are around.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:80,modifiability,exten,extent,80,We understand how to fix them but that require reworking of rootcling to a good extent. When we have Interpreter::Declare (or similar) in rootcling we create a virtual file (input_line_N) and it gets stored in the pcms (also in the pch but we have 1 pch vs many pcms). When we load a pcm clang tries to stat the files to see if the sources are around.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:277,performance,load,load,277,We understand how to fix them but that require reworking of rootcling to a good extent. When we have Interpreter::Declare (or similar) in rootcling we create a virtual file (input_line_N) and it gets stored in the pcms (also in the pch but we have 1 pch vs many pcms). When we load a pcm clang tries to stat the files to see if the sources are around.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:3,testability,understand,understand,3,We understand how to fix them but that require reworking of rootcling to a good extent. When we have Interpreter::Declare (or similar) in rootcling we create a virtual file (input_line_N) and it gets stored in the pcms (also in the pch but we have 1 pch vs many pcms). When we load a pcm clang tries to stat the files to see if the sources are around.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1467,deployability,log,log,1467,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1596,deployability,log,log,1596,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:136,energy efficiency,core,core,136,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:162,energy efficiency,core,core,162,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:230,energy efficiency,core,core,230,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:261,energy efficiency,core,core,261,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:614,energy efficiency,core,core,614,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:642,energy efficiency,core,core,642,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:712,energy efficiency,core,core,712,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:745,energy efficiency,core,core,745,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:316,integrability,pub,public,316,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1056,interoperability,standard,standard,1056,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1233,performance,time,time,1233,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1467,safety,log,log,1467,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1596,safety,log,log,1596,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1467,security,log,log,1467,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1596,security,log,log,1596,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1467,testability,log,log,1467,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1474,testability,trace,trace,1474,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1596,testability,log,log,1596,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1337,usability,user,user,1337,"> If it can be turned into a constexpr that would probably be better. Here are the numbers, after this PR + the diff. ```. diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h. index 7710169876..8181dc2563 100644. --- a/core/base/inc/TString.h. +++ b/core/base/inc/TString.h. @@ -277,7 +277,7 @@ private:. public:. enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };. enum ECaseCompare { kExact, kIgnoreCase };. - static const Ssiz_t kNPOS = ::kNPOS;. + static constexpr Ssiz_t kNPOS = ::kNPOS;. . TString(); // Null string. explicit TString(Ssiz_t ic); // Suggested capacity. diff --git a/core/base/src/TString.cxx b/core/base/src/TString.cxx. index 4087cdbb52..f6efde6a0a 100644. --- a/core/base/src/TString.cxx. +++ b/core/base/src/TString.cxx. @@ -54,12 +54,6 @@ as a TString, construct a TString from it, eg:. #include ""TVirtualMutex.h"". #include ""ThreadLocalStorage.h"". . -// Definition of the TString static data member. Declaration (even with. -// initialization) in the class body *is not* definition according to C++. -// standard. The definition must be explicitly done in one TU for ODR use. See. -// https://en.cppreference.com/w/cpp/language/definition. -const Ssiz_t TString::kNPOS;. ```. ```. time python -c ""import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)"". -1. 3000. real	0m0.805s. user	0m0.604s. sys	0m0.198s. ```. ```. nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```. ```. strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. grep openat openat.log | wc -l. 402. ```. So indeed, when this PR is merged we can make `TString::kNPOS` `constexpr` and remove also that symbol from `libCore.so` :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:87,deployability,updat,updated,87,Great. Several `const` at the end of `core/foundation/inc/RtypesCore.h` should also be updated in a similar manner (including `::kNPOS`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:38,energy efficiency,core,core,38,Great. Several `const` at the end of `core/foundation/inc/RtypesCore.h` should also be updated in a similar manner (including `::kNPOS`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:87,safety,updat,updated,87,Great. Several `const` at the end of `core/foundation/inc/RtypesCore.h` should also be updated in a similar manner (including `::kNPOS`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:87,security,updat,updated,87,Great. Several `const` at the end of `core/foundation/inc/RtypesCore.h` should also be updated in a similar manner (including `::kNPOS`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:23,testability,verif,verify,23,"@smuzaffar, can we run verify that this PR works with cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:17,safety,test,tests,17,"sure, started PR tests at https://github.com/cms-sw/root/pull/193",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:17,testability,test,tests,17,"sure, started PR tests at https://github.com/cms-sw/root/pull/193",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:58,deployability,patch,patch,58,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:37,safety,test,tests,37,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:58,safety,patch,patch,58,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:58,security,patch,patch,58,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:37,testability,test,tests,37,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:90,usability,confirm,confirm,90,"Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:60,deployability,patch,patch,60,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:183,deployability,updat,update,183,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:311,energy efficiency,load,loading,311,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:326,interoperability,share,shared,326,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:311,performance,load,loading,311,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:39,safety,test,tests,39,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:60,safety,patch,patch,60,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:152,safety,test,tests,152,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:183,safety,updat,update,183,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:60,security,patch,patch,60,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:183,security,updat,update,183,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:39,testability,test,tests,39,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:152,testability,test,tests,152,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:92,usability,confirm,confirm,92,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that? Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:50,deployability,fail,fails,50,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:170,deployability,fail,fail,170,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:180,performance,time,time,180,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:188,performance,time,time,188,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:50,reliability,fail,fails,50,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:170,reliability,fail,fail,170,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:164,safety,test,tests,164,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:5,testability,understand,understand,5,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:164,testability,test,tests,164,"> We understand why `roottest-python-basic-basic` fails on fedora38 and, if possible, fix the problem. I believe this is not related to this PR, some of the Python tests fail from time to time on Fedora 38 and Fedora 39. I suspect there are still GC-related issues with Python 3.11 and 3.12 that were never fully understood...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:796,availability,avail,available,796,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:200,deployability,releas,release,200,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:261,deployability,version,version,261,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:269,deployability,updat,updates,269,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:370,energy efficiency,Current,Currently,370,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:261,integrability,version,version,261,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:261,modifiability,version,version,261,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:110,performance,time,timescale,110,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:796,reliability,availab,available,796,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:87,safety,test,tested,87,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:269,safety,updat,updates,269,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:796,safety,avail,available,796,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:269,security,updat,updates,269,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:796,security,availab,available,796,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:87,testability,test,tested,87,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:229,usability,close,close,229,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:692,usability,document,document,692,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:826,usability,experien,experiencing,826,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605). Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:834,availability,avail,available,834,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:202,deployability,releas,release,202,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:263,deployability,version,version,263,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:271,deployability,updat,updates,271,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:404,energy efficiency,Current,Currently,404,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:263,integrability,version,version,263,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:263,modifiability,version,version,263,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1080,modifiability,concern,concerns,1080,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:112,performance,time,timescale,112,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:834,reliability,availab,available,834,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:89,safety,test,tested,89,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:271,safety,updat,updates,271,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:834,safety,avail,available,834,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:271,security,updat,updates,271,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:834,security,availab,available,834,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:89,testability,test,tested,89,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:1080,testability,concern,concerns,1080,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:231,usability,close,close,231,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:730,usability,document,document,730,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:864,usability,experien,experiencing,864,"> Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see [cms-sw/cmssw#43077 (comment)](https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605)). Currently, the CMS issue has been worked around, therefore ROOT 6.30 _can_ be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. > . > Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code. @dpiparo, I have made the changes that I agree with and responded to the rest of the comments. This PR seems to be ready to go from what concerns me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:109,energy efficiency,estimat,estimate,109,"Hi @hahnjo , @vgvassilev : thanks a lot for the exchanges and work on this topic. I was wondering if you can estimate an ETA for the merging of this nice work, key for addressing CMS (and LHCbs) current issues in a sustainable way and for the adoption of ROOT 6.30 by CMS in 2024.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:195,energy efficiency,current,current,195,"Hi @hahnjo , @vgvassilev : thanks a lot for the exchanges and work on this topic. I was wondering if you can estimate an ETA for the merging of this nice work, key for addressing CMS (and LHCbs) current issues in a sustainable way and for the adoption of ROOT 6.30 by CMS in 2024.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:215,energy efficiency,sustainab,sustainable,215,"Hi @hahnjo , @vgvassilev : thanks a lot for the exchanges and work on this topic. I was wondering if you can estimate an ETA for the merging of this nice work, key for addressing CMS (and LHCbs) current issues in a sustainable way and for the adoption of ROOT 6.30 by CMS in 2024.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:75,integrability,topic,topic,75,"Hi @hahnjo , @vgvassilev : thanks a lot for the exchanges and work on this topic. I was wondering if you can estimate an ETA for the merging of this nice work, key for addressing CMS (and LHCbs) current issues in a sustainable way and for the adoption of ROOT 6.30 by CMS in 2024.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14287:48,interoperability,exchang,exchanges,48,"Hi @hahnjo , @vgvassilev : thanks a lot for the exchanges and work on this topic. I was wondering if you can estimate an ETA for the merging of this nice work, key for addressing CMS (and LHCbs) current issues in a sustainable way and for the adoption of ROOT 6.30 by CMS in 2024.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14287
https://github.com/root-project/root/pull/14288:48,safety,test,test,48,"Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:90,security,ident,identity,90,"Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:48,testability,test,test,48,"Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:64,usability,confirm,confirm,64,"Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:50,safety,test,test,50,"> Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort? `StrEq` is the one. It has not been used until now in any other tests. That's why I did not find it immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:227,safety,test,tests,227,"> Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort? `StrEq` is the one. It has not been used until now in any other tests. That's why I did not find it immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:92,security,ident,identity,92,"> Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort? `StrEq` is the one. It has not been used until now in any other tests. That's why I did not find it immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:50,testability,test,test,50,"> Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort? `StrEq` is the one. It has not been used until now in any other tests. That's why I did not find it immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:227,testability,test,tests,227,"> Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort? `StrEq` is the one. It has not been used until now in any other tests. That's why I did not find it immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14288:66,usability,confirm,confirm,66,"> Yes I approved, with a small question about the test. Could you confirm it's checking for identity with the expected title string and not matching of some sort? `StrEq` is the one. It has not been used until now in any other tests. That's why I did not find it immediately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14288
https://github.com/root-project/root/pull/14289:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14289:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14289
https://github.com/root-project/root/pull/14290:182,interoperability,format,formatting,182,"Ok fair enough! For removing the `DISABLED` I would have not used `git revert` though, it's a one-line change that could have been done just like that. But I see the point of mixing formatting and functional changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14290
https://github.com/root-project/root/pull/14292:44,deployability,updat,updates,44,I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:44,safety,updat,updates,44,I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:44,security,updat,updates,44,I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:151,usability,progress,progresses,151,I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:46,deployability,updat,updates,46,"> I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further. Thank you very much, that's very much appreciated! I will look at this PR once the code style is synced again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:46,safety,updat,updates,46,"> I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further. Thank you very much, that's very much appreciated! I will look at this PR once the code style is synced again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:46,security,updat,updates,46,"> I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further. Thank you very much, that's very much appreciated! I will look at this PR once the code style is synced again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:153,usability,progress,progresses,153,"> I see there's been a number of coding style updates in the ROOT copy of xRooFit that I will need to pull over to the xRooFit repo first before this PR progresses any further. Thank you very much, that's very much appreciated! I will look at this PR once the code style is synced again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:7,deployability,updat,updated,7,"ok all updated now, I think/hope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:7,safety,updat,updated,7,"ok all updated now, I think/hope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14292:7,security,updat,updated,7,"ok all updated now, I think/hope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14292
https://github.com/root-project/root/pull/14293:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:126,deployability,upgrad,upgrade,126,Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:150,deployability,version,version,150,Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:150,integrability,version,version,150,Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:126,modifiability,upgrad,upgrade,126,Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:150,modifiability,version,version,150,Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:128,deployability,upgrad,upgrade,128,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Hello. Yes, I will do as you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:152,deployability,version,version,152,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Hello. Yes, I will do as you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:152,integrability,version,version,152,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Hello. Yes, I will do as you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:128,modifiability,upgrad,upgrade,128,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Hello. Yes, I will do as you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:152,modifiability,version,version,152,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Hello. Yes, I will do as you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:128,deployability,upgrad,upgrade,128,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:152,deployability,version,version,152,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:152,integrability,version,version,152,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:128,modifiability,upgrad,upgrade,128,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:152,modifiability,version,version,152,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:331,usability,guid,guide,331,"> Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. Okay, so I created a pull request https://github.com/wlav/cppyy/pull/207 as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:130,deployability,upgrad,upgrade,130,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:154,deployability,version,version,154,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:154,integrability,version,version,154,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:130,modifiability,upgrad,upgrade,130,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:154,modifiability,version,version,154,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:395,safety,review,review,395,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:395,testability,review,review,395,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:357,usability,guid,guide,357,"> > Can you propose these changes upstream in https://github.com/wlav/cppyy and backport the commit here. That would enable us to upgrade to the upstream version easier. > . > Okay, so I created a pull request [wlav/cppyy#207](https://github.com/wlav/cppyy/pull/207) as you suggested. But I am not sure how to backport the commit here. Would you be able to guide me how to do it? Once you get a review upstream then we can merge the same commit here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:121,safety,accid,accidentally,121,"> ou squ. I'm sorry I don't know what happened. Yesterday I tried to squash the commits, but I messed up something and I accidentally closed the PR. I have no idea how that happened. Nevertheless, the commits are now squashed. Is it possible to reopen the PR? I apologize for any inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:134,usability,close,closed,134,"> ou squ. I'm sorry I don't know what happened. Yesterday I tried to squash the commits, but I messed up something and I accidentally closed the PR. I have no idea how that happened. Nevertheless, the commits are now squashed. Is it possible to reopen the PR? I apologize for any inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14293:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14293
https://github.com/root-project/root/pull/14294:12,availability,failur,failures,12,None of the failures have anything to do with the PyROOT changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14294
https://github.com/root-project/root/pull/14294:12,deployability,fail,failures,12,None of the failures have anything to do with the PyROOT changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14294
https://github.com/root-project/root/pull/14294:12,performance,failur,failures,12,None of the failures have anything to do with the PyROOT changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14294
https://github.com/root-project/root/pull/14294:12,reliability,fail,failures,12,None of the failures have anything to do with the PyROOT changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14294
https://github.com/root-project/root/pull/14295:155,availability,Error,Error,155,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:211,availability,Error,Error,211,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1716,availability,Error,Error,1716,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3389,availability,Error,Error,3389,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5581,availability,error,errors,5581,"ex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Res",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6234,availability,Error,Error,6234,nt pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6616,availability,Error,Error,6616,output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6998,availability,Error,Error,6998,*************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG outp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8352,availability,Error,Error,8352,................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10676,availability,Error,Error,10676,"................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11058,availability,Error,Error,11058,"utput................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file resu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11442,availability,Error,Error,11442,"file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12607,availability,Error,Error,12607,****************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special cont,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12991,availability,Error,Error,12991,put................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13376,availability,Error,Error,13376,e result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13763,availability,Error,Error,13763,ult............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14472,availability,Error,Error,14472,.............................................. OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file re,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18680,availability,Error,Error,18680,"Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18736,availability,Error,Error,18736,"OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:0,deployability,Log,Log,0,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:148,deployability,Fail,Failed,148,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:204,deployability,FAIL,FAILED,204,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1673,deployability,FAIL,FAILED,1673,............................... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output.....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3346,deployability,FAIL,FAILED,3346,............................... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6191,deployability,FAIL,FAILED,6191,.................... OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result..................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6573,deployability,FAIL,FAILED,6573,with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6955,deployability,FAIL,FAILED,6955,el 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output..................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8309,deployability,FAIL,FAILED,8309,............................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9889,deployability,log,log,9889,25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9893,deployability,scale,scales,9893,atio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10201,deployability,Log,Log,10201,.. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10205,deployability,scale,scales,10205,. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10633,deployability,FAIL,FAILED,10633,"............................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. ********************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11015,deployability,FAIL,FAILED,11015,"................................. OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output.....................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11397,deployability,FAIL,FAILED,11397,"...................................... OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12564,deployability,FAIL,FAILED,12564,.................... OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12946,deployability,FAIL,FAILED,12946,................................. OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result.....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13331,deployability,FAIL,FAILED,13331,................................... OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13716,deployability,FAIL,FAILED,13716,................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14429,deployability,FAIL,FAILED,14429,.......................... OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output...................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18078,deployability,fail,failed,18078,"......... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18673,deployability,Fail,Failed,18673,"50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18729,deployability,FAIL,FAILED,18729,"...... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19155,deployability,FAIL,FAILED,19155,"***. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9893,energy efficiency,scale,scales,9893,atio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10205,energy efficiency,scale,scales,10205,. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15099,energy efficiency,draw,drawing,15099,..... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output..........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15221,energy efficiency,draw,drawing,15221,......... OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17032,energy efficiency,Draw,Draw,17032,............ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. ***************************************,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17363,energy efficiency,draw,drawing,17363,... OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17689,energy efficiency,Draw,DrawClone,17689, OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18348,energy efficiency,Cpu,Cpu,18348,"t 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20560,energy efficiency,Cpu,Cpu,20560,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18879,integrability,event,events,18879,"............................................. OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test mergin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19396,integrability,sub,subdirectories,19396,"*****************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19603,integrability,Event,Event,19603," ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ********************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19694,integrability,Event,Event,19694,"ression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19965,integrability,Event,Event,19965,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16780,interoperability,Coordinat,Coordinates,16780,OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output.................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5565,modifiability,paramet,parameters,5565," Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9893,modifiability,scal,scales,9893,atio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10205,modifiability,scal,scales,10205,. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17389,modifiability,variab,variables,17389,....................................... OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. ********************,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19107,modifiability,Reu,Reuse,19107,"***************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:155,performance,Error,Error,155,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:211,performance,Error,Error,211,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1716,performance,Error,Error,1716,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3389,performance,Error,Error,3389,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5581,performance,error,errors,5581,"ex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Res",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6234,performance,Error,Error,6234,nt pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6616,performance,Error,Error,6616,output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6847,performance,Time,Time,6847,............. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6998,performance,Error,Error,6998,*************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG outp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7229,performance,Time,Time,7229,0. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7553,performance,Time,Time,7553,.............. 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result...........................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8352,performance,Error,Error,8352,................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9893,performance,scale,scales,9893,atio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10205,performance,scale,scales,10205,. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10676,performance,Error,Error,10676,"................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11058,performance,Error,Error,11058,"utput................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file resu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11442,performance,Error,Error,11442,"file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12607,performance,Error,Error,12607,****************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special cont,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12991,performance,Error,Error,12991,put................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13376,performance,Error,Error,13376,e result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13763,performance,Error,Error,13763,ult............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14472,performance,Error,Error,14472,.............................................. OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file re,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16771,performance,Parallel,Parallel,16771,.......... OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18327,performance,Time,Time,18327,"............. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18348,performance,Cpu,Cpu,18348,"t 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18352,performance,Time,Time,18352,": Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript.....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18680,performance,Error,Error,18680,"Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18736,performance,Error,Error,18736,"OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20426,performance,I/O,I/O,20426,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20483,performance,I/O,I/O,20483,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20539,performance,Time,Time,20539,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20560,performance,Cpu,Cpu,20560,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20564,performance,Time,Time,20564,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:148,reliability,Fail,Failed,148,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:204,reliability,FAIL,FAILED,204,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1673,reliability,FAIL,FAILED,1673,............................... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output.....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3346,reliability,FAIL,FAILED,3346,............................... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6191,reliability,FAIL,FAILED,6191,.................... OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result..................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6573,reliability,FAIL,FAILED,6573,with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6955,reliability,FAIL,FAILED,6955,el 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output..................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8309,reliability,FAIL,FAILED,8309,............................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10633,reliability,FAIL,FAILED,10633,"............................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. ********************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11015,reliability,FAIL,FAILED,11015,"................................. OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output.....................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11397,reliability,FAIL,FAILED,11397,"...................................... OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12564,reliability,FAIL,FAILED,12564,.................... OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12946,reliability,FAIL,FAILED,12946,................................. OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result.....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13331,reliability,FAIL,FAILED,13331,................................... OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13716,reliability,FAIL,FAILED,13716,................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14429,reliability,FAIL,FAILED,14429,.......................... OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output...................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18078,reliability,fail,failed,18078,"......... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18673,reliability,Fail,Failed,18673,"50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18729,reliability,FAIL,FAILED,18729,"...... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19155,reliability,FAIL,FAILED,19155,"***. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:0,safety,Log,Log,0,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:59,safety,Test,Test,59,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:70,safety,test,test-stressgraphics,70,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:155,safety,Error,Error,155,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:211,safety,Error,Error,211,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:578,safety,Test,Test,578,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:901,safety,Test,Test,901,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1224,safety,Test,Test,1224, sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1547,safety,Test,Test,1547,***************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1716,safety,Error,Error,1716,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1928,safety,Test,Test,1928,..................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:2251,safety,Test,Test,2251,..................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPave,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:2574,safety,Test,Test,2574,..................................... OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result...........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:2897,safety,Test,Test,2897,........................ OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result..........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3220,safety,Test,Test,3220,........................ OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3389,safety,Error,Error,3389,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3599,safety,Test,Test,3599,....................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3923,safety,Test,Test,3923,"...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4247,safety,Test,Test,4247,"PaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4571,safety,Test,Test,4571,"..................... OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit paramete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4895,safety,Test,Test,4895,"..................... OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. ******************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5219,safety,Test,Test,5219,"..................... OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Refere",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5543,safety,Test,Test,5543,"..................... OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output.................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5581,safety,error,errors,5581,"ex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Res",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6064,safety,Test,Test,6064,...................... OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output...................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6234,safety,Error,Error,6234,nt pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6446,safety,Test,Test,6446,........................... OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output..............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6616,safety,Error,Error,6616,output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6828,safety,Test,Test,6828,................................ OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6998,safety,Error,Error,6998,*************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG outp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7210,safety,Test,Test,7210,5. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.............,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7534,safety,Test,Test,7534,................................. 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7577,safety,test,test,7577,. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7858,safety,Test,Test,7858,................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8182,safety,Test,Test,8182,..................... OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8352,safety,Error,Error,8352,................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8562,safety,Test,Test,8562,s: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Z,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8886,safety,Test,Test,8886,n a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9210,safety,Test,Test,9210,..................................... OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9534,safety,Test,Test,9534,..................... OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGrap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9858,safety,Test,Test,9858,..................... OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9889,safety,log,log,9889,25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10182,safety,Test,Test,10182,..................... OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output..............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10201,safety,Log,Log,10201,.. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10506,safety,Test,Test,10506,"..................... OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10676,safety,Error,Error,10676,"................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10888,safety,Test,Test,10888,"og scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output...................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11058,safety,Error,Error,11058,"utput................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file resu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11270,safety,Test,Test,11270,"........................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output..............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11442,safety,Error,Error,11442,"file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11789,safety,Test,Test,11789,"............................. OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result......................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12113,safety,Test,Test,12113,"........................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output...........................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12437,safety,Test,Test,12437,8. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output.............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12607,safety,Error,Error,12607,****************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special cont,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12819,safety,Test,Test,12819,................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12991,safety,Error,Error,12991,put................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13204,safety,Test,Test,13204,..................................... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13376,safety,Error,Error,13376,e result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13589,safety,Test,Test,13589,erence = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output.......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13763,safety,Error,Error,13763,ult............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13978,safety,Test,Test,13978, = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14302,safety,Test,Test,14302,....................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output.................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14472,safety,Error,Error,14472,.............................................. OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file re,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14684,safety,Test,Test,14684,.......................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output............,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15091,safety,compl,complex,15091,............. OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output..................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15205,safety,Test,Test,15205,........................... OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15529,safety,Test,Test,15529,...................... OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15853,safety,Test,Test,15853,...................... OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16177,safety,Test,Test,16177,************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16438,safety,Test,Test,16438,..................... OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16762,safety,Test,Test,16762,..................... OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17023,safety,Test,Test,17023,..................... OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. ******************************,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17347,safety,Test,Test,17347,..................... OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17671,safety,Test,Test,17671,..................... OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18072,safety,test,tests,18072,"............... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18584,safety,Test,Test,18584,"................. OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18595,safety,test,test-stress,18595,".. OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyz",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18680,safety,Error,Error,18680,"Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18736,safety,Error,Error,18736,"OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18858,safety,test,test,18858,".... OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18955,safety,Test,Test,18955,"................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct reb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19023,safety,Test,Test,19023,"****************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree bran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19091,safety,Test,Test,19091,"********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19246,safety,Test,Test,19246,"******************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19255,safety,Test,Test,19255,"*********************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ***************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19314,safety,Test,Test,19314,"hics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19323,safety,Test,Test,19323,"l Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19382,safety,Test,Test,19382,"************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. *****************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19391,safety,Test,Test,19391,"***************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19450,safety,Test,Test,19450,"MARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19518,safety,Test,Test,19518,"*******************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19586,safety,Test,Test,19586," #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. **",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19654,safety,Test,Test,19654,"..............***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19723,safety,Test,Test,19723,"ex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. *************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19733,safety,Test,Test,19733,"|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ***********************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19792,safety,Test,Test,19792,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19824,safety,test,test,19824,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19861,safety,Test,Test,19861,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19871,safety,Test,Test,19871,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19930,safety,Test,Test,19930,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19979,safety,test,test,19979,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19999,safety,Test,Test,19999,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20068,safety,Test,Test,20068,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20083,safety,test,test,20083,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20137,safety,Test,Test,20137,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20147,safety,Test,Test,20147,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:0,security,Log,Log,0,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9889,security,log,log,9889,25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10201,security,Log,Log,10201,.. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15091,security,compl,complex,15091,............. OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output..................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17717,security,access,access,17717,..................................... OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:0,testability,Log,Log,0,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:59,testability,Test,Test,59,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:70,testability,test,test-stressgraphics,70,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:578,testability,Test,Test,578,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:901,testability,Test,Test,901,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1224,testability,Test,Test,1224, sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1547,testability,Test,Test,1547,***************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1928,testability,Test,Test,1928,..................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:2251,testability,Test,Test,2251,..................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPave,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:2574,testability,Test,Test,2574,..................................... OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result...........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:2897,testability,Test,Test,2897,........................ OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result..........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3220,testability,Test,Test,3220,........................ OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result.........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3599,testability,Test,Test,3599,....................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3923,testability,Test,Test,3923,"...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4247,testability,Test,Test,4247,"PaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad......",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4571,testability,Test,Test,4571,"..................... OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit paramete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4895,testability,Test,Test,4895,"..................... OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. ******************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5219,testability,Test,Test,5219,"..................... OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Refere",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5543,testability,Test,Test,5543,"..................... OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output.................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6064,testability,Test,Test,6064,...................... OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output...................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6446,testability,Test,Test,6446,........................... OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output..............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6828,testability,Test,Test,6828,................................ OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7210,testability,Test,Test,7210,5. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.............,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7534,testability,Test,Test,7534,................................. 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7577,testability,test,test,7577,. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:7858,testability,Test,Test,7858,................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8182,testability,Test,Test,8182,..................... OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result........................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8562,testability,Test,Test,8562,s: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Z,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8886,testability,Test,Test,8886,n a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9210,testability,Test,Test,9210,..................................... OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9534,testability,Test,Test,9534,..................... OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGrap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9858,testability,Test,Test,9858,..................... OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:9889,testability,log,log,9889,25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10182,testability,Test,Test,10182,..................... OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output..............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10201,testability,Log,Log,10201,.. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10506,testability,Test,Test,10506,"..................... OK. Test 27: TGraph 2 (Exclusion Zone)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10888,testability,Test,Test,10888,"og scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output...................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11270,testability,Test,Test,11270,"........................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output..............",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11789,testability,Test,Test,11789,"............................. OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result......................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12113,testability,Test,Test,12113,"........................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output...........................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12437,testability,Test,Test,12437,8. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output.............................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12819,testability,Test,Test,12819,................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13204,testability,Test,Test,13204,..................................... OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output....................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13589,testability,Test,Test,13589,erence = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output.......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13978,testability,Test,Test,13978, = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result......................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14302,testability,Test,Test,14302,....................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output.................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14684,testability,Test,Test,14684,.......................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output............,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15205,testability,Test,Test,15205,........................... OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15529,testability,Test,Test,15529,...................... OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:15853,testability,Test,Test,15853,...................... OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16177,testability,Test,Test,16177,************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16438,testability,Test,Test,16438,..................... OK. C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:16762,testability,Test,Test,16762,..................... OK. C file result............................................. OK. Test 44: TImage.................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output...........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17023,testability,Test,Test,17023,..................... OK. PNG output................................................ OK. C file result............................................. OK. Test 45: Zoom/UnZoom a collection of TF1........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. ******************************,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17347,testability,Test,Test,17347,..................... OK. PNG output................................................ OK. Test 46: Zoom/UnZoom a fitted histogram............................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:17671,testability,Test,Test,17671,..................... OK. C file result............................................. OK. Test 47: Parallel Coordinates...................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. Test 48: Draw a pad and clone it................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18072,testability,test,tests,18072,"............... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 49: Ntuple drawing with alphanumeric variables................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18584,testability,Test,Test,18584,"................. OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18595,testability,test,test-stress,18595,".. OK. C file result............................................. OK. Test 50: TH2Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyz",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18858,testability,test,test,18858,".... OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18955,testability,Test,Test,18955,"................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct reb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19023,testability,Test,Test,19023,"****************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree bran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19091,testability,Test,Test,19091,"********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19246,testability,Test,Test,19246,"******************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19255,testability,Test,Test,19255,"*********************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ***************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19314,testability,Test,Test,19314,"hics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19323,testability,Test,Test,19323,"l Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19382,testability,Test,Test,19382,"************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. *****************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19391,testability,Test,Test,19391,"***************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19450,testability,Test,Test,19450,"MARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19518,testability,Test,Test,19518,"*******************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19586,testability,Test,Test,19586," #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. **",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19654,testability,Test,Test,19654,"..............***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19723,testability,Test,Test,19723,"ex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. *************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19733,testability,Test,Test,19733,"|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ***********************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19792,testability,Test,Test,19792,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19824,testability,test,test,19824,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19861,testability,Test,Test,19861,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19871,testability,Test,Test,19871,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19930,testability,Test,Test,19930,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19979,testability,test,test,19979,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:19999,testability,Test,Test,19999,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20068,testability,Test,Test,20068,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20083,testability,test,test,20083,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20137,testability,Test,Test,20137,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:20147,testability,Test,Test,20147,"***************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test chains of Trees using the 10 files............... OK. Test 12 : Compare histograms of test 9 and 11................... OK. Test 13 : Test merging files of a chain......................... OK. Test 14 : Check correct rebuilt of Event.root in test 13........ OK. Test 15 : Divert Tree branches to separate files................ OK. Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK. Test 17 : Test mkdir............................................ OK. ******************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. ******************************************************************. stress : Total I/O = 549.8 Mbytes, I = 403.3, O = 146.5. stress : Compr I/O = 375.8 Mbytes, I = 273.7, O = 102.1. stress : Real Time = 14.32 seconds Cpu Time = 13.84 seconds. ******************************************************************. * ROOTMARKS =2682.7 * Root6.30/02 20231127/0. ******************************************************************. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:155,usability,Error,Error,155,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:211,usability,Error,Error,211,Log without the change with the new library:. ```. 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:1716,usability,Error,Error,1716,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 2: TMarker................................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 3: TPolyLine................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 4: Fill patterns............................................. OK. PDF output.......................................... 4 FAILED. Result = 19240. Reference = 19386. Error = 146 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 5: TText 1 (Text attributes)................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 6: TText 2 (A very long text string)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:3389,usability,Error,Error,3389,put................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 7: TLatex 1.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 8: TLatex 2.................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14289. Reference = 14377. Error = 88 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:4587,usability,command,commands,4587,"... OK. Test 10: TLatex 4 (Greek letters).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 11: TLatex 5 (Mathematical Symbols)........................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 12: Text kerning.............................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 13: TLatex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:5581,usability,error,errors,5581,"ex commands #kern, #lower, #it and #bf................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 14: TMathText................................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Res",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6234,usability,Error,Error,6234,nt pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 16: Stat and fit parameters with errors....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6616,usability,Error,Error,6616,output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting High Level 2D Primitives - S T R E S S *. **********************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:6998,usability,Error,Error,6998,*************************************************************. Test 17: TGaxis 1.................................................. OK. PDF output......................................... 17 FAILED. Result = 21385. Reference = 21520. Error = 135 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 18: TGaxis 2.................................................. OK. PDF output......................................... 18 FAILED. Result = 19137. Reference = 19305. Error = 168 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 19: TGaxis 3 (Time on axis)................................... OK. PDF output......................................... 19 FAILED. Result = 42763. Reference = 42926. Error = 163 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 20: TGaxis 4 (Time on axis)................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG outp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:8352,usability,Error,Error,8352,................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 21: TGaxis 5 (Time on axis: reference test)................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 22: Alphanumeric labels in a 1-d histogram.................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 23: TEllipse.................................................. OK. PDF output......................................... 23 FAILED. Result = 15194. Reference = 15272. Error = 78 (was 50). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 24: Feynman diagrams.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 25: Ratio plot................................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 26: TGraph 1.................................................. OK. PDF output................................................ OK. JPG output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:10676,usability,Error,Error,10676,"................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 28: TGraph 3 (Fitting and log scales)......................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11058,usability,Error,Error,11058,"utput................................................ OK. C file result............................................. OK. Test 29: TGraph 4 (Log scales setting order)....................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file resu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:11442,usability,Error,Error,11442,"file result............................................. OK. Test 30: TMultigraph and TGraphErrors.............................. OK. PDF output......................................... 30 FAILED. Result = 17994. Reference = 18198. Error = 204 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 31: All Kind of TMultigraph................................... OK. PDF output......................................... 31 FAILED. Result = 27004. Reference = 27176. Error = 172 (was 150). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 32: TGraph, TArc, TPalette and TColor......................... OK. PDF output......................................... 32 FAILED. Result = 709766. Reference = 712308. Error = 2542 (was 500). JPG output................................................ OK. PNG output................................................ OK. **********************************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12607,usability,Error,Error,12607,****************************************************. * Starting High Level 3D Primitives - S T R E S S *. **********************************************************************. Test 33: Basic 2D options.......................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special cont,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:12991,usability,Error,Error,12991,put................................................ OK. C file result............................................. OK. Test 34: Text option............................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13376,usability,Error,Error,13376,e result............................................. OK. Test 35: Contour options........................................... OK. PDF output......................................... 35 FAILED. Result = 86601. Reference = 87126. Error = 525 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:13763,usability,Error,Error,13763,ult............................................. OK. Test 36: Lego options.............................................. OK. PDF output......................................... 36 FAILED. Result = 154868. Reference = 156361. Error = 1493 (was 500). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 37: Surface options........................................... OK. PDF output......................................... 37 FAILED. Result = 223580. Reference = 225206. Error = 1626 (was 750). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:14472,usability,Error,Error,14472,.............................................. OK. C file result............................................. OK. Test 38: Special contour options (AITOFF etc.)..................... OK. PDF output......................................... 38 FAILED. Result = 1282421. Reference = 1292739. Error = 10318 (was 8000). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 39: TGraph2D 1 (TRI2 and P0).................................. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 40: TGraph2D 2 (COL and P).................................... OK. PDF output......................................... 40 FAILED. Result = 56184. Reference = 56877. Error = 693 (was 250). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 41: TGraph2D 3 (CONT5)........................................ OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * Starting complex drawing and TPad - S T R E S S *. **********************************************************************. Test 42: Ntuple drawing and TPad................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file re,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18680,usability,Error,Error,18680,"Poly.(DrawClone() and remote file access).............. OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/pull/14295:18736,usability,Error,Error,18736,"OK. PDF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. **********************************************************************. * 14 tests failed. :-(. **********************************************************************. * SYS: Linux f8ba050420bd494ca70b8db8a2fc3590 6.5.10-200.fc38.aarch. **********************************************************************. * stressGraphics: Real Time = 39.32 seconds Cpu Time = 30.39 seconds. **********************************************************************. * ROOTMARKS =1333.4 * Root 6.30/02 20231127/0. **********************************************************************. ```. ```. 360/1311 Test #318: test-stress ...............................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 14.65 sec. ******************************************************************. * Starting R O O T - S T R E S S test suite with 1000 events. ******************************************************************. Test 1 : Functions, Random Numbers, Histogram Fits............. OK. Test 2 : Check size & compression factor of a Root file........ OK. Test 3 : Purge, Reuse of gaps in TFile......................... FAILED. File size= 51850 (expected 52090 +/- 150). Comp Fact= 2.05 (expected 2.1 +/- 0.3). Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK. Test 5 : Test graphics & Postscript............................ OK. Test 6 : Test subdirectories in a Root file.................... OK. Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK. Test 8 : Trees split and compression modes..................... OK. Test 9 : Analyze Event.root file of stress 8................... OK. Test 10 : Create 10 files starting from Event.root.............. OK. Test 11 : Test c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14295
https://github.com/root-project/root/issues/14296:205,deployability,stack,stackcollapse-perf,205,"As an additional info, see these two flamegraphs obtained for master vs `runtime_cxxmodules=OFF`. ```. perf record --call-graph=fp -F 1000 python -c ""import ROOT"". perf script --no-demangle | c++filt -p | stackcollapse-perf.pl | flamegraph.pl -w 1920 --colors java > FLAMEGRAPH.svg. ```. https://cernbox.cern.ch/s/JAXMffKI4WdxlSs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14296
https://github.com/root-project/root/pull/14298:63,performance,time,times,63,Would it be possible to write a test? Something that otherwise times out perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14298
https://github.com/root-project/root/pull/14298:32,safety,test,test,32,Would it be possible to write a test? Something that otherwise times out perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14298
https://github.com/root-project/root/pull/14298:32,testability,test,test,32,Would it be possible to write a test? Something that otherwise times out perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14298
https://github.com/root-project/root/pull/14298:36,safety,review,review,36,It is already written and ready for review: https://github.com/root-project/roottest/pull/998,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14298
https://github.com/root-project/root/pull/14298:36,testability,review,review,36,It is already written and ready for review: https://github.com/root-project/roottest/pull/998,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14298
https://github.com/root-project/root/issues/14300:0,integrability,Messag,Message,0,"Message produced by JSROOT and printed out in the qtweb plugin. It is side effect of canvas rendering in the beginning when HTML elements not yet fully layouted. To disable such debug messages, one should insert following line into `ExampleMain.cpp` line:. ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kFatal);. QApplication myapp(argc, argv2); // Qt application. And also add include of:. #include ""ROOT/RLogger.hxx"". .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:184,integrability,messag,messages,184,"Message produced by JSROOT and printed out in the qtweb plugin. It is side effect of canvas rendering in the beginning when HTML elements not yet fully layouted. To disable such debug messages, one should insert following line into `ExampleMain.cpp` line:. ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kFatal);. QApplication myapp(argc, argv2); // Qt application. And also add include of:. #include ""ROOT/RLogger.hxx"". .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:0,interoperability,Messag,Message,0,"Message produced by JSROOT and printed out in the qtweb plugin. It is side effect of canvas rendering in the beginning when HTML elements not yet fully layouted. To disable such debug messages, one should insert following line into `ExampleMain.cpp` line:. ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kFatal);. QApplication myapp(argc, argv2); // Qt application. And also add include of:. #include ""ROOT/RLogger.hxx"". .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:56,interoperability,plug,plugin,56,"Message produced by JSROOT and printed out in the qtweb plugin. It is side effect of canvas rendering in the beginning when HTML elements not yet fully layouted. To disable such debug messages, one should insert following line into `ExampleMain.cpp` line:. ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kFatal);. QApplication myapp(argc, argv2); // Qt application. And also add include of:. #include ""ROOT/RLogger.hxx"". .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:184,interoperability,messag,messages,184,"Message produced by JSROOT and printed out in the qtweb plugin. It is side effect of canvas rendering in the beginning when HTML elements not yet fully layouted. To disable such debug messages, one should insert following line into `ExampleMain.cpp` line:. ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kFatal);. QApplication myapp(argc, argv2); // Qt application. And also add include of:. #include ""ROOT/RLogger.hxx"". .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:143,deployability,log,log,143,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:192,deployability,modul,modules,192,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:317,deployability,modul,modules,317,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:156,energy efficiency,reduc,reduced,156,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:126,integrability,messag,messages,126,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:126,interoperability,messag,messages,126,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:192,modifiability,modul,modules,192,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:317,modifiability,modul,modules,317,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:143,safety,log,log,143,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:192,safety,modul,modules,192,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:317,safety,modul,modules,317,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:143,security,log,log,143,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:143,testability,log,log,143,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug? ```js. js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:161,availability,error,error,161,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:233,availability,error,error,233,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:324,integrability,messag,messages,324,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:324,interoperability,messag,messages,324,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:161,performance,error,error,161,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:233,performance,error,error,233,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:161,safety,error,error,161,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:233,safety,error,error,233,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:161,usability,error,error,161,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:233,usability,error,error,233,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:288,usability,behavi,behavior,288,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```. enum class ELogLevel : unsigned char {. kUnset,. kFatal, ///< An error which causes further processing to be unreliable. kError, ///< An error. kWarning, ///< Warnings about likely unexpected behavior. kInfo, ///< Informational messages; used for instance for tracing. kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug. };. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:384,energy efficiency,optim,optimal,384,Yes but to suppress the canvas geometry warning I need to set at least `ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kError);` so everyother warning issued is also suppressed not only the `Hide canvas while geometry too small`. . That's why I was rasing the question if the warning level for the `Hide canvas while geometry too small` message is optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:373,integrability,messag,message,373,Yes but to suppress the canvas geometry warning I need to set at least `ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kError);` so everyother warning issued is also suppressed not only the `Hide canvas while geometry too small`. . That's why I was rasing the question if the warning level for the `Hide canvas while geometry too small` message is optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:373,interoperability,messag,message,373,Yes but to suppress the canvas geometry warning I need to set at least `ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kError);` so everyother warning issued is also suppressed not only the `Hide canvas while geometry too small`. . That's why I was rasing the question if the warning level for the `Hide canvas while geometry too small` message is optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:218,availability,error,error,218,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:144,energy efficiency,core,core,144,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:154,integrability,compon,components,154,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:224,integrability,messag,messages,224,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:154,interoperability,compon,components,154,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:224,interoperability,messag,messages,224,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:154,modifiability,compon,components,154,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:170,performance,I/O,I/O,170,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:218,performance,error,error,218,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:218,safety,error,error,218,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:218,usability,error,error,218,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O. Therefore all other important warnings and error messages will be still there. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/issues/14300:41,usability,close,close,41,Ok. Thanks for the response. Then we can close this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14300
https://github.com/root-project/root/pull/14301:0,availability,ping,pinging,0,pinging here (as it's leading to a crash in my application). thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14301
https://github.com/root-project/root/issues/14302:47,deployability,version,versions,47,"It looks like a conflict between two different versions of the Windows SDKs, `10.0.22621.0` and `10.0.19041.0`. How many SDKs do you have on your computer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:47,integrability,version,versions,47,"It looks like a conflict between two different versions of the Windows SDKs, `10.0.22621.0` and `10.0.19041.0`. How many SDKs do you have on your computer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:16,interoperability,conflict,conflict,16,"It looks like a conflict between two different versions of the Windows SDKs, `10.0.22621.0` and `10.0.19041.0`. How many SDKs do you have on your computer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:47,modifiability,version,versions,47,"It looks like a conflict between two different versions of the Windows SDKs, `10.0.22621.0` and `10.0.19041.0`. How many SDKs do you have on your computer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:39,deployability,version,version,39,"I took a look and I only have one sdk, version 10.0.22621.0. ![image](https://github.com/root-project/root/assets/73058062/8b1aea42-90cb-4efd-9b9b-d71c9030d70b).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:39,integrability,version,version,39,"I took a look and I only have one sdk, version 10.0.22621.0. ![image](https://github.com/root-project/root/assets/73058062/8b1aea42-90cb-4efd-9b9b-d71c9030d70b).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:39,modifiability,version,version,39,"I took a look and I only have one sdk, version 10.0.22621.0. ![image](https://github.com/root-project/root/assets/73058062/8b1aea42-90cb-4efd-9b9b-d71c9030d70b).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:27,availability,error,error,27,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:27,performance,error,error,27,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:93,performance,time,time,93,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:27,safety,error,error,27,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:27,usability,error,error,27,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:13,usability,confirm,confirm,13,"BTW, can you confirm that `import ROOT` works in a Python shell?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:19,usability,confirm,confirm,19,"As I said, can you confirm that `import ROOT` works in a Python shell?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:177,reliability,doe,doesn,177,"@Esword618 as a work-around, until I find why this is happening, you can comment the `#include <cassert>` line in `D:/ROOT/root_v6.30.02.win64.vc17/include/TGeoExtension.h`. It doesn't hurt, unless you have to include it somewhere...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/issues/14302:14,testability,understand,understand,14,"I don't quite understand what you said, can you explain it in detail?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14302
https://github.com/root-project/root/pull/14305:34,availability,failur,failures,34,Thanks for approving! The Windows failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14305
https://github.com/root-project/root/pull/14305:34,deployability,fail,failures,34,Thanks for approving! The Windows failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14305
https://github.com/root-project/root/pull/14305:34,performance,failur,failures,34,Thanks for approving! The Windows failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14305
https://github.com/root-project/root/pull/14305:34,reliability,fail,failures,34,Thanks for approving! The Windows failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14305
https://github.com/root-project/root/issues/14306:281,deployability,Releas,Release,281,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:318,deployability,build,build,318,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:105,energy efficiency,CPU,CPU,105,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:255,energy efficiency,optim,optimization,255,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:80,performance,time,timeouts,80,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:105,performance,CPU,CPU,105,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:109,performance,throttl,throttling,109,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:255,performance,optimiz,optimization,255,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:80,safety,timeout,timeouts,80,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:147,safety,hot,hot,147,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:227,safety,test,tests,227,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/issues/14306:227,testability,test,tests,227,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14306
https://github.com/root-project/root/pull/14307:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14307
https://github.com/root-project/root/pull/14307:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/default with flags -DCTEST_TEST_EXCLUDE_NONE=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14307
https://github.com/root-project/root/pull/14307:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/default with flags -DCTEST_TEST_EXCLUDE_NONE=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14307
https://github.com/root-project/root/issues/14308:151,interoperability,standard,standard,151,"> It would be nice to add a custom label for C++ 20 issues as well, so bugs like #14230 are more visible to whomever wants to use ROOT with the latest standard. One workaround could be just:. https://github.com/root-project/root/issues?q=is%3Aissue+is%3Aopen+%22c%2B%2B20%22+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14308
https://github.com/root-project/root/issues/14308:28,usability,custom,custom,28,"> It would be nice to add a custom label for C++ 20 issues as well, so bugs like #14230 are more visible to whomever wants to use ROOT with the latest standard. One workaround could be just:. https://github.com/root-project/root/issues?q=is%3Aissue+is%3Aopen+%22c%2B%2B20%22+",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14308
https://github.com/root-project/root/issues/14308:15,testability,plan,plan,15,> Is there any plan to document ROOT with C++ 20 usage? There is: https://github.com/root-project/web/issues/919,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14308
https://github.com/root-project/root/issues/14308:23,usability,document,document,23,> Is there any plan to document ROOT with C++ 20 usage? There is: https://github.com/root-project/web/issues/919,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14308
https://github.com/root-project/root/pull/14311:42,deployability,releas,release,42,"Too controversial change for the upcoming release, unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:44,deployability,releas,release,44,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:127,deployability,releas,release,127,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:255,deployability,build,build,255,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:376,deployability,build,build,376,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:394,deployability,fail,fail-on-missing,394,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:394,reliability,fail,fail-on-missing,394,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:365,security,control,controlled,365,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:150,testability,understand,understand,150,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14311:365,testability,control,controlled,365,"> Too controversial change for the upcoming release, unfortunately. In fact, I don't think I'm up to right that battle for any release. I can sort of understand why it's not the default. With the fallback to builtins, the chance of getting a working ROOT build first-try for a newcomer is higher. It's just a bit unfortunate that anyone who is more serious about a controlled build has to set `fail-on-missing=ON` in addition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14311
https://github.com/root-project/root/pull/14312:55,deployability,build,build,55,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:61,deployability,configurat,configurations,61,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:61,integrability,configur,configurations,61,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:61,modifiability,configur,configurations,61,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:159,modifiability,layer,layering,159,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:13,reliability,Doe,Does,13,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:61,security,configur,configurations,61,> Awesome 😃! Does this finally fix the crashes in some build configurations? Yes. But we're not entirely happy with the solution because it breaks some of the layering (IMHO `RNTupleWriter` should not need to know that the sink has to wait for all its tasks). We're still discussing how to best solve this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:93,availability,cluster,clusters,93,"This isn't needed anymore, https://github.com/root-project/root/pull/16350 removed the small clusters write option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14312:93,deployability,cluster,clusters,93,"This isn't needed anymore, https://github.com/root-project/root/pull/16350 removed the small clusters write option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14312
https://github.com/root-project/root/pull/14314:46,availability,failur,failure,46,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:111,availability,error,error,111,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:132,availability,failur,failure,132,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:46,deployability,fail,failure,46,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:73,deployability,Releas,Release,73,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:132,deployability,fail,failure,132,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:46,performance,failur,failure,46,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:111,performance,error,error,111,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:132,performance,failur,failure,132,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:154,performance,concurren,concurrentfill,154,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:46,reliability,fail,failure,46,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:132,reliability,fail,failure,132,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:111,safety,error,error,111,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:127,safety,test,test,127,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:127,testability,test,test,127,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:111,usability,error,error,111,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:105,deployability,build,builds,105,We could also have considered splitting the file `TCling.cxx` in multiple files (potentially speeding up builds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14314:107,deployability,build,builds,107,"> We could also have considered splitting the file `TCling.cxx` in multiple files (potentially speeding up builds). Well, it's not the only case, and it's only in debug mode on x64",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14314
https://github.com/root-project/root/pull/14321:11,deployability,build,build,11,"@phsft-bot build! @pavlo-svirin, thanks a lot of this PR! @smuzaffar, could you check if that sails well with cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:20,safety,test,tests,20,"@vgvassilev , CMSSW tests started via https://github.com/cms-sw/root/pull/194",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:20,testability,test,tests,20,"@vgvassilev , CMSSW tests started via https://github.com/cms-sw/root/pull/194",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:30,deployability,fail,failing,30,"@vgvassilev , cmssw tests are failing but not due to this change but due to https://github.com/cms-sw/cmsdist/pull/8928#issuecomment-1885124568",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:30,reliability,fail,failing,30,"@vgvassilev , cmssw tests are failing but not due to this change but due to https://github.com/cms-sw/cmsdist/pull/8928#issuecomment-1885124568",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:20,safety,test,tests,20,"@vgvassilev , cmssw tests are failing but not due to this change but due to https://github.com/cms-sw/cmsdist/pull/8928#issuecomment-1885124568",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:20,testability,test,tests,20,"@vgvassilev , cmssw tests are failing but not due to this change but due to https://github.com/cms-sw/cmsdist/pull/8928#issuecomment-1885124568",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:6,safety,test,tests,6,cmssw tests via https://github.com/cms-sw/root/pull/194 look good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:6,testability,test,tests,6,cmssw tests via https://github.com/cms-sw/root/pull/194 look good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:13,deployability,patch,patch,13,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:42,deployability,fail,fail,42,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:88,deployability,build,build,88,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:177,deployability,version,version,177,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:193,deployability,instal,installed,193,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:177,integrability,version,version,177,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:177,modifiability,version,version,177,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:42,reliability,fail,fail,42,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:13,safety,patch,patch,13,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:13,security,patch,patch,13,"I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:15,deployability,patch,patch,15,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:44,deployability,fail,fail,44,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:90,deployability,build,build,90,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:179,deployability,version,version,179,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:195,deployability,instal,installed,195,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:261,deployability,modul,modulemap,261,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:282,deployability,modul,modulemap,282,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:318,deployability,automat,automatically,318,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:360,deployability,modul,module,360,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:367,deployability,modul,modulemap,367,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:179,integrability,version,version,179,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:179,modifiability,version,version,179,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:261,modifiability,modul,modulemap,261,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:282,modifiability,modul,modulemap,282,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:360,modifiability,modul,module,360,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:367,modifiability,modul,modulemap,367,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:44,reliability,fail,fail,44,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:15,safety,patch,patch,15,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:261,safety,modul,modulemap,261,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:282,safety,modul,modulemap,282,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:360,safety,modul,module,360,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:367,safety,modul,modulemap,367,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:15,security,patch,patch,15,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:318,testability,automat,automatically,318,"> I think this patch makes sense, however I fail to see how it solves the problem ""Cannot build ROOT if another ROOT at /usr/local"". I.e. why is the problem different if/when the version of ROOT installed in /usr/local uses the new name? Because we will have a modulemap named ROOT.modulemap and it won’t be picked up automatically by the system as opposed to module.modulemap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:44,deployability,build,build,44,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:59,deployability,instal,install,59,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:95,deployability,modul,module,95,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:124,deployability,build,build,124,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:95,modifiability,modul,module,95,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:95,safety,modul,module,95,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:26,testability,verif,verify,26,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:71,testability,verif,verify,71,"Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:46,deployability,build,build,46,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:61,deployability,instal,install,61,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:97,deployability,modul,module,97,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:126,deployability,build,build,126,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:193,deployability,modul,modulemap,193,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:213,deployability,build,build,213,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:225,deployability,modul,modulemap,225,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:314,deployability,modul,modulemap,314,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:349,deployability,build,build,349,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:97,modifiability,modul,module,97,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:193,modifiability,modul,modulemap,193,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:225,modifiability,modul,modulemap,225,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:314,modifiability,modul,modulemap,314,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:97,safety,modul,module,97,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:157,safety,Test,Tested,157,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:193,safety,modul,modulemap,193,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:225,safety,modul,modulemap,225,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:314,safety,modul,modulemap,314,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:28,testability,verif,verify,28,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:73,testability,verif,verify,73,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14321:157,testability,Test,Tested,157,"> Fair enough. Can we still verify this (i.e. build this PR, install and verify that the correct module map is picked up in a build) before merging this PR? Tested this PR, there was a correct modulemap picked on build (ROOT.modulemap inside of the source tree), even if there was another deliberately broken ROOT.modulemap under /usr/include . The build was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14321
https://github.com/root-project/root/pull/14327:4,deployability,fail,failed,4,The failed tests are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:4,reliability,fail,failed,4,The failed tests are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:11,safety,test,tests,11,The failed tests are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:11,testability,test,tests,11,The failed tests are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:210,availability,restor,restore,210,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: . https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:25,deployability,updat,update,25,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: . https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:50,integrability,pub,public,50,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: . https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:210,reliability,restor,restore,210,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: . https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:25,safety,updat,update,25,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: . https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:25,security,updat,update,25,"Hi @agheata ,. With this update, there is removed public function `Vertex_t & TGeoFacet::GetVertex(int ivert)` which is used in VGM; see: . https://github.com/vmc-project/vgm/issues/15. Would it be possible to restore this function ? Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:213,deployability,version,version,213,"This is probably not as relevant as persistence was broken anyways, but since class members were added / removed (and hence, the schema and streamers have changed), I believe these changes do also require a class version bump, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:129,integrability,schema,schema,129,"This is probably not as relevant as persistence was broken anyways, but since class members were added / removed (and hence, the schema and streamers have changed), I believe these changes do also require a class version bump, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:213,integrability,version,version,213,"This is probably not as relevant as persistence was broken anyways, but since class members were added / removed (and hence, the schema and streamers have changed), I believe these changes do also require a class version bump, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14327:213,modifiability,version,version,213,"This is probably not as relevant as persistence was broken anyways, but since class members were added / removed (and hence, the schema and streamers have changed), I believe these changes do also require a class version bump, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14327
https://github.com/root-project/root/pull/14328:51,deployability,updat,update,51,"> Thank you for the fix! Before merging, could you update the commit message to something that briefly describes the fix instead of only linking to the issue? done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14328
https://github.com/root-project/root/pull/14328:69,integrability,messag,message,69,"> Thank you for the fix! Before merging, could you update the commit message to something that briefly describes the fix instead of only linking to the issue? done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14328
https://github.com/root-project/root/pull/14328:69,interoperability,messag,message,69,"> Thank you for the fix! Before merging, could you update the commit message to something that briefly describes the fix instead of only linking to the issue? done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14328
https://github.com/root-project/root/pull/14328:51,safety,updat,update,51,"> Thank you for the fix! Before merging, could you update the commit message to something that briefly describes the fix instead of only linking to the issue? done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14328
https://github.com/root-project/root/pull/14328:51,security,updat,update,51,"> Thank you for the fix! Before merging, could you update the commit message to something that briefly describes the fix instead of only linking to the issue? done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14328
https://github.com/root-project/root/issues/14329:296,deployability,continu,continue,296,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:. https://github.com/root-project/root/pull/14332. Would this address this issue? Also, note that the RooFit RDF helpers are not feature complete yet:. https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14329
https://github.com/root-project/root/issues/14329:222,safety,compl,complete,222,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:. https://github.com/root-project/root/pull/14332. Would this address this issue? Also, note that the RooFit RDF helpers are not feature complete yet:. https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14329
https://github.com/root-project/root/issues/14329:222,security,compl,complete,222,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:. https://github.com/root-project/root/pull/14332. Would this address this issue? Also, note that the RooFit RDF helpers are not feature complete yet:. https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14329
https://github.com/root-project/root/issues/14329:198,usability,help,helpers,198,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:. https://github.com/root-project/root/pull/14332. Would this address this issue? Also, note that the RooFit RDF helpers are not feature complete yet:. https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14329
https://github.com/root-project/root/issues/14329:341,usability,clear,clear,341,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:. https://github.com/root-project/root/pull/14332. Would this address this issue? Also, note that the RooFit RDF helpers are not feature complete yet:. https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14329
https://github.com/root-project/root/issues/14329:399,usability,user,users,399,"Hi @jpherdi, thanks for the report! I suggest the following changes to the tutorials:. https://github.com/root-project/root/pull/14332. Would this address this issue? Also, note that the RooFit RDF helpers are not feature complete yet:. https://github.com/root-project/root/issues/7223. I didn't continue working on this, because it was not clear to me which features would actually get used by the users. If it's missing something that you need, for example the treatment of weight columns, please comment on the other issue I linked so we can give it higher priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14329
https://github.com/root-project/root/issues/14337:15,deployability,version,version,15,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:36,deployability,version,version,36,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:128,deployability,Instal,InstalledDir,128,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:114,energy efficiency,model,model,114,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:15,integrability,version,version,15,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:36,integrability,version,version,36,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:15,modifiability,version,version,15,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:36,modifiability,version,version,36,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:114,security,model,model,114,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:161,usability,Command,CommandLineTools,161,```. $ clang --version. Apple clang version 15.0.0 (clang-1500.1.0.2.5). Target: arm64-apple-darwin23.2.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:51,deployability,configurat,configuration,51,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:105,deployability,version,version,105,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:119,deployability,VERSION,VERSION,119,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:307,deployability,version,version,307,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:344,deployability,configurat,configuration,344,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:51,integrability,configur,configuration,51,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:105,integrability,version,version,105,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:119,integrability,VERSION,VERSION,119,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:219,integrability,MESSAG,MESSAGE,219,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:307,integrability,version,version,307,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:344,integrability,configur,configuration,344,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:219,interoperability,MESSAG,MESSAGE,219,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:51,modifiability,configur,configuration,51,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:105,modifiability,version,version,105,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:119,modifiability,VERSION,VERSION,119,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:307,modifiability,version,version,307,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:344,modifiability,configur,configuration,344,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:51,security,configur,configuration,51,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:344,security,configur,configuration,344,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:25,usability,experien,experienced,25,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious. ```. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):. Cannot determine location of C++ headers for runtime. ```. Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:94,deployability,fail,failing,94,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:217,deployability,version,version,217,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:248,deployability,instal,installed,248,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:283,deployability,version,version,283,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:325,deployability,modul,modules,325,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:378,deployability,instal,install,378,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:432,deployability,modul,module,432,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:609,energy efficiency,load,loaded,609,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:217,integrability,version,version,217,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:283,integrability,version,version,283,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:197,interoperability,specif,specific,197,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:274,interoperability,specif,specific,274,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:316,interoperability,specif,specific,316,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:217,modifiability,version,version,217,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:283,modifiability,version,version,283,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:325,modifiability,modul,modules,325,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:432,modifiability,modul,module,432,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:609,performance,load,loaded,609,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:640,performance,time,times,640,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:94,reliability,fail,failing,94,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:325,safety,modul,modules,325,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:432,safety,modul,module,432,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:570,usability,command,command,570,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:656,usability,user,users,656,"Hi Danilo, yes indeed I was running ROOT 6.26.02. I just removed it, but compilation is still failing. The warning is still shown too. I wonder if this might not be related just to an issue with a specific AppleClang version.. (I have the last one installed) I don't need a specific version of ROOT, but I just some specific modules (not enabled by default.). So, I tried to to install ROOT 6.31, first not working but due to a Net module issue. I removed ROOT 6.26.02 and the compilation is successful. Would you maybe consider adding a warning at the end of the cmake command if an existing ROOT is already loaded ? This might spare some times for other users in the future, maybe ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:128,availability,error,error,128,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:. https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:128,performance,error,error,128,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:. https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:128,safety,error,error,128,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:. https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:122,usability,clear,clear,122,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:. https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:128,usability,error,error,128,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:. https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/issues/14337:186,usability,close,close,186,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:. https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14337
https://github.com/root-project/root/pull/14340:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:28,deployability,build,build,28,"This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:64,interoperability,platform,platform,64,"This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:250,availability,failur,failures,250,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:30,deployability,build,build,30,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:125,deployability,updat,update,125,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:250,deployability,fail,failures,250,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:66,interoperability,platform,platform,66,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:250,performance,failur,failures,250,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:250,reliability,fail,failures,250,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:125,safety,updat,update,125,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:125,security,updat,update,125,"> This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:258,availability,failur,failures,258,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:32,deployability,build,build,32,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:133,deployability,updat,update,133,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:258,deployability,fail,failures,258,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:316,deployability,resourc,resources,316,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:316,energy efficiency,resourc,resources,316,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:68,interoperability,platform,platform,68,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:258,performance,failur,failures,258,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:316,performance,resourc,resources,316,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:258,reliability,fail,failures,258,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:133,safety,updat,update,133,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:316,safety,resourc,resources,316,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:133,security,updat,update,133,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14340:316,testability,resourc,resources,316,"> > This also broke the default build on Debian 10 (our only 32-bit platform), which only has Python 3.7.3. > . > Damn, alright will update there too. But it's unfortunate this is untested in the PR CI :/ (When I merged there had been 3 rounds of CI without failures related to Python). Yes, we don't have enough CI resources, in particular on 32-bit Debian ever since we lost the second node...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14340
https://github.com/root-project/root/pull/14341:137,deployability,API,API,137,"We might consider moving `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` to `Internal` as well - it's weird to have a ""public"" API in `Detail` take an `Internal` argument...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14341
https://github.com/root-project/root/pull/14341:129,integrability,pub,public,129,"We might consider moving `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` to `Internal` as well - it's weird to have a ""public"" API in `Detail` take an `Internal` argument...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14341
https://github.com/root-project/root/pull/14341:137,integrability,API,API,137,"We might consider moving `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` to `Internal` as well - it's weird to have a ""public"" API in `Detail` take an `Internal` argument...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14341
https://github.com/root-project/root/pull/14341:137,interoperability,API,API,137,"We might consider moving `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` to `Internal` as well - it's weird to have a ""public"" API in `Detail` take an `Internal` argument...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14341
https://github.com/root-project/root/pull/14352:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:85,deployability,log,log,85,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:217,deployability,log,log,217,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:39,safety,sanit,sanity,39,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:85,safety,log,log,85,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:217,safety,log,log,217,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:39,security,sanit,sanity,39,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:85,security,log,log,85,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:217,security,log,log,217,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:85,testability,log,log,85,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:92,testability,trace,trace,92,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14352:217,testability,log,log,217,"For our reference, these are the usual sanity checks. ```. $: strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'. -1. 3000. $: grep openat openat.log | wc -l. 406. $: nm -C $ROOTSYS/lib/*.so | grep TString::kNPOS | wc -l. 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14352
https://github.com/root-project/root/pull/14356:79,deployability,build,build,79,"Interesting, can I ask how you were able to trigger this situation? Isn't core build before any other library?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:74,energy efficiency,core,core,74,"Interesting, can I ask how you were able to trigger this situation? Isn't core build before any other library?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:9,availability,failur,failure,9,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:9,deployability,fail,failure,9,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:9,performance,failur,failure,9,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:9,reliability,fail,failure,9,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:4,safety,test,test,4,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14356:4,testability,test,test,4,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14356
https://github.com/root-project/root/pull/14358:62,availability,error,error,62,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:401,availability,error,error,401,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:89,deployability,build,build,89,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:123,deployability,build,build,123,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:309,deployability,build,build,309,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:343,deployability,build,build,343,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:134,energy efficiency,core,core,134,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:354,energy efficiency,core,core,354,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:415,energy efficiency,alloc,allocate,415,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:437,integrability,abstract,abstract,437,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:437,modifiability,abstract,abstract,437,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:62,performance,error,error,62,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:401,performance,error,error,401,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:62,safety,error,error,62,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:401,safety,error,error,401,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:62,usability,error,error,62,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:401,usability,error,error,401,"Unfortunately the commits do not even compile with some scary error. ```. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:. /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’. 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols). ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:46,safety,test,tests,46,"thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:46,testability,test,tests,46,"thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:242,deployability,updat,updated,242,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:381,deployability,version,version,381,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:469,deployability,version,version,469,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:147,integrability,discover,discovered,147,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:381,integrability,version,version,381,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:469,integrability,version,version,469,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:147,interoperability,discover,discovered,147,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:381,modifiability,version,version,381,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:469,modifiability,version,version,469,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:48,safety,test,tests,48,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:184,safety,prevent,preventing,184,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:242,safety,updat,updated,242,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:184,security,preven,preventing,184,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:242,security,updat,updated,242,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:48,testability,test,tests,48,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:147,usability,discov,discovered,147,"> thanks for the backport, I have started CMSSW tests here https://github.com/cms-sw/root/pull/195. Hi @smuzaffar , thanks for your promptness! We discovered there was a small wrinkle preventing proper compilation in 6.30, I have uploaded an updated commit which should work properly literally a few minutes ago. ~~I just wanted to make sure that the PR on CMSSW takes this latest version of the commits~~. EDIT: I checked on the linked CMSSW PR and it seems the right version of the commit was picked, so should be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:44,availability,error,error,44,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:95,availability,error,error,95,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:190,availability,error,error,190,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:44,performance,error,error,44,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:95,performance,error,error,95,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:190,performance,error,error,190,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:44,safety,error,error,44,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:61,safety,test,test,61,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:95,safety,error,error,95,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:190,safety,error,error,190,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:61,testability,test,test,61,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:44,usability,error,error,44,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:95,usability,error,error,95,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:190,usability,error,error,190,Ok now it compiles but we get the following error in the new test. ```cpp. input_line_49:1:21: error: unknown type name 'ROOT_7459'. int ROOT_7459 = 42; ROOT_7459++;. ^. input_line_49:1:30: error: expected unqualified-id. int ROOT_7459 = 42; ROOT_7459++;. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:198,availability,avail,available,198,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:257,deployability,version,version,257,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:257,integrability,version,version,257,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:257,modifiability,version,version,257,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:198,reliability,availab,available,198,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:198,safety,avail,available,198,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:198,security,availab,available,198,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:46,availability,error,error,46,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:105,availability,error,error,105,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:206,availability,error,error,206,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:505,availability,state,statements,505,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:622,availability,state,statements,622,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:407,deployability,fail,fails,407,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:436,deployability,build,builds,436,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:505,integrability,state,statements,505,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:622,integrability,state,statements,622,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:46,performance,error,error,46,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:105,performance,error,error,105,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:206,performance,error,error,206,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:407,reliability,fail,fails,407,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:488,reliability,doe,does,488,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:554,reliability,doe,does,554,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:46,safety,error,error,46,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:63,safety,test,test,63,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:105,safety,error,error,105,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:206,safety,error,error,206,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:63,testability,test,test,63,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:46,usability,error,error,46,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:105,usability,error,error,105,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:206,usability,error,error,206,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:497,usability,support,support,497,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:613,usability,support,supports,613,> Ok now it compiles but we get the following error in the new test. > . > ```c++. > input_line_49:1:21: error: unknown type name 'ROOT_7459'. > int ROOT_7459 = 42; ROOT_7459++;. > ^. > input_line_49:1:30: error: expected unqualified-id. > int ROOT_7459 = 42; ROOT_7459++;. > ```. Somehow the parsing seems broken. We should probably try using `ProcessLine` instead of `Declare`... still a mystery why this fails only for the PCH based builds... EDIT: Parsing is broken because `Declare` does not support statements on the global scope but `ProcessLine` does. In addition it works in master because clang already supports statements on the global scope (thanks to clang-repl)...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:82,safety,test,test,82,"> We should probably try using ProcessLine instead of Declare. Seems like an easy test, let me try that :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:82,testability,test,test,82,"> We should probably try using ProcessLine instead of Declare. Seems like an easy test, let me try that :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:80,availability,failur,failure,80,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:80,deployability,fail,failure,80,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:23,integrability,sub,substituting,23,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:80,performance,failur,failure,80,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:80,reliability,fail,failure,80,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:75,safety,test,test,75,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:75,testability,test,test,75,"At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:82,availability,failur,failure,82,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:171,availability,consist,consistency,171,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:82,deployability,fail,failure,82,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:25,integrability,sub,substituting,25,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:82,performance,failur,failure,82,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:82,reliability,fail,failure,82,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:77,safety,test,test,77,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:77,testability,test,test,77,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:171,usability,consist,consistency,171,"> At least on my machine substituting `Declare` with `ProcessLine` fixed the test failure, let's see what the CI has to say. We need to land that change in the master for consistency reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:48,availability,consist,consistency,48,> We need to land that change in the master for consistency reasons. Good point! I will then separate this change from the original commit and create a separate commit that we can forward-port to master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:48,usability,consist,consistency,48,> We need to land that change in the master for consistency reasons. Good point! I will then separate this change from the original commit and create a separate commit that we can forward-port to master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:39,interoperability,platform,platforms,39,@vgvassilev The test now passes on all platforms. Let me know what you think about the commit and if we can merge this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:16,safety,test,test,16,@vgvassilev The test now passes on all platforms. Let me know what you think about the commit and if we can merge this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:16,testability,test,test,16,@vgvassilev The test now passes on all platforms. Let me know what you think about the commit and if we can merge this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:212,deployability,releas,release,212,"Dear @smuzaffar , also thanks to your help, we converged. This PR merged the changes that for us are an improvement wrt the fix provided in December 2023. This the commit we would propose to CMS for the CMSSW 14 release: would you be so kind to give it another try to verify once again the code works as expected for CMS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:268,testability,verif,verify,268,"Dear @smuzaffar , also thanks to your help, we converged. This PR merged the changes that for us are an improvement wrt the fix provided in December 2023. This the commit we would propose to CMS for the CMSSW 14 release: would you be so kind to give it another try to verify once again the code works as expected for CMS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:38,usability,help,help,38,"Dear @smuzaffar , also thanks to your help, we converged. This PR merged the changes that for us are an improvement wrt the fix provided in December 2023. This the commit we would propose to CMS for the CMSSW 14 release: would you be so kind to give it another try to verify once again the code works as expected for CMS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,deployability,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:211,deployability,patch,patches,211,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,integrability,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,interoperability,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,modifiability,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,reliability,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:42,safety,test,tests,42,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:211,safety,patch,patches,211,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,security,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:211,security,patch,patches,211,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:42,testability,test,tests,42,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14358:185,testability,integr,integrate,185,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14358
https://github.com/root-project/root/pull/14360:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu2204/cxx20 with flags -Dtmva-sofie=On -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14360
https://github.com/root-project/root/issues/14361:58,energy efficiency,draw,draw-short-integers-as-numbers-not-characters,58,Relevant related discussion: https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/39. and PR: https://github.com/root-project/root/pull/11847/files by @couet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14361
https://github.com/root-project/root/issues/14361:130,energy efficiency,draw,draw-short-integers-as-numbers-not-characters,130,"> I cannot think of any alternatives ; except not storing leaves as int8 or uint8 ""types"". `use +0`. https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/20?u=ferhue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14361
https://github.com/root-project/root/issues/14361:39,safety,except,except,39,"> I cannot think of any alternatives ; except not storing leaves as int8 or uint8 ""types"". `use +0`. https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/20?u=ferhue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14361
https://github.com/root-project/root/issues/14361:188,energy efficiency,Draw,Draw,188,This is historical and probably not changeable in a backward compatible way. Arrays of `Char_t` have been historically used to store characters strings and that is the default for `TTree::Draw`. . The solution (that works not matter what the underlying type is) is to force it to be numerical expression by appending `+0` to the leaf name.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14361
https://github.com/root-project/root/issues/14361:61,interoperability,compatib,compatible,61,This is historical and probably not changeable in a backward compatible way. Arrays of `Char_t` have been historically used to store characters strings and that is the default for `TTree::Draw`. . The solution (that works not matter what the underlying type is) is to force it to be numerical expression by appending `+0` to the leaf name.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14361
https://github.com/root-project/root/pull/14362:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14362
https://github.com/root-project/root/pull/14362:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14362
https://github.com/root-project/root/pull/14366:42,deployability,version,version,42,"> If I am not mistaken, a more up-to-date version of this file seems to be already part of `master`. Yes, could now drop the first commit. FWIW the PR is still in Draft mode because we want to solve the problem more fundamentally, by having a list of column ids cached in the field descriptor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14366
https://github.com/root-project/root/pull/14366:42,integrability,version,version,42,"> If I am not mistaken, a more up-to-date version of this file seems to be already part of `master`. Yes, could now drop the first commit. FWIW the PR is still in Draft mode because we want to solve the problem more fundamentally, by having a list of column ids cached in the field descriptor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14366
https://github.com/root-project/root/pull/14366:42,modifiability,version,version,42,"> If I am not mistaken, a more up-to-date version of this file seems to be already part of `master`. Yes, could now drop the first commit. FWIW the PR is still in Draft mode because we want to solve the problem more fundamentally, by having a list of column ids cached in the field descriptor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14366
https://github.com/root-project/root/pull/14366:262,performance,cach,cached,262,"> If I am not mistaken, a more up-to-date version of this file seems to be already part of `master`. Yes, could now drop the first commit. FWIW the PR is still in Draft mode because we want to solve the problem more fundamentally, by having a list of column ids cached in the field descriptor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14366
https://github.com/root-project/root/pull/14370:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:64,deployability,build,build,64,"I'm not sure this is a good idea: We *know* that `nvc++` cannot build a working ROOT, so I don't think we should make it easier for users to shoot themselves into the foot...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:132,usability,user,users,132,"I'm not sure this is a good idea: We *know* that `nvc++` cannot build a working ROOT, so I don't think we should make it easier for users to shoot themselves into the foot...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:152,deployability,build,build,152,> so I don't think we should make it easier for users to shoot themselves into the foot... Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:48,usability,user,users,48,> so I don't think we should make it easier for users to shoot themselves into the foot... Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:110,usability,user,user,110,> so I don't think we should make it easier for users to shoot themselves into the foot... Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:160,deployability,build,build,160,"> > so I don't think we should make it easier for users to shoot themselves into the foot... > . > Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler? They can fix their compiler by building upstream LLVM, I don't see the point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:223,deployability,build,building,223,"> > so I don't think we should make it easier for users to shoot themselves into the foot... > . > Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler? They can fix their compiler by building upstream LLVM, I don't see the point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:50,usability,user,users,50,"> > so I don't think we should make it easier for users to shoot themselves into the foot... > . > Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler? They can fix their compiler by building upstream LLVM, I don't see the point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:118,usability,user,user,118,"> > so I don't think we should make it easier for users to shoot themselves into the foot... > . > Isn't one of those user the NVidia engineer(s) that needs to build ROOT to fix the compiler? They can fix their compiler by building upstream LLVM, I don't see the point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:33,deployability,build,building,33,"> They can fix their compiler by building upstream LLVM, I don't see the point. Humm ... so we are sure they is no other bad interactions? . But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:125,usability,interact,interactions,125,"> They can fix their compiler by building upstream LLVM, I don't see the point. Humm ... so we are sure they is no other bad interactions? . But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:35,deployability,build,building,35,"> > They can fix their compiler by building upstream LLVM, I don't see the point. > . > Humm ... so we are sure they is no other bad interactions? We don't know because we never get to that part: My memory is that to this date, we never had a working `rootcling_stage1` compiled by `nvc++` and consequently never got past `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:199,performance,memor,memory,199,"> > They can fix their compiler by building upstream LLVM, I don't see the point. > . > Humm ... so we are sure they is no other bad interactions? We don't know because we never get to that part: My memory is that to this date, we never had a working `rootcling_stage1` compiled by `nvc++` and consequently never got past `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:133,usability,interact,interactions,133,"> > They can fix their compiler by building upstream LLVM, I don't see the point. > . > Humm ... so we are sure they is no other bad interactions? We don't know because we never get to that part: My memory is that to this date, we never had a working `rootcling_stage1` compiled by `nvc++` and consequently never got past `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:199,usability,memor,memory,199,"> > They can fix their compiler by building upstream LLVM, I don't see the point. > . > Humm ... so we are sure they is no other bad interactions? We don't know because we never get to that part: My memory is that to this date, we never had a working `rootcling_stage1` compiled by `nvc++` and consequently never got past `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:424,availability,mainten,maintenance,424,"> But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:318,performance,time,time,318,"> But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:219,reliability,doe,does,219,"> But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:424,reliability,mainten,maintenance,424,"> But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:432,availability,mainten,maintenance,432,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:560,deployability,build,build,560,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:326,performance,time,time,326,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:227,reliability,doe,does,227,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:432,reliability,mainten,maintenance,432,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:479,security,sign,signal,479,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:508,usability,support,supported,508,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:573,usability,support,support,573,"> > But anyway furthermore, if we put stuff that is 'needed' (i.e. handling genuine difference not bugs in the compiler) then we will be ready when they are. > . > I fully agree here. Just because nvc++ cannot compile ROOT now does not mean we should make it even harder to get there. Especially, since I already invested the time to find out what's needed in cmake. And they are actually fairly small, so I am also not proposing a maintenance nightmare. IMHO it sends the wrong signal that `nvc++` would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:878,availability,error,error,878,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:105,deployability,build,build,105,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:189,deployability,fail,fail,189,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:289,deployability,fail,fails,289,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:591,deployability,version,version,591,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:834,deployability,version,version,834,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:915,deployability,version,version,915,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:591,integrability,version,version,591,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:722,integrability,discover,discovererd-and-re-implemented,722,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:834,integrability,version,version,834,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:915,integrability,version,version,915,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:722,interoperability,discover,discovererd-and-re-implemented,722,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:591,modifiability,version,version,591,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:834,modifiability,version,version,834,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:915,modifiability,version,version,915,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:878,performance,error,error,878,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:189,reliability,fail,fail,189,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:257,reliability,doe,does,257,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:289,reliability,fail,fails,289,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:675,safety,test,tester,675,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:682,safety,reme,remembers,682,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:878,safety,error,error,878,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:26,security,sign,signal,26,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:436,security,sign,signal,436,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:675,testability,test,tester,675,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:53,usability,support,supported,53,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:118,usability,support,support,118,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:463,usability,support,supported,463,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:506,usability,support,support,506,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:722,usability,discov,discovererd-and-re-implemented,722,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:878,usability,error,error,878,"> IMHO it sends the wrong signal that nvc++ would be supported. I'm still not seeing the point of having build system support for a ""broken"" compiler (for our purposes). A fair point but I fail to see how it has an consequence for this PR. As is the master does not reject `nvc++` is just fails in some weird ways (that are fixed by this PR) and some weirder ways (bug in the compiler). . ie. *Not* merging this PR would *not* send the signal that `nvc++` is not supported, it would only make it harder to support it in the future and make it more annoying than it should be to try the next version (because then this PR needs to then be hand applied (if by some miracle the tester remembers or knows about this PR) or re-discovererd-and-re-implemented). The 'right' way to express the point you make is:. (a) merge the best possible version of this PR . (b) explicitly warn or error out upon seeing a known broken version of `nvc++`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14370:119,usability,support,support,119,I still think we should merge and then add another PR after checking the latest nvc++ and marking it explicitly as not support (TSPR: https://github.com/root-project/root/pull/14370#issuecomment-1900419680),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14370
https://github.com/root-project/root/pull/14371:33,availability,failur,failures,33,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:282,availability,avail,available,282,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:537,availability,avail,available,537,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:601,availability,avail,available,601,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:27,deployability,build,build,27,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:33,deployability,fail,failures,33,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:237,deployability,releas,release,237,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:522,modifiability,pac,package,522,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:586,modifiability,pac,package,586,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:33,performance,failur,failures,33,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:33,reliability,fail,failures,33,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:282,reliability,availab,available,282,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:537,reliability,availab,available,537,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:601,reliability,availab,available,601,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:282,safety,avail,available,282,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:507,safety,test,tests,507,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:537,safety,avail,available,537,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:572,safety,test,test,572,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:601,safety,avail,available,601,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:282,security,availab,available,282,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:453,security,hack,hack,453,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:537,security,availab,available,537,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:601,security,availab,available,601,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:16,testability,context,context,16,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:507,testability,test,tests,507,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:572,testability,test,test,572,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:208,usability,support,supporting,208,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/pull/14371:304,usability,support,supports,304,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14371
https://github.com/root-project/root/issues/14372:40,deployability,upgrad,upgrade,40,"If this problem was introduced with the upgrade to LLVM 16, then it cannot affect 6.30 (with LLVM 13) and consequently there is nothing to fix for 6.30.04.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14372
https://github.com/root-project/root/issues/14372:40,modifiability,upgrad,upgrade,40,"If this problem was introduced with the upgrade to LLVM 16, then it cannot affect 6.30 (with LLVM 13) and consequently there is nothing to fix for 6.30.04.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14372
https://github.com/root-project/root/issues/14372:50,availability,error,error,50,Thanks for fixing this clicko (typo with a click) error :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14372
https://github.com/root-project/root/issues/14372:50,performance,error,error,50,Thanks for fixing this clicko (typo with a click) error :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14372
https://github.com/root-project/root/issues/14372:50,safety,error,error,50,Thanks for fixing this clicko (typo with a click) error :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14372
https://github.com/root-project/root/issues/14372:50,usability,error,error,50,Thanks for fixing this clicko (typo with a click) error :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14372
https://github.com/root-project/root/pull/14373:15,security,modif,modification,15,I suppose this modification should be squashed into https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:189,deployability,updat,updated,189,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:301,deployability,updat,update,301,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:398,integrability,coupl,couple,398,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:445,integrability,messag,message,445,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:445,interoperability,messag,message,445,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:398,modifiability,coupl,couple,398,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:189,safety,updat,updated,189,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:301,safety,updat,update,301,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:17,security,modif,modification,17,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:189,security,updat,updated,189,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:301,security,updat,update,301,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14373:398,testability,coupl,couple,398,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)? Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14373
https://github.com/root-project/root/pull/14375:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14375
https://github.com/root-project/root/pull/14378:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14378
https://github.com/root-project/root/pull/14379:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14379
https://github.com/root-project/root/pull/14382:109,modifiability,concern,concern,109,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:135,reliability,pra,practically,135,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:154,safety,test,tests,154,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:304,safety,test,test,304,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:324,safety,valid,validity,324,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:109,testability,concern,concern,109,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:154,testability,test,tests,154,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:304,testability,test,test,304,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:52,usability,user,user,52,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:312,usability,confirm,confirm,312,"Dear @couet ,. Thanks for your prompt reaction to a user's request from the forum! This is great! My biggest concern is that we cannot practically create tests for changes to the graphics, this is something we should really try to achieve but I acknowledge it is not trivial. Can I ask you for a further test to confirm the validity of the changes, to try an exclusion graph plot where the filled side of the line is the one above and not the one below like in the example on the forum? In that case the legend box should also display only the side above the line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:54,energy efficiency,Current,Currently,54,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:300,performance,time,time,300,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:47,safety,test,tests,47,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:189,safety,test,test,189,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:246,safety,test,test,246,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:47,testability,test,tests,47,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:189,testability,test,test,189,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:246,testability,test,test,246,@vepadulano . We do not have detailed graphics tests. Currently only stressGraphics is used to say that code is not crashing and produce png image is of approximate size. We need to create test like in jsroot. See https://github.com/linev/jsroot-test. It is set of SVG files which I regenerate every time when jsroot code changes. And there I can track any single graphical primitive change. . Similar should be done for ROOT graphics as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:25,safety,test,tests,25,Well there is also a few tests in the `test` folders...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:39,safety,test,test,39,Well there is also a few tests in the `test` folders...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:25,testability,test,tests,25,Well there is also a few tests in the `test` folders...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14382:39,testability,test,test,39,Well there is also a few tests in the `test` folders...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14382
https://github.com/root-project/root/pull/14395:106,deployability,patch,patched,106,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:128,deployability,version,version,128,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:187,deployability,version,version,187,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:237,deployability,version,version,237,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:473,deployability,updat,updated,473,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:128,integrability,version,version,128,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:187,integrability,version,version,187,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:237,integrability,version,version,237,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:128,modifiability,version,version,128,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:187,modifiability,version,version,187,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:226,modifiability,maintain,maintained,226,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:237,modifiability,version,version,237,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:440,modifiability,pac,package,440,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:177,performance,time,time,177,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:106,safety,patch,patched,106,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:226,safety,maintain,maintained,226,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:473,safety,updat,updated,473,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:106,security,patch,patched,106,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:473,security,updat,updated,473,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:19,usability,document,document,19,"Commenting just to document my agreement. As mentioned in #14247 by Olivier, the libafterimage in ROOT is patched, the upstream version is no longer in development since a long time. The version in ROOT is actually the better maintained version, so there are certain things that don't work with an external libafterimage. It's better to just drop the option altogether and only use the builtin one, like how it's done for the triangulation package, which has been recently updated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:57,testability,simpl,simply,57,"I agree with @couet , the better alternative would be to simply remove the option from cmake and always bundle libafterimage",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:57,usability,simpl,simply,57,"I agree with @couet , the better alternative would be to simply remove the option from cmake and always bundle libafterimage",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:134,safety,compl,completely,134,"Suggestion: it could be done in two steps, first setting this to ON always and marking it as deprecated, and then removing the option completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:134,security,compl,completely,134,"Suggestion: it could be done in two steps, first setting this to ON always and marking it as deprecated, and then removing the option completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:84,deployability,build,build,84,"Let's try to merge this PR, I can't see the Jenkins output anymore so I restarted a build. Indeed deprecating a build option before removing it is our usual approach, so we can stick with it :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:112,deployability,build,build,112,"Let's try to merge this PR, I can't see the Jenkins output anymore so I restarted a build. Indeed deprecating a build option before removing it is our usual approach, so we can stick with it :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:93,deployability,releas,release,93,"Thanks for bringing it up. Do we want this change to land also in 6.30? I didn't notice your release notes are for 6.30, I would have imagined this only goes in 6.32. In any case, the release note changes should also be written to 6.32",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:184,deployability,releas,release,184,"Thanks for bringing it up. Do we want this change to land also in 6.30? I didn't notice your release notes are for 6.30, I would have imagined this only goes in 6.32. In any case, the release note changes should also be written to 6.32",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:268,deployability,releas,released,268,"> I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 :+1: Sorry for my confusion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:320,deployability,build,build,320,"> I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 :+1: Sorry for my confusion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:93,usability,clear,clearly,93,"> I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 :+1: Sorry for my confusion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:276,deployability,releas,released,276,"> > I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. > . > I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 👍 Sorry for my confusion :). Your plan sounds good to me, too. I was just thinking of backporting the deprecation because this option is broken from the very beginning. So just for speeding up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:328,deployability,build,build,328,"> > I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. > . > I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 👍 Sorry for my confusion :). Your plan sounds good to me, too. I was just thinking of backporting the deprecation because this option is broken from the very beginning. So just for speeding up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:411,testability,plan,plan,411,"> > I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. > . > I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 👍 Sorry for my confusion :). Your plan sounds good to me, too. I was just thinking of backporting the deprecation because this option is broken from the very beginning. So just for speeding up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14395:101,usability,clear,clearly,101,"> > I thought deprecation in 6.30 and removal 6.32, but whatever you think is best. > . > I see more clearly what you were trying to do now. In that case I will have to say I don't agree. We cannot deprecate a feature and backport the deprecation of the feature to an already released branch. What we can do is to deprecate the build option for 6.32 and then remove it in 6.34 👍 Sorry for my confusion :). Your plan sounds good to me, too. I was just thinking of backporting the deprecation because this option is broken from the very beginning. So just for speeding up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14395
https://github.com/root-project/root/pull/14396:157,reliability,doe,does,157,> For me the change is fine. Thanks. Perhaps a question at this point: what is the point of offering the option of having a builtin afterimage if we know it does not work? Good question. Maybe @couet knows why we have this option?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:849,deployability,releas,release,849,"> > For me the change is fine. Thanks. Perhaps a question at this point: what is the point of offering the option of having a builtin afterimage if we know it does not work? > . > Good question. Maybe @couet knows why we have this option? I guess that in the past, bugs found by the ROOT team were backported to the upstream repo, see e.g.:. https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c (see copyright from Valeriy Onouchin from CERN). https://root.cern.ch/root/v520/Version520.news.html. But upstream is now completely frozen, at least 4 years https://github.com/afterstep/afterstep, right @sashavasko ?. So... (unless someone wants to upstream the changes again to that Github repo), maybe we could mark the builtin_afterimage option as deprecated now and remove it in a later release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:159,reliability,doe,does,159,"> > For me the change is fine. Thanks. Perhaps a question at this point: what is the point of offering the option of having a builtin afterimage if we know it does not work? > . > Good question. Maybe @couet knows why we have this option? I guess that in the past, bugs found by the ROOT team were backported to the upstream repo, see e.g.:. https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c (see copyright from Valeriy Onouchin from CERN). https://root.cern.ch/root/v520/Version520.news.html. But upstream is now completely frozen, at least 4 years https://github.com/afterstep/afterstep, right @sashavasko ?. So... (unless someone wants to upstream the changes again to that Github repo), maybe we could mark the builtin_afterimage option as deprecated now and remove it in a later release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:579,safety,compl,completely,579,"> > For me the change is fine. Thanks. Perhaps a question at this point: what is the point of offering the option of having a builtin afterimage if we know it does not work? > . > Good question. Maybe @couet knows why we have this option? I guess that in the past, bugs found by the ROOT team were backported to the upstream repo, see e.g.:. https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c (see copyright from Valeriy Onouchin from CERN). https://root.cern.ch/root/v520/Version520.news.html. But upstream is now completely frozen, at least 4 years https://github.com/afterstep/afterstep, right @sashavasko ?. So... (unless someone wants to upstream the changes again to that Github repo), maybe we could mark the builtin_afterimage option as deprecated now and remove it in a later release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:288,security,team,team,288,"> > For me the change is fine. Thanks. Perhaps a question at this point: what is the point of offering the option of having a builtin afterimage if we know it does not work? > . > Good question. Maybe @couet knows why we have this option? I guess that in the past, bugs found by the ROOT team were backported to the upstream repo, see e.g.:. https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c (see copyright from Valeriy Onouchin from CERN). https://root.cern.ch/root/v520/Version520.news.html. But upstream is now completely frozen, at least 4 years https://github.com/afterstep/afterstep, right @sashavasko ?. So... (unless someone wants to upstream the changes again to that Github repo), maybe we could mark the builtin_afterimage option as deprecated now and remove it in a later release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:579,security,compl,completely,579,"> > For me the change is fine. Thanks. Perhaps a question at this point: what is the point of offering the option of having a builtin afterimage if we know it does not work? > . > Good question. Maybe @couet knows why we have this option? I guess that in the past, bugs found by the ROOT team were backported to the upstream repo, see e.g.:. https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c (see copyright from Valeriy Onouchin from CERN). https://root.cern.ch/root/v520/Version520.news.html. But upstream is now completely frozen, at least 4 years https://github.com/afterstep/afterstep, right @sashavasko ?. So... (unless someone wants to upstream the changes again to that Github repo), maybe we could mark the builtin_afterimage option as deprecated now and remove it in a later release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:1142,deployability,releas,release,1142,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:1524,integrability,Messag,Message,1524,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:1524,interoperability,Messag,Message,1524,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:354,reliability,doe,does,354,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:826,safety,compl,completely,826,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:517,security,team,team,517,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:826,security,compl,completely,826,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14396:1354,security,auth,auth,1354,"I have not done anything with it in at least 10 years, so yeah, you no. longer have to upstream the changes. Thanks! Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>. wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what. > is the point of offering the option of having a builtin afterimage if we. > know it does not work? >. > Good question. Maybe @couet <https://github.com/couet> knows why we have. > this option? >. > I guess that in the past, bugs found by the ROOT team were backported to. > the upstream repo, see e.g.:. >. > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c. > (see copyright from Valeriy Onouchin from CERN). > https://root.cern.ch/root/v520/Version520.news.html. >. > But upstream is now completely frozen, at least 4 years. > https://github.com/afterstep/afterstep, right @sashavasko. > <https://github.com/sashavasko> ?. > So... (unless someone wants to upstream the changes again to that Github. > repo), maybe we could mark the builtin_afterimage option as deprecated now. > and remove it in a later release. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14396
https://github.com/root-project/root/pull/14398:149,deployability,updat,update,149,> accept that we can't handle RNTuples that are not in the files root directory. Should we open an issue to keep track of the places we will need to update when we want to support sub-directories?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:180,integrability,sub,sub-directories,180,> accept that we can't handle RNTuples that are not in the files root directory. Should we open an issue to keep track of the places we will need to update when we want to support sub-directories?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:149,safety,updat,update,149,> accept that we can't handle RNTuples that are not in the files root directory. Should we open an issue to keep track of the places we will need to update when we want to support sub-directories?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:149,security,updat,update,149,> accept that we can't handle RNTuples that are not in the files root directory. Should we open an issue to keep track of the places we will need to update when we want to support sub-directories?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:172,usability,support,support,172,> accept that we can't handle RNTuples that are not in the files root directory. Should we open an issue to keep track of the places we will need to update when we want to support sub-directories?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:448,availability,cluster,cluster,448,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,deployability,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:448,deployability,cluster,cluster,448,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:548,energy efficiency,load,load,548,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,integrability,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:201,integrability,wrap,wraps,201,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,interoperability,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,modifiability,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:548,performance,load,load,548,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,reliability,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:295,reliability,doe,doesn,295,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,security,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:34,testability,integr,integrate,34,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:116,safety,test,test,116,"Thanks a lot again @jblomer, @hahnjo. As we discussed at the meeting today, I adopted the suggestions, added a unit test that merges `RNTuple` through `TFileMerger`, and rebased the branched on top of `master`. I think this PR is good to go. Therefore, I'm marking it ready. Please let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:111,testability,unit,unit,111,"Thanks a lot again @jblomer, @hahnjo. As we discussed at the meeting today, I adopted the suggestions, added a unit test that merges `RNTuple` through `TFileMerger`, and rebased the branched on top of `master`. I think this PR is good to go. Therefore, I'm marking it ready. Please let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:116,testability,test,test,116,"Thanks a lot again @jblomer, @hahnjo. As we discussed at the meeting today, I adopted the suggestions, added a unit test that merges `RNTuple` through `TFileMerger`, and rebased the branched on top of `master`. I think this PR is good to go. Therefore, I'm marking it ready. Please let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:26,deployability,version,version,26,Thanks @jblomer. The last version should have fixed that. I also squashed the commits while at it. Please let me know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:26,integrability,version,version,26,Thanks @jblomer. The last version should have fixed that. I also squashed the commits while at it. Please let me know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14398:26,modifiability,version,version,26,Thanks @jblomer. The last version should have fixed that. I also squashed the commits while at it. Please let me know.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14398
https://github.com/root-project/root/pull/14399:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14399:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14399:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14399:139,deployability,patch,patch,139,"Hi @guitargeek, all, I think all the requested changes are in (feel free to have a peek). Is there something I should be doing, or is this patch just sitting there waiting for one of you to find the time for another look (which is fine, by the way - I know how it is to be busy with things!)? Cheers, and thanks, Manuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14399:199,performance,time,time,199,"Hi @guitargeek, all, I think all the requested changes are in (feel free to have a peek). Is there something I should be doing, or is this patch just sitting there waiting for one of you to find the time for another look (which is fine, by the way - I know how it is to be busy with things!)? Cheers, and thanks, Manuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14399:139,safety,patch,patch,139,"Hi @guitargeek, all, I think all the requested changes are in (feel free to have a peek). Is there something I should be doing, or is this patch just sitting there waiting for one of you to find the time for another look (which is fine, by the way - I know how it is to be busy with things!)? Cheers, and thanks, Manuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14399:139,security,patch,patch,139,"Hi @guitargeek, all, I think all the requested changes are in (feel free to have a peek). Is there something I should be doing, or is this patch just sitting there waiting for one of you to find the time for another look (which is fine, by the way - I know how it is to be busy with things!)? Cheers, and thanks, Manuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14399
https://github.com/root-project/root/pull/14400:45,deployability,releas,release,45,"> Amazing!!! It's just missing a line in the release notes to signal the removal. Feel free to add it in this PR or another. Thanks for the approval! The release notes got a bit out of sync with the build options at this point, not only because of `pyroot_legacy`. I'll make a separate PR to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14400
https://github.com/root-project/root/pull/14400:154,deployability,releas,release,154,"> Amazing!!! It's just missing a line in the release notes to signal the removal. Feel free to add it in this PR or another. Thanks for the approval! The release notes got a bit out of sync with the build options at this point, not only because of `pyroot_legacy`. I'll make a separate PR to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14400
https://github.com/root-project/root/pull/14400:199,deployability,build,build,199,"> Amazing!!! It's just missing a line in the release notes to signal the removal. Feel free to add it in this PR or another. Thanks for the approval! The release notes got a bit out of sync with the build options at this point, not only because of `pyroot_legacy`. I'll make a separate PR to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14400
https://github.com/root-project/root/pull/14400:62,security,sign,signal,62,"> Amazing!!! It's just missing a line in the release notes to signal the removal. Feel free to add it in this PR or another. Thanks for the approval! The release notes got a bit out of sync with the build options at this point, not only because of `pyroot_legacy`. I'll make a separate PR to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14400
https://github.com/root-project/root/pull/14400:123,performance,time,time,123,"> Is there any sibling PR for roottest to be made? Yes, I will also do that, but it was not necessary to do so at the same time. The changes are independent this time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14400
https://github.com/root-project/root/pull/14400:162,performance,time,time,162,"> Is there any sibling PR for roottest to be made? Yes, I will also do that, but it was not necessary to do so at the same time. The changes are independent this time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14400
https://github.com/root-project/root/issues/14401:9,deployability,build,build,9,"When you build ROOT master? In the current master this option should be off by default. You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:101,deployability,toggl,toggle,101,"When you build ROOT master? In the current master this option should be off by default. You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:35,energy efficiency,current,current,35,"When you build ROOT master? In the current master this option should be off by default. You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:113,usability,behavi,behavior,113,"When you build ROOT master? In the current master this option should be off by default. You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:162,usability,menu,menu,162,"When you build ROOT master? In the current master this option should be off by default. You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:167,usability,command,command,167,"When you build ROOT master? In the current master this option should be off by default. You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:170,deployability,toggl,toggle,170,"I used the latest master, with last commit ff63f90d3f6abddc1494859c85ba6647868186cc from Friday. At least with this commit the frame is still red. Is it also possible to toggle this behavior programatically from within C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:182,usability,behavi,behavior,182,"I used the latest master, with last commit ff63f90d3f6abddc1494859c85ba6647868186cc from Friday. At least with this commit the frame is still red. Is it also possible to toggle this behavior programatically from within C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:35,deployability,build,builds,35,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:181,deployability,build,build,181,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:117,security,control,controller,117,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:135,security,control,controller,135,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:219,security,control,controller,219,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:237,security,control,controller,237,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:117,testability,control,controller,117,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:135,testability,control,controller,135,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:219,testability,control,controller,219,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:237,testability,control,controller,237,Probably you are doing incremental builds. Flag set here:. https://github.com/root-project/root/blob/master/ui5/canv/controller/Canvas.controller.js#L89. You can check in your ROOT build directory in `$ROOTSYS/ui5/canv/controller/Canvas.controller.js` that:. ```. cp.highlight_gpad = false;. ```. It was changed by https://github.com/root-project/root/commit/5af4b57a376ce56fb738828806afdfd82b79d469 in September 2023.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:112,deployability,modul,modules,112,Yes this default is set to false. But when using for example the qtweb tutorial the `cp?.highlight_pad` in _/js/modules/gpad/TPadPainter.mjs_ is not false and triggeres the red frame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:112,modifiability,modul,modules,112,Yes this default is set to false. But when using for example the qtweb tutorial the `cp?.highlight_pad` in _/js/modules/gpad/TPadPainter.mjs_ is not false and triggeres the red frame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:112,safety,modul,modules,112,Yes this default is set to false. But when using for example the qtweb tutorial the `cp?.highlight_pad` in _/js/modules/gpad/TPadPainter.mjs_ is not false and triggeres the red frame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:116,security,control,controller,116,"Now I see! . It is because qtweb example uses ROOT6 canvas without openui5 gui - only plain graphics. Therefore ui5 controller code is not invoked. . You can manually add `painter.highlight_gpad = false` into `$ROOTSYS/ui5/canvas/canvas6.html` file in line around constructor:. ```. ... let painter = new TCanvasPainter(null, null);. painter.online_canvas = true;. painter.use_openui = is_ui5;. painter.batch_mode = is_batch;. painter.highlight_gpad = false;. ... ```. I will later provide PR which will fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:116,testability,control,controller,116,"Now I see! . It is because qtweb example uses ROOT6 canvas without openui5 gui - only plain graphics. Therefore ui5 controller code is not invoked. . You can manually add `painter.highlight_gpad = false` into `$ROOTSYS/ui5/canvas/canvas6.html` file in line around constructor:. ```. ... let painter = new TCanvasPainter(null, null);. painter.online_canvas = true;. painter.use_openui = is_ui5;. painter.batch_mode = is_batch;. painter.highlight_gpad = false;. ... ```. I will later provide PR which will fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:13,deployability,updat,update,13,After recent update in JSROOT/webgui problem is resolved now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:13,safety,updat,update,13,After recent update in JSROOT/webgui problem is resolved now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/issues/14401:13,security,updat,update,13,After recent update in JSROOT/webgui problem is resolved now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14401
https://github.com/root-project/root/pull/14403:52,integrability,pub,public,52,Maybe we can just make `RPageSource::UnsealPage` a `public` method?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:306,deployability,stage,stage,306,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:51,integrability,pub,public,51,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:246,integrability,interfac,interface,246,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:246,interoperability,interfac,interface,246,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:246,modifiability,interfac,interface,246,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:228,safety,avoid,avoid,228,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:234,security,expos,exposing,234,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:139,usability,clear,clear,139,"> Maybe we can just make RPageSource::UnsealPage a public method? In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:52,integrability,pub,public,52,"I'm confused, `RSealedPageHelper` already makes it `public`, just via a wrapper function, no? Sure, it's in the `Internal` namespace, but if we want it `public` I don't really see the difference to `Detail::RPageSource`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:72,integrability,wrap,wrapper,72,"I'm confused, `RSealedPageHelper` already makes it `public`, just via a wrapper function, no? Sure, it's in the `Internal` namespace, but if we want it `public` I don't really see the difference to `Detail::RPageSource`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:153,integrability,pub,public,153,"I'm confused, `RSealedPageHelper` already makes it `public`, just via a wrapper function, no? Sure, it's in the `Internal` namespace, but if we want it `public` I don't really see the difference to `Detail::RPageSource`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:72,interoperability,wrapper,wrapper,72,"I'm confused, `RSealedPageHelper` already makes it `public`, just via a wrapper function, no? Sure, it's in the `Internal` namespace, but if we want it `public` I don't really see the difference to `Detail::RPageSource`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:101,integrability,pub,public,101,"Since we likely move RPageSink/Source to Internal anyway, I think it's true that making `UnsealPage` public is the easiest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:91,integrability,pub,public,91,"With RPageSource/Sink in Internal, we should have everything in place to make `UnsealPage` public. @enirolf can you take another look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:76,integrability,pub,public,76,"Yes, indeed! I will close this PR and open another one to make `UnsealPage` public.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/pull/14403:20,usability,close,close,20,"Yes, indeed! I will close this PR and open another one to make `UnsealPage` public.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14403
https://github.com/root-project/root/issues/14404:371,availability,operat,operators,371,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:678,deployability,build,build,678,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:848,deployability,contain,contains,848,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:297,interoperability,syntact,syntactic,297,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:637,interoperability,syntact,syntactic,637,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:781,interoperability,compatib,compatible,781,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:873,interoperability,syntact,syntactic,873,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:726,safety,valid,validate,726,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:86,security,ident,identifiers,86,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:157,security,sign,significance,157,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:726,security,validat,validate,726,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:684,usability,tool,tools,684,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:891,usability,document,document,891,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals. - arithmetic operators, such as +, -, *, /. - parentheses and other brackets. - characters in comment delimiters, such as #, /*, --, or ⍝. - quotation marks delimiting strings. - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:395,availability,avail,available,395,"A way I can see this fixed is through a ""passthrough Define"", which basically reads the content of a column and passes it to another one, *without* jitting, following the example above. ```. TObject& f(TObject& o){return o}; . [...]. auto df = df.Define(""nots"", f, {""s.""});. [...]. ```. If this is acceptable, it is required to . a. Document this carefully. b. Make sure a way to do the same is available from python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:88,performance,content,content,88,"A way I can see this fixed is through a ""passthrough Define"", which basically reads the content of a column and passes it to another one, *without* jitting, following the example above. ```. TObject& f(TObject& o){return o}; . [...]. auto df = df.Define(""nots"", f, {""s.""});. [...]. ```. If this is acceptable, it is required to . a. Document this carefully. b. Make sure a way to do the same is available from python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:395,reliability,availab,available,395,"A way I can see this fixed is through a ""passthrough Define"", which basically reads the content of a column and passes it to another one, *without* jitting, following the example above. ```. TObject& f(TObject& o){return o}; . [...]. auto df = df.Define(""nots"", f, {""s.""});. [...]. ```. If this is acceptable, it is required to . a. Document this carefully. b. Make sure a way to do the same is available from python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:395,safety,avail,available,395,"A way I can see this fixed is through a ""passthrough Define"", which basically reads the content of a column and passes it to another one, *without* jitting, following the example above. ```. TObject& f(TObject& o){return o}; . [...]. auto df = df.Define(""nots"", f, {""s.""});. [...]. ```. If this is acceptable, it is required to . a. Document this carefully. b. Make sure a way to do the same is available from python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:395,security,availab,available,395,"A way I can see this fixed is through a ""passthrough Define"", which basically reads the content of a column and passes it to another one, *without* jitting, following the example above. ```. TObject& f(TObject& o){return o}; . [...]. auto df = df.Define(""nots"", f, {""s.""});. [...]. ```. If this is acceptable, it is required to . a. Document this carefully. b. Make sure a way to do the same is available from python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/issues/14404:333,usability,Document,Document,333,"A way I can see this fixed is through a ""passthrough Define"", which basically reads the content of a column and passes it to another one, *without* jitting, following the example above. ```. TObject& f(TObject& o){return o}; . [...]. auto df = df.Define(""nots"", f, {""s.""});. [...]. ```. If this is acceptable, it is required to . a. Document this carefully. b. Make sure a way to do the same is available from python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14404
https://github.com/root-project/root/pull/14410:138,integrability,messag,messages,138,"Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:138,interoperability,messag,messages,138,"Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:152,usability,close,close,152,"Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:140,integrability,messag,messages,140,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:140,interoperability,messag,messages,140,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:590,interoperability,format,format,590,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:621,reliability,doe,doesn,621,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:656,reliability,doe,doesn,656,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:265,safety,valid,valid,265,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:154,usability,close,close,154,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:491,usability,guid,guidelines,491,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14410:713,usability,guid,guidelines,713,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue? Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14410
https://github.com/root-project/root/pull/14411:299,energy efficiency,current,currently,299,"> > On Windows, we see an issue with lexing, but I guess this is caused by #14374, right @bellenot ? > . > Yes, very likely the same as [#14200 (comment)](https://github.com/root-project/root/pull/14200#issuecomment-1903602682) on `master`... Right, `tutorial-multicore-imt101_parTreeProcessing` is currently broken on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14411
https://github.com/root-project/root/pull/14413:203,availability,operat,operator,203,"@dpiparo: I have addressed one of your comment. The other ones (e.g. on the arguments passed by values) I would prefer to address in a separate PR, since it affects the internal API of SOFIE and all the operator code. So, if you don't have further objections, I would like to merge this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14413
https://github.com/root-project/root/pull/14413:178,deployability,API,API,178,"@dpiparo: I have addressed one of your comment. The other ones (e.g. on the arguments passed by values) I would prefer to address in a separate PR, since it affects the internal API of SOFIE and all the operator code. So, if you don't have further objections, I would like to merge this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14413
https://github.com/root-project/root/pull/14413:178,integrability,API,API,178,"@dpiparo: I have addressed one of your comment. The other ones (e.g. on the arguments passed by values) I would prefer to address in a separate PR, since it affects the internal API of SOFIE and all the operator code. So, if you don't have further objections, I would like to merge this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14413
https://github.com/root-project/root/pull/14413:178,interoperability,API,API,178,"@dpiparo: I have addressed one of your comment. The other ones (e.g. on the arguments passed by values) I would prefer to address in a separate PR, since it affects the internal API of SOFIE and all the operator code. So, if you don't have further objections, I would like to merge this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14413
https://github.com/root-project/root/pull/14413:112,usability,prefer,prefer,112,"@dpiparo: I have addressed one of your comment. The other ones (e.g. on the arguments passed by values) I would prefer to address in a separate PR, since it affects the internal API of SOFIE and all the operator code. So, if you don't have further objections, I would like to merge this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14413
https://github.com/root-project/root/issues/14416:43,deployability,version,version,43,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:179,deployability,version,version,179,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:43,integrability,version,version,43,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:179,integrability,version,version,179,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:43,modifiability,version,version,43,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:179,modifiability,version,version,179,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:126,safety,except,except,126,It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:45,deployability,version,version,45,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:181,deployability,version,version,181,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:45,integrability,version,version,45,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:181,integrability,version,version,181,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:45,modifiability,version,version,45,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:181,modifiability,version,version,181,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:128,safety,except,except,128,"> It looks like it is looking at some python version which is not is the same place on your machine... not sure how to fix that except by reinstalling root locally to get the right version. something should have changed if it worked before. Nope, it's apparently a real issue from coming from ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:62,deployability,version,version,62,Thanks for the swift reply. In case it helps:. ```. python3 --version. Python 3.10.12. whereis python3. python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz. which python3. /usr/bin/python3. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:62,integrability,version,version,62,Thanks for the swift reply. In case it helps:. ```. python3 --version. Python 3.10.12. whereis python3. python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz. which python3. /usr/bin/python3. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:165,interoperability,share,share,165,Thanks for the swift reply. In case it helps:. ```. python3 --version. Python 3.10.12. whereis python3. python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz. which python3. /usr/bin/python3. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:184,interoperability,share,share,184,Thanks for the swift reply. In case it helps:. ```. python3 --version. Python 3.10.12. whereis python3. python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz. which python3. /usr/bin/python3. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:62,modifiability,version,version,62,Thanks for the swift reply. In case it helps:. ```. python3 --version. Python 3.10.12. whereis python3. python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz. which python3. /usr/bin/python3. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:39,usability,help,helps,39,Thanks for the swift reply. In case it helps:. ```. python3 --version. Python 3.10.12. whereis python3. python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz. which python3. /usr/bin/python3. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/issues/14416:31,security,ident,identified,31,Thanks! FYI the issue has been identified and will be fixed soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14416
https://github.com/root-project/root/pull/14417:6,energy efficiency,green,green,6,> All green - fantastic! Maybe give @pcanal a chance to take a quick look. Thanks Jonas! And I already asked him...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:134,deployability,patch,patch,134,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:19,energy efficiency,reduc,reduce,19,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:181,energy efficiency,core,core,181,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:214,energy efficiency,core,core,214,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:289,energy efficiency,core,core,289,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:327,energy efficiency,core,core,327,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:40,performance,lock,lock,40,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:134,safety,patch,patch,134,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:40,security,lock,lock,40,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14417:134,security,patch,patch,134,"Excellent fix!! To reduce the number of lock being taken in the case of function with multiple arguments, can you check if using this patch *instead* also works:. ```. diff --git a/core/base/inc/TPluginManager.h b/core/base/inc/TPluginManager.h. index 129ad1b078..0e44c803ed 100644. --- a/core/base/inc/TPluginManager.h. +++ b/core/base/inc/TPluginManager.h. @@ -169,6 +169,8 @@ private:. auto name = typeid(std::tuple<T...>).name();. if (!fArgTupleTypeInfo[nargs - 1].empty()). return name == fArgTupleTypeInfo[nargs - 1];. +. + R__LOCKGUARD(gInterpreterMutex);. if (!CheckExactMatch<T...>(0, params...)). return false;. fArgTupleTypeInfo[nargs - 1] = name;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14417
https://github.com/root-project/root/pull/14419:19,safety,review,review,19,"Hi, thanks for the review!! Yes, the PR is missing half of the work: only rootls is touched, but the GH issue asks about rootprint. See: . > I am not sure what's the best way to do the same for rootprint, so marking this as draft.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:19,testability,review,review,19,"Hi, thanks for the review!! Yes, the PR is missing half of the work: only rootls is touched, but the GH issue asks about rootprint. See: . > I am not sure what's the best way to do the same for rootprint, so marking this as draft.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:69,interoperability,format,formatting,69,"Ah, okay I missed this information! I'll think about it. As for code-formatting, I have used [black](https://github.com/psf/black) with the `--line-length=120` options for all the ROOT Python sources I touched. However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:233,interoperability,format,formatting,233,"Ah, okay I missed this information! I'll think about it. As for code-formatting, I have used [black](https://github.com/psf/black) with the `--line-length=120` options for all the ROOT Python sources I touched. However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:355,safety,review,review,355,"Ah, okay I missed this information! I'll think about it. As for code-formatting, I have used [black](https://github.com/psf/black) with the `--line-length=120` options for all the ROOT Python sources I touched. However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:355,testability,review,review,355,"Ah, okay I missed this information! I'll think about it. As for code-formatting, I have used [black](https://github.com/psf/black) with the `--line-length=120` options for all the ROOT Python sources I touched. However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:24,interoperability,format,formatting,24,"> However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier. done! thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:146,safety,review,review,146,"> However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier. done! thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:146,testability,review,review,146,"> However, if you do re-formatting of code you touch in a PR, it's good to do so in a separate commit to separate form from function and make the review easier. done! thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:57,safety,test,tests,57,"These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:57,testability,test,tests,57,"These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:59,safety,test,tests,59,"> These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils. test added :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:166,safety,test,test,166,"> These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils. test added :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:59,testability,test,tests,59,"> These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils. test added :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14419:166,testability,test,test,166,"> These new functionalities would really benefit from some tests if you can, to be added in https://github.com/root-project/roottest/tree/master/python/cmdLineUtils. test added :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14419
https://github.com/root-project/root/pull/14420:143,energy efficiency,alloc,allocation,143,Hi @mdessole : good job. I agree with @lmoneta about the test. Could you also add some wording in the documentation to remind the fact that an allocation may take place under certain circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:57,safety,test,test,57,Hi @mdessole : good job. I agree with @lmoneta about the test. Could you also add some wording in the documentation to remind the fact that an allocation may take place under certain circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:57,testability,test,test,57,Hi @mdessole : good job. I agree with @lmoneta about the test. Could you also add some wording in the documentation to remind the fact that an allocation may take place under certain circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:102,usability,document,documentation,102,Hi @mdessole : good job. I agree with @lmoneta about the test. Could you also add some wording in the documentation to remind the fact that an allocation may take place under certain circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:169,energy efficiency,alloc,allocated,169,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:159,performance,memor,memory,159,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:71,security,modif,modified,71,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:83,usability,document,documentation,83,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:110,usability,clear,clear,110,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:159,usability,memor,memory,159,"Hi @dpiparo and @lmoneta, I included an additional gtest suite. I also modified to documentation so that it's clear that whenever b is rectangular, additional memory is allocated to compute a^(-1).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:120,modifiability,pac,package,120,Thank you Monica for adding a test. . Just a comment on the PR title : [smatrix] --> [matrix] . The PR is in the matrix package and not smatrix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:30,safety,test,test,30,Thank you Monica for adding a test. . Just a comment on the PR title : [smatrix] --> [matrix] . The PR is in the matrix package and not smatrix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14420:30,testability,test,test,30,Thank you Monica for adding a test. . Just a comment on the PR title : [smatrix] --> [matrix] . The PR is in the matrix package and not smatrix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14420
https://github.com/root-project/root/pull/14421:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14421
https://github.com/root-project/root/pull/14422:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14422
https://github.com/root-project/root/pull/14422:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14422
https://github.com/root-project/root/pull/14422:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14422
https://github.com/root-project/root/pull/14424:26,deployability,patch,patch,26,Thanks @YuryYury for this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14424
https://github.com/root-project/root/pull/14424:26,safety,patch,patch,26,Thanks @YuryYury for this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14424
https://github.com/root-project/root/pull/14424:26,security,patch,patch,26,Thanks @YuryYury for this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14424
https://github.com/root-project/root/issues/14425:35,deployability,patch,patch,35,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:212,deployability,patch,patch,212,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:148,energy efficiency,core,core,148,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:267,interoperability,platform,platforms,267,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:541,interoperability,semant,semantics,541,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:246,reliability,doe,does,246,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:304,reliability,doe,doesn,304,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:479,reliability,doe,does,479,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:35,safety,patch,patch,35,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:212,safety,patch,patch,212,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:35,security,patch,patch,35,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:212,security,patch,patch,212,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:404,usability,clear,clear,404,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:26,energy efficiency,model,model,26,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:243,energy efficiency,draw,drawbacks,243,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:26,security,model,model,26,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:219,security,sign,signature,219,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:674,testability,regress,regression,674,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:718,usability,user,users,718,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:828,usability,user,users,828,"As you say, the ownership model is a bit too ad-hoc here, and the `unique_ptr` is not even `std::move()`d here, which is not good. If you move it as one should, you can actually use an overload with an rvalue reference signature, which has no drawbacks in this case:. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. void print() { std::cout << ""A: "" << mA << ""\n""; }. A() {}. A(int val): mA(val) {}. };. void foo(std::unique_ptr<A> && a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33). ROOT.foo(ROOT.std.move(a)). ```. Given that it's easy to work around the problem, that this issue is not a regression, and that it was not reported by users yet, I suggest to give this low priority. To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:492,availability,operat,operator,492,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:547,availability,operat,operator,547,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:882,availability,operat,operator,882,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:937,availability,operat,operator,937,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1060,availability,sli,slightly,1060,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1232,availability,error,error,1232,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1629,availability,down,downstream,1629,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1082,deployability,version,version,1082,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1144,deployability,fail,fails,1144,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1612,deployability,API,APIs,1612,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1458,energy efficiency,core,core,1458,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1082,integrability,version,version,1082,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1612,integrability,API,APIs,1612,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:217,interoperability,specif,specifically,217,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1612,interoperability,API,APIs,1612,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1082,modifiability,version,version,1082,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1529,modifiability,paramet,parameter,1529,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1568,modifiability,paramet,parameter,1568,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:414,performance,memor,memory,414,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:804,performance,memor,memory,804,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1232,performance,error,error,1232,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1060,reliability,sli,slightly,1060,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1144,reliability,fail,fails,1144,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:359,safety,valid,valid,359,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1232,safety,error,error,1232,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1523,safety,input,input,1523,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:206,security,sign,signature,206,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1502,security,sign,signatures,1502,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1693,security,sign,signatures,1693,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:64,usability,user,users,64,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:414,usability,memor,memory,414,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:804,usability,memor,memory,804,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1232,usability,error,error,1232,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1523,usability,input,input,1523,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/issues/14425:1640,usability,user,user,1640,"> To be reconsidered if this problem would also get reported by users, or it becomes a bigger nuisance for us developers than it is now. The difference between my original snippet and yours is the function signature, specifically the fact that your function expects an r-value reference while mine expects the argument to be passed by-value. The following is valid C++ code. ```cpp. #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. int main() { foo(C()); }. ```. And the following is an equivalent PyROOT example. ```python. import ROOT. ROOT.gInterpreter.Declare(r"""""". #include <iostream>. #include <memory>. struct C {. int m_i{42};. C() = default;. C(const C &) = delete;. C &operator=(const C &) = delete;. C(C &&) = default;. C &operator=(C &&) = default;. };. void foo(C c) { std::cout << ""C: "" << c.m_i << ""\n""; }. """"""). ROOT.foo(ROOT.C()). # Or the slightly more verbose version. c = ROOT.C(). ROOT.foo(ROOT.std.move(c)). ```. Which fails (in both function call cases) with:. ```. $: python t.py 1 ↵. input_line_38:6:23: error: call to deleted constructor of 'C'. ((void (&)(C))foo)(*(C*)args[0]);. ^~~~~~~~~~~~. input_line_35:9:5: note: 'C' has been explicitly marked deleted here. C(const C &) = delete;. ^. ```. Bottom line, the problem at its core is that we cannot make use of function signatures where the input parameter type is non-copyable and the parameter is taken by value. Neither in our APIs, neither in downstream user code which might want to write similar function signatures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14425
https://github.com/root-project/root/pull/14426:239,deployability,patch,patch,239,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:313,deployability,scale,scale,313,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:546,deployability,build,builds,546,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:599,deployability,patch,patches,599,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:313,energy efficiency,scale,scale,313,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:313,modifiability,scal,scale,313,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:313,performance,scale,scale,313,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:239,safety,patch,patch,239,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:599,safety,patch,patches,599,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:18,security,session,session,18,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:239,security,patch,patch,239,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:599,security,patch,patches,599,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:444,usability,support,support,444,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:713,usability,minim,minimum,713,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:801,usability,progress,progress,801,"After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. Since this is blocking an experiment framework from moving forward, the support for Windows is not crucial, so in the latest commit I decided to remove the change on Windows builds. @vgvassilev The change is taken from cppyy's patches, but as you also suggested it's not trivial to just take all the code verbatim. So I restricted it to the minimum amount of changes that apply for the reported use case. Let me know how to make progress here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:241,deployability,patch,patch,241,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:315,deployability,scale,scale,315,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1154,deployability,version,version,1154,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1237,deployability,patch,patch,1237,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:315,energy efficiency,scale,scale,315,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1154,integrability,version,version,1154,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:315,modifiability,scal,scale,315,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1154,modifiability,version,version,1154,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:315,performance,scale,scale,315,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:718,performance,memor,memory,718,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:241,safety,patch,patch,241,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1237,safety,patch,patch,1237,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:20,security,session,session,20,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:241,security,patch,patch,241,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1237,security,patch,patch,1237,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:406,testability,understand,understand,406,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:718,usability,memor,memory,718,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:1260,usability,user,user-defined,1260,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. We could surely introduce a small patch to cover the `unique_ptr` use case for Windows, but that will never scale to all classes that have a deleted copy constructor. I believe it would be better to understand what's going on here. From a quick look into the Clang sources, it seems there is some special handling if the (move) constructor is templated. And indeed, this seems to be one difference between [Microsoft's STL](https://github.com/microsoft/STL/blob/32e65ac3e54a7150202cc9b3cc4de7330d58d24e/stl/inc/memory#L3227-L3237) on the one hand and [libc++](https://github.com/llvm/llvm-project/blob/7ff2dc3b49eee49edf9a2c2c7051d643c38e21b1/libcxx/include/__memory/unique_ptr.h#L190-L198) and [libstdc++](https://github.com/gcc-mirror/gcc/blob/24d5e0bf19f27a89a13f64b4b8750dbde89bdaa0/libstdc%2B%2B-v3/include/bits/unique_ptr.h#L359-L376) on the other: Microsoft's STL *only* has templated move constructors while the other two have a ""default"" version for matching types. If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:20,security,session,session,20,"> After a debugging session with @bellenot , we have found out that `CXXRecordDecl` created for a `std::unique_ptr` on Windows will say that `RD->hasMoveConstructor()` is `false`, which imho is astonishing. Have we called `Sema::ForceDeclarationOfImplicitMembers(RD)` to force the compiler to synthesize the implicit data members?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:57,deployability,patch,patch,57,"> If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor... Interesting! This is something I can test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:57,safety,patch,patch,57,"> If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor... Interesting! This is something I can test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:185,safety,test,test,185,"> If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor... Interesting! This is something I can test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:57,security,patch,patch,57,"> If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor... Interesting! This is something I can test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:185,testability,test,test,185,"> If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor... Interesting! This is something I can test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:80,usability,user,user-defined,80,"> If this hypothesis is correct, it would mean that this patch wouldn't work on user-defined types either with only a templated move constructor... Interesting! This is something I can test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:289,availability,error,error,289,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:289,performance,error,error,289,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:26,reliability,doe,does,26,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:611,reliability,doe,does,611,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:21,safety,test,test,21,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:289,safety,error,error,289,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:21,testability,test,test,21,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:604,testability,simpl,simply,604,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:289,usability,error,error,289,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:604,usability,simpl,simply,604,"So indeed this other test does not work. ```python. import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{. int mA{42};. A() {}. A(const A&) = delete;. template<typename T = int>. A(A &&) {}. };. int foo(A a = A{}) { return a.mA; }. '''). print(ROOT.foo()). ```. ```. input_line_36:18:45: error: call to deleted constructor of 'A'. new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));. ^~~~~~~~~~~~. input_line_35:5:5: note: 'A' has been explicitly marked deleted here. A(const A&) = delete;. ^. ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:150,reliability,doe,doesn,150,"> Have we called Sema::ForceDeclarationOfImplicitMembers(RD) to force the compiler to synthesize the implicit data members? Yes I tried also that and doesn't change the situation I described in the post above. ```cpp. if (RD) {. clang::Sema &S = fInterp->getSema();. S.ForceDeclarationOfImplicitMembers(RD);. }. if(RD && (RD->hasTrivialCopyConstructor() && !RD->hasSimpleCopyConstructor()) && RD->hasMoveConstructor()) {. // move construction as needed for classes (note that this is implicit). callbuf << ""std::move(*("" << type_name.c_str() << ""*)args["" << i << ""])"";. } else {. // otherwise, and for builtins, use copy construction of temporary*/. callbuf << ""*("" << type_name.c_str() << ""*)args["" << i << ""]"";. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:34,integrability,wrap,wrapper,34,Can you paste the entire callfunc wrapper?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:34,interoperability,wrapper,wrapper,34,Can you paste the entire callfunc wrapper?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2959,availability,avail,available,2959,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2504,deployability,log,logic,2504,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2751,deployability,Build,BuildTypeTrait,2751,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2891,integrability,wrap,wrapper,2891,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2249,interoperability,standard,standardese,2249,"fleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2891,interoperability,wrapper,wrapper,2891,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:114,reliability,doe,does,114,"> Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2342,reliability,doe,doesn,2342,"ZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the expli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2959,reliability,availab,available,2959,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2504,safety,log,logic,2504,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2959,safety,avail,available,2959,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2504,security,log,logic,2504,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2959,security,availab,available,2959,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:107,testability,simpl,simply,107,"> Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:2504,testability,log,logic,2504,"lnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow? I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:107,usability,simpl,simply,107,"> Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from. > . > ```. > | | |-MoveConstructor. > ```. > . > to. > . > ```. > | | |-MoveConstructor exists non_trivial user_declared. > ```. > . > I am surely not expert enough in this area, but I noticed that when the constructor is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:32,safety,input,input,32,Thanks @hahnjo for the valuable input! I will try to digest `SemaExprCXX.cpp`. Unfortunately. ```. RD->defaultedCopyConstructorIsDeleted(): 0. ```. So it seems I can't use that method to distinguish this case either...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/pull/14426:32,usability,input,input,32,Thanks @hahnjo for the valuable input! I will try to digest `SemaExprCXX.cpp`. Unfortunately. ```. RD->defaultedCopyConstructorIsDeleted(): 0. ```. So it seems I can't use that method to distinguish this case either...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14426
https://github.com/root-project/root/issues/14427:452,deployability,updat,update,452,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:121,integrability,abstract,abstract,121,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:44,interoperability,bind,binding,44,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:199,interoperability,bind,bindings,199,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:44,modifiability,bind,binding,44,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:59,modifiability,extens,extensions,59,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:121,modifiability,abstract,abstract,121,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:199,modifiability,bind,bindings,199,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:452,safety,updat,update,452,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:452,security,updat,update,452,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:30,usability,experien,experience,30,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:480,usability,close,close,480,"Dear @Esword618 ,. We have no experience on binding Python extensions with ROOT and pybind11. In principle, if you could abstract away the rest of ROOT maybe there could be a way to produce your own bindings for your own classes that make use of some other ROOT class internally. I would think that a nice idea to try out. If you are willing to give it a shot, let us know the results of your experiment! I will keep the issue open in case you want to update us, otherwise we can close this :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:51,security,expos,expose,51,What would be the advantage of using `pybind11` to expose the ROOT classes to a python prompt instead of `pyroot`? (or did I misunderstand you request).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:94,availability,avail,available,94,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:170,energy efficiency,load,loading,170,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:135,interoperability,conflict,conflict,135,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:170,performance,load,loading,170,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:94,reliability,availab,available,94,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:94,safety,avail,available,94,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:94,security,availab,available,94,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:153,security,polic,policy,153,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:292,testability,understand,understanding,292,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:284,usability,help,help,284,"Dear @Esword618 ,. I see what you mean now, thanks for the clarification. That feature is not available in ROOT. It would also somehow conflict with the policy of lazily loading the different parts of ROOT that happens today in PyROOT (by design). But you can let us know if you need help in understanding some parts of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:51,usability,support,support,51,"I am closing the issue since it seems clarified. I support what @vepadulano said above, please do not hesitate to reach out to us on https://root-forum.cern.ch/ if you need support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14427:173,usability,support,support,173,"I am closing the issue since it seems clarified. I support what @vepadulano said above, please do not hesitate to reach out to us on https://root-forum.cern.ch/ if you need support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14427
https://github.com/root-project/root/issues/14429:0,energy efficiency,Current,Currently,0,Currently i am busy with other things. I will do when i will have time,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:66,performance,time,time,66,Currently i am busy with other things. I will do when i will have time,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:79,safety,test,tested,79,"Grate! . There can be several other places like that, therefore code should be tested on real use-case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:79,testability,test,tested,79,"Grate! . There can be several other places like that, therefore code should be tested on real use-case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:20,safety,test,tested,20,"Meanwhile it can be tested with this file https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root . JSROOT is ok with this file, i tested it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:135,safety,test,tested,135,"Meanwhile it can be tested with this file https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root . JSROOT is ok with this file, i tested it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:20,testability,test,tested,20,"Meanwhile it can be tested with this file https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root . JSROOT is ok with this file, i tested it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:135,testability,test,tested,135,"Meanwhile it can be tested with this file https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root . JSROOT is ok with this file, i tested it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:305,deployability,fail,fails,305,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:212,reliability,doe,does,212,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:305,reliability,fail,fails,305,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:60,safety,compl,complex,60,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:60,security,compl,complex,60,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:178,testability,Simpl,Simple,178,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:178,usability,Simpl,Simple,178,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:221,usability,help,help,221,This server/file has much more problems. . Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers. Plus redirected filename uses URI coding. Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:62,availability,down,download,62,"> File is working locally. Yes, `curl` and `wget` are able to download the file. . But davix library used in `TDavixFile` is not working with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:102,availability,haproxy,haproxy,102,"Since i understand that my case is special, since we are doing redirections to local ip addresses via haproxy. i have alternative to use `root://` to access same file, it think we can close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:150,security,access,access,150,"Since i understand that my case is special, since we are doing redirections to local ip addresses via haproxy. i have alternative to use `root://` to access same file, it think we can close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:8,testability,understand,understand,8,"Since i understand that my case is special, since we are doing redirections to local ip addresses via haproxy. i have alternative to use `root://` to access same file, it think we can close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:184,usability,close,close,184,"Since i understand that my case is special, since we are doing redirections to local ip addresses via haproxy. i have alternative to use `root://` to access same file, it think we can close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:334,availability,down,download,334,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:231,interoperability,standard,standard,231,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:241,interoperability,XML,XMLHttpRequest,241,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:360,performance,memor,memory,360,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:86,security,access,access,86,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:288,security,access,access,288,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:404,security,access,access,404,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:10,testability,understand,understand,10,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:120,usability,close,close,120,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:360,usability,memor,memory,360,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14429:424,usability,prefer,prefer,424,"> Since i understand that my case is special and i have alternative to use root:// to access same file, it think we can close it. It is very special case and need to be fixed in both `TWebFile` and `TDavixFile`. . Also jsroot with standard `XMLHttpRequest` is not able to provide partial access to this file and only works after full download of the file into memory. Therefore if there are other way to access such files I prefer to keep ROOT code as is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14429
https://github.com/root-project/root/issues/14433:155,availability,fault,faulty,155,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:127,deployability,log,logic,127,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:155,energy efficiency,fault,faulty,155,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:155,performance,fault,faulty,155,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:155,reliability,fault,faulty,155,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:127,safety,log,logic,127,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:155,safety,fault,faulty,155,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:127,security,log,logic,127,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:127,testability,log,logic,127,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/issues/14433:37,usability,clear,clear,37,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14433
https://github.com/root-project/root/pull/14434:27,availability,error,error,27,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:161,availability,Error,Error,161,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:242,availability,error,error,242,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:61,deployability,build,build,61,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:371,deployability,build,build,371,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:27,performance,error,error,27,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:161,performance,Error,Error,161,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:242,performance,error,error,242,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:27,safety,error,error,27,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:161,safety,Error,Error,161,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:242,safety,error,error,242,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:27,usability,error,error,27,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:161,usability,Error,Error,161,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:242,usability,error,error,242,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```. Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'. TString tmva_python_exe{TMVA::Python_Executable()};. ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:51,availability,avail,available,51,This is probably due to the fact that pymva is not available. You need to protect for this in the tutorial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:51,reliability,availab,available,51,This is probably due to the fact that pymva is not available. You need to protect for this in the tutorial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:51,safety,avail,available,51,This is probably due to the fact that pymva is not available. You need to protect for this in the tutorial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/pull/14434:51,security,availab,available,51,This is probably due to the fact that pymva is not available. You need to protect for this in the tutorial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14434
https://github.com/root-project/root/issues/14438:46,energy efficiency,alloc,allocated,46,"> The function returns a `Results *` that was allocated but never destroyed. hmmm but the function keeps track of it in the internal member variable fResults. ` fResults[t][resultsName] = newresults;`. The Dataset destructor seems to delete then all those new's. ```. // delete results. for (std::vector< std::map< TString, Results* > >::iterator it = fResults.begin(); it != fResults.end(); ++it) {. for (std::map< TString, Results* >::iterator itMap = (*it).begin(); itMap != (*it).end(); ++itMap) {. delete itMap->second;. }. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14438
https://github.com/root-project/root/issues/14438:140,modifiability,variab,variable,140,"> The function returns a `Results *` that was allocated but never destroyed. hmmm but the function keeps track of it in the internal member variable fResults. ` fResults[t][resultsName] = newresults;`. The Dataset destructor seems to delete then all those new's. ```. // delete results. for (std::vector< std::map< TString, Results* > >::iterator it = fResults.begin(); it != fResults.end(); ++it) {. for (std::map< TString, Results* >::iterator itMap = (*it).begin(); itMap != (*it).end(); ++itMap) {. delete itMap->second;. }. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14438
https://github.com/root-project/root/issues/14439:200,interoperability,specif,specific,200,"> Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:226,reliability,pra,practice,226,"> Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:24,usability,guid,guidelines,24,"> Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:172,usability,guid,guideline,172,"> Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:384,deployability,automat,automatically,384,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:430,deployability,Releas,Release,430,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:620,deployability,automat,automatically,620,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:652,deployability,Releas,Release,652,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:689,deployability,releas,released,689,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:1011,deployability,version,version,1011,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:472,integrability,messag,message,472,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:588,integrability,messag,message,588,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:1011,integrability,version,version,1011,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:208,interoperability,specif,specific,208,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:472,interoperability,messag,message,472,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:588,interoperability,messag,message,588,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:1011,modifiability,version,version,1011,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:571,performance,time,time,571,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:234,reliability,pra,practice,234,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:384,testability,automat,automatically,384,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:620,testability,automat,automatically,620,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:26,usability,guid,guidelines,26,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:180,usability,guid,guideline,180,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:465,usability,custom,custom,465,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:581,usability,custom,custom,581,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'? > . > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch. or. b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:17,deployability,automat,automatically,17,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:49,deployability,Releas,Release,49,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:86,deployability,releas,released,86,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:135,deployability,releas,release,135,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:165,deployability,releas,released,165,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:174,deployability,version,version,174,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:287,deployability,releas,release,287,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:318,deployability,version,version,318,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:174,integrability,version,version,174,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:318,integrability,version,version,318,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:114,interoperability,specif,specific,114,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:174,modifiability,version,version,174,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:318,modifiability,version,version,318,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:17,testability,automat,automatically,17,"> it will not be automatically added to the 6.30 Release Notes because it was already released. This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:19,deployability,automat,automatically,19,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:51,deployability,Releas,Release,51,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:88,deployability,releas,released,88,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:143,deployability,releas,release,143,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:173,deployability,releas,released,173,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:182,deployability,version,version,182,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:295,deployability,releas,release,295,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:326,deployability,version,version,326,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:555,deployability,automat,automatic,555,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:643,deployability,releas,release,643,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:182,integrability,version,version,182,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:326,integrability,version,version,326,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:445,integrability,messag,message,445,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:512,integrability,messag,message,512,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:589,integrability,protocol,protocol,589,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:679,integrability,messag,message,679,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:122,interoperability,specif,specific,122,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:445,interoperability,messag,message,445,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:512,interoperability,messag,message,512,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:589,interoperability,protocol,protocol,589,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:679,interoperability,messag,message,679,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:182,modifiability,version,version,182,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:326,modifiability,version,version,326,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
https://github.com/root-project/root/issues/14439:19,testability,automat,automatically,19,"> > it will not be automatically added to the 6.30 Release Notes because it was already released. > . > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing? Thanks for the message. True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14439
